<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/us/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2021-04-22T23:15:39+00:00</updated>
  <id>/tag/us/feed.xml</id>

  
  
  

  
    <title type="html">UBI Center | </title>
  

  
    <subtitle>Analyzing universal basic income policies with open-source research</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">California’s basic income bill still needs work</title>
      <link href="/california-ab65-calubi" rel="alternate" type="text/html" title="California's basic income bill still needs work" />
      <published>2021-04-03T00:00:00+00:00</published>
      <updated>2021-04-03T00:00:00+00:00</updated>
      <id>/california-ab65-calubi</id>
      <content type="html" xml:base="/california-ab65-calubi">&lt;p&gt;In 2018, the California Democratic Party &lt;a href=&quot;https://www.cnbc.com/2018/03/12/california-democratic-party-platform-supports-universal-basic-income.html&quot;&gt;added&lt;/a&gt; Universal Basic Income (UBI) to their party platform. Two years later, Assemblymember Evan Low (D-Campbell), who served as a &lt;a href=&quot;https://www.ebar.com/news/latest_news//286838&quot;&gt;national co-chair&lt;/a&gt; for Andrew Yang’s presidential campaign, introduced a &lt;a href=&quot;https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=201920200AB2712&quot;&gt;UBI bill&lt;/a&gt; for California. In December 2020, Low reintroduced the bill for the 2020-21 legislative session, this time with Senator Scott Wiener (D-San Francisco) as a coauthor and adding some minor revisions.&lt;/p&gt;

&lt;p&gt;That bill, &lt;a href=&quot;https://leginfo.legislature.ca.gov/faces/billNavClient.xhtml?bill_id=202120220AB65&quot;&gt;AB65&lt;/a&gt;, establishes the CalUBI program to provide $1,000 per month to most California adults. We estimate that CalUBI would cut poverty by 83% while adding $282 billion to the annual state deficit. In this article, we provide more detail into these estimates and suggest paths toward feasible legislation.&lt;/p&gt;

&lt;h2 id=&quot;californias-extreme-economy&quot;&gt;California’s extreme economy&lt;/h2&gt;

&lt;p&gt;California is both rich and poor. It ranks #8 among US states on &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_U.S._states_and_territories_by_GDP_per_capita&quot;&gt;GDP per capita&lt;/a&gt;, and #7 on &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_U.S._states_and_territories_by_income&quot;&gt;median household income&lt;/a&gt;. It also ranks &lt;a href=&quot;https://www.epi.org/multimedia/unequal-states-of-america/#/California&quot;&gt;#7 on income inequality&lt;/a&gt;,&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and accordingly, its poverty rate is higher than its GDP would predict, &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_U.S._states_and_territories_by_poverty_rate#cite_note-9&quot;&gt;ranking #25&lt;/a&gt; based on the Official Poverty Measure (OPM).&lt;/p&gt;

&lt;p&gt;When using the Supplemental Poverty Measure&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; (SPM), however, California ranks &lt;a href=&quot;https://www.census.gov/content/dam/Census/library/publications/2020/demo/p60-272.pdf&quot;&gt;#1 on both overall poverty and child poverty&lt;/a&gt;: 17.2% of Californians are in poverty, compared to 12.5% of Americans. In fact, California has ranked #1 on SPM poverty every year since the Census Bureau first reported it by state in &lt;a href=&quot;https://www2.census.gov/library/publications/2012/demo/p60-244.pdf&quot;&gt;2011&lt;/a&gt;. That’s because the SPM, unlike the OPM, adjusts for taxes, in-kind benefits (like the Supplemental Nutrition Assistance Program), and, most importantly for California, local housing costs. As a result of its housing shortage (California has the &lt;a href=&quot;https://twitter.com/MaxGhenis/status/1187898060409466882&quot;&gt;fewest housing units per adult&lt;/a&gt; of any state), housing in California is notoriously expensive—&lt;a href=&quot;https://worldpopulationreview.com/state-rankings/cost-of-living-index-by-state&quot;&gt;second only to Hawaii&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;California also stands out in terms of taxation.
Due to Prop 13 (1978), a ballot measure that limits property taxes, it ranks &lt;a href=&quot;https://wallethub.com/edu/states-with-the-highest-and-lowest-property-taxes/11585&quot;&gt;#35 on local property taxes&lt;/a&gt;.
The state offsets that revenue loss with high income taxes—its &lt;a href=&quot;https://taxfoundation.org/publications/state-individual-income-tax-rates-and-brackets/&quot;&gt;top marginal rate is 13.3%&lt;/a&gt;, the highest of any state—and high sales taxes—its &lt;a href=&quot;https://taxfoundation.org/2020-sales-taxes/&quot;&gt;state rate is 7.25%&lt;/a&gt;, the highest of any state, and its state and local combined rate ranks #9. It is among the 41 states that &lt;a href=&quot;https://www.cbpp.org/research/state-budget-and-tax/state-taxes-on-capital-gains&quot;&gt;tax capital gains as ordinary income&lt;/a&gt;, which raises significant revenue given its residents claim 8.1% of their income in capital gains, a higher share than all but three states. The net result is a &lt;a href=&quot;https://taxfoundation.org/publications/state-local-tax-burden-rankings/&quot;&gt;state and local tax burden of 11.5%&lt;/a&gt;, ranking #8 across states.&lt;/p&gt;

&lt;p&gt;The state deploys these higher-than-average tax revenues for generous transfers. It matches the federal Earned Income Tax Credit at &lt;a href=&quot;https://www.urban.org/policy-centers/cross-center-initiatives/state-and-local-finance-initiative/state-and-local-backgrounders/state-earned-income-tax-credits&quot;&gt;85% for low income workers&lt;/a&gt;, a higher rate than any other state, and adds a &lt;a href=&quot;https://www.ftb.ca.gov/file/personal/credits/california-earned-income-tax-credit.html&quot;&gt;Young Child Tax Credit&lt;/a&gt; supplement for qualifying families with children under age 6. Due to generously funding the Aid to Dependent Families Children (cash welfare) matching grant in the 1990s, California today gets &lt;a href=&quot;https://www.niskanencenter.org/inequitable-and-inadequate-reforming-federal-grants-for-state-social-assistance-programs/&quot;&gt;more per child&lt;/a&gt; from its replacement, Temporary Assistance for Needy Families (TANF), than all states but New York and Vermont. And while California has &lt;a href=&quot;https://ca.db101.org/ca/programs/income_support/calworks/program2.htm&quot;&gt;not yet eliminated asset limits for TANF&lt;/a&gt;, it is among the 33 states to have &lt;a href=&quot;https://www.cbpp.org/research/food-assistance/snaps-broad-based-categorical-eligibility-supports-working-families-and&quot;&gt;raised income and asset limits for SNAP&lt;/a&gt;. It &lt;a href=&quot;https://www.kff.org/medicaid/issue-brief/status-of-state-medicaid-expansion-decisions-interactive-map/&quot;&gt;expanded Medicaid&lt;/a&gt; as quickly as it could following the passage of the Affordable Care Act, and overall spends more &lt;a href=&quot;https://www.taxpolicycenter.org/statistics/state-and-local-general-expenditures-capita&quot;&gt;per capita on public welfare&lt;/a&gt; than 43 states.&lt;/p&gt;

&lt;p&gt;Lack of welfare spending doesn’t explain California’s highest-in-the-nation poverty rate, but more inclusive and generous welfare programs can nonetheless ameliorate it.&lt;/p&gt;

&lt;h2 id=&quot;the-impact-of-ab65&quot;&gt;The impact of AB65&lt;/h2&gt;

&lt;p&gt;AB65 creates the CalUBI program, which provides $1,000 per month to Californians meeting these eligibility conditions:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(A) Is a resident, and has been a resident for the three most recent consecutive taxable years.&lt;/p&gt;

  &lt;p&gt;(B) Is at least 18 years of age.&lt;/p&gt;

  &lt;p&gt;(C) Is not currently incarcerated in a county jail or the state prison.&lt;/p&gt;

  &lt;p&gt;(D) Reported gross income that does not exceed 200 percent of the median per capita income for the eligible recipient’s current county of residence, as determined by the United States Census Bureau.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;AB65 also levies a 1% tax on incomes above $2 million.&lt;/p&gt;

&lt;p&gt;Using data from the 2017-2019 Current Population Survey March Supplements, we estimate that 58% of Californians would be eligible for CalUBI. 77% meet the age requirement, 83% meet the income requirement,&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; 97% meet the migration requirement,&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; and 99.5% meet the incarceration requirement.&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; Providing the $12,000 payment to each of the 23.6 million eligible recipients would cost $283 billion per year.&lt;/p&gt;

&lt;p&gt;Enacting the policy would reduce poverty by 83%, to 3.0%; for context, Minnesota currently has the lowest poverty rate, at 6.5%. It would also reduce inequality by 26%.&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt; For these calculations, we assume that the CalUBI would not be counted as income for tax liabilities or benefit eligibility, though this may be unrealistic: Alaska’s Permanent Fund Dividend does not affect eligibility for programs like &lt;a href=&quot;https://ak.db101.org/ak/programs/income_support/ssi/faqs.htm#_q7329&quot;&gt;Supplemental Security Income&lt;/a&gt;, but the payments are &lt;a href=&quot;https://pfd.alaska.gov/Payments/Tax-Information#:~:text=Even%20if%20part%20or%20all,Permanent%20Fund%20Dividend%20is%20%24992.00.&quot;&gt;subject&lt;/a&gt; to federal income tax (Alaska has &lt;a href=&quot;http://tax.alaska.gov/programs/programs/index.aspx?10001&quot;&gt;no state income tax&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;However, the program lacks funding. Using the Policy Simulation Library’s &lt;a href=&quot;https://www.compute.studio/PSLmodels/Tax-Brain/&quot;&gt;TaxBrain&lt;/a&gt; tool and the IRS Public Use File, we estimate that a 1% tax on incomes above $2 million would raise &lt;a href=&quot;https://compute.studio/PSLmodels/Tax-Brain/50389/&quot;&gt;$2.33 billion federally&lt;/a&gt;. Scaling that down to California by its share of personal income in excess of $100,000&lt;sup id=&quot;fnref:7&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt; yields a revenue estimate of $340 million, or 0.1% of CalUBI’s cost.&lt;/p&gt;

&lt;h2 id=&quot;perverse-incentives-from-means-testing&quot;&gt;Perverse incentives from means-testing&lt;/h2&gt;

&lt;p&gt;The CalUBI means-testing approach creates perverse incentives in two ways: its immediate benefit cliff discourages people from working, and its geographic cliff discourages people from residing in lower-income counties.&lt;/p&gt;

&lt;p&gt;As an example, consider a single resident of Santa Clara County earning $100,000 per year, let’s call them Alex. Santa Clara County is home to Google, Apple, San Jose, and Assemblymember Evan Low, and its median personal income is about $53,500, second only to San Francisco County ($55,000) in California. With income below twice the median, Alex would be eligible for CalUBI. Their net income would be $100,000 minus $28,743 in federal, FICA, and state income taxes,&lt;sup id=&quot;fnref:8&quot;&gt;&lt;a href=&quot;#fn:8&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt; plus $12,000 in CalUBI, totaling $83,257.&lt;/p&gt;

&lt;p&gt;Now suppose Alex is offered a job that pays 10% more. At $110,000 income, they exceed the $107,000 CalUBI threshold for Santa Clara County, so they no longer receive the $12,000 payment. As a result of their raise, Alex’s net income &lt;em&gt;falls 7%&lt;/em&gt; from $83,257 to $77,162. To get back to their original net income, they’d have to earn more than $120,000; if Alex can’t get at least a 20% raise, they’re better off with their current income.&lt;/p&gt;

&lt;p&gt;Suppose that instead of taking a new higher-paying job in Santa Clara County, Alex considers moving to neighboring Santa Cruz County for a job paying the same $100,000. Where the median income in Santa Clara County is over $53,000, it’s under $33,000 in Santa Cruz County. Alex would lose CalUBI eligibility, and their net income would therefore fall $12,000—a full 14%—if they were to cross the county border.&lt;/p&gt;

&lt;p&gt;These welfare cliffs and discontinuities harmfully distort behavior. People like Alex will avoid earning too much money, or perhaps they’ll favor a job with deferred compensation plans to lower their income, or they’ll defer capital gains themselves, all to stay under the threshold in their county. They’ll also avoid moving to lower-income areas, maybe choosing to commute from a more expensive area instead to retain CalUBI eligibility. This would increase geographic inequalities by raising high-income people’s demand to live in high-income areas. Just as &lt;a href=&quot;https://www.sciencedirect.com/science/article/abs/pii/S0094119011000520&quot;&gt;school district boundaries determine housing prices&lt;/a&gt;, county boundaries would do the same under this policy.&lt;/p&gt;

&lt;h2 id=&quot;universal-designs&quot;&gt;Universal designs&lt;/h2&gt;

&lt;p&gt;AB65’s cliff could be mitigated by phasing the benefit out with income, as programs like SNAP and the Earned Income Tax Credit do, and as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_income_tax&quot;&gt;negative income tax&lt;/a&gt; cousin of UBI does. Depending on the design, this could avoid Alex’s quagmire and ensure that any additional dollar they earn raises their net income.&lt;/p&gt;

&lt;p&gt;However, this phase-out would be a hidden tax: if the benefit phases out at 50 cents per dollar of earnings, that’s equivalent to a 50% marginal tax, on top of normal taxes and phase-outs of other benefits. The array of means-tested benefits explains why parents around the poverty line currently face &lt;a href=&quot;https://aspe.hhs.gov/system/files/aspe-files/260661/brief2-overviewmtranalyses.pdf&quot;&gt;higher marginal tax rates&lt;/a&gt; than any other group in the country, often exceeding 50% and sometimes exceeding 100%.&lt;/p&gt;

&lt;p&gt;Further, if the benefit is means-tested but distributed monthly, recipients would be required to report changes to their income regularly. This costs recipients of existing benefits time and explains some of the &lt;a href=&quot;https://www.cbpp.org/research/romneys-charge-that-most-federal-low-income-spending-goes-for-overhead-and-bureaucrats-is&quot;&gt;high administrative overhead costs&lt;/a&gt;. To support income reporting requirements for the American Rescue Plan’s monthly Child Tax Credit expansion, the IRS is building a portal, an endeavor that’s &lt;a href=&quot;https://abc11.com/child-tax-credit-irs-stimulus-delay/10432494/&quot;&gt;slowing the delivery&lt;/a&gt; of funds to low and middle income parents. The alternative is how refundable tax credits work today: calculated from income often a year or more in the past, without the ability to meet real-time needs, especially when financial circumstances change.&lt;/p&gt;

&lt;p&gt;Other AB65 targeting provisions have drawbacks, too. County-level income thresholds will induce migration even with phase-outs. A three-year residency requirement conflicts with Californians’ &lt;a href=&quot;https://www.latimes.com/california/story/2021-04-01/skelton-ppic-poll-immigration-healthcare-california&quot;&gt;pro-immigration sentiment&lt;/a&gt; (the Alaska Permanent Fund Dividend only has a &lt;a href=&quot;https://pfd.alaska.gov/Eligibility/Requirements&quot;&gt;one-year requirement&lt;/a&gt;). And as our other research shows, excluding children misses an opportunity to &lt;a href=&quot;https://child-allowance.ubicenter.org/empirical.html&quot;&gt;improve lifelong development&lt;/a&gt;, and to &lt;a href=&quot;https://blog.ubicenter.org/20210120/child-ubi-share.html&quot;&gt;cost-effectively reduce poverty&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Universality bypasses all of these issues. Universal payments don’t discourage work through hidden taxes or cliffs; they don’t require recipients to report income more than once per tax year; they can be efficiently distributed; they demonstrate inclusiveness toward newcomers; and they provide kids the resources they need to thrive.&lt;/p&gt;

&lt;p&gt;Of course, universality is more expensive. Expanding CalUBI to each person in California would raise the cost from $283 billion to $472 billion—a sixth of the &lt;a href=&quot;https://fred.stlouisfed.org/series/CARGSP&quot;&gt;state’s GDP&lt;/a&gt; and more than twice the &lt;a href=&quot;https://www.gov.ca.gov/2021/01/08/governor-newsom-proposes-2021-22-state-budget&quot;&gt;current state budget&lt;/a&gt;. If funds could be conjured to pay for it, it would drive down the poverty rate to 1.2%.&lt;/p&gt;

&lt;p&gt;But given a fixed budget, poverty is often minimized by spreading it across more of the population in smaller amounts. Spreading the $283 billion across each person in California would give each about $590 per month, and this would have virtually the same antipoverty impact as the original proposal.&lt;sup id=&quot;fnref:9&quot;&gt;&lt;a href=&quot;#fn:9&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt; That is, excluding children and newcomers offsets the progressivity of excluding higher-income people (not to mention the distortions).&lt;/p&gt;

&lt;p&gt;Nevertheless, the $283 billion price tag makes AB65 unworkable as written. What policies could make progress toward its goals?&lt;/p&gt;

&lt;h2 id=&quot;a-california-child-allowance&quot;&gt;A California child allowance&lt;/h2&gt;

&lt;p&gt;Monthly cash transfers can efficiently relieve poverty and reduce inequality at the state level, but given to everyone, they’re costly. Even a $100 monthly UBI would cost California $48 billion per year, more than a fifth of the current state budget.&lt;/p&gt;

&lt;p&gt;A focus on children could be a tenable, effective starting point. Given &lt;a href=&quot;https://www.census.gov/quickfacts/CA&quot;&gt;9 million&lt;/a&gt; of California’s 40 million residents are under 18, a $100 monthly child allowance (cash payments given to parents for each child) would cost $11 billion annually. That’s 0.4% of &lt;a href=&quot;https://fred.stlouisfed.org/series/CARGSP&quot;&gt;California’s $2.9 trillion GDP&lt;/a&gt; or 5% of its proposed &lt;a href=&quot;http://www.ebudget.ca.gov/2021-22/pdf/BudgetSummary/SummaryCharts.pdf&quot;&gt;$227 billion budget&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our &lt;a href=&quot;https://child-allowance.ubicenter.org/simulation.html&quot;&gt;child allowance simulation&lt;/a&gt; shows that this would be achievable and impactful in California. The state could fund a $100 monthly child allowance with a 1% income tax, cutting child poverty by 16%, adult poverty by 5%, and overall poverty by 7%. The bottom decile of Californians would see incomes rise by 11%, and on average only the upper three deciles would lose income, and only by under 1%.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/2021-04-03-california-ab65-calubi/deciles_100_child_allowance.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A number of revenue options could fund such a program:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adding to the income tax, as described in the above simulation.&lt;/li&gt;
  &lt;li&gt;Applying California’s expected &lt;a href=&quot;https://apnews.com/article/gavin-newsom-california-coronavirus-pandemic-8d01e88ceeb4b0bc6cb1fb0d6a8d72b7&quot;&gt;$15 billion surplus&lt;/a&gt; in 2021. This wouldn’t fund a permanent policy, but could fund a $100 monthly child allowance, plus a $100 monthly young child supplement, for a trial year.&lt;/li&gt;
  &lt;li&gt;Taxing commercial property at market value would raise between &lt;a href=&quot;https://lao.ca.gov/BallotAnalysis/Proposition?number=15&amp;amp;year=2020#:~:text=The%20measure%20requires%20commercial%20and,over%20time%20starting%20in%202022.&quot;&gt;$6.5 and $11.5 billion&lt;/a&gt; per year. A ballot measure to do this &lt;a href=&quot;https://www.latimes.com/california/story/2020-11-10/proposition-15-commercial-property-tax-defeated&quot;&gt;narrowly lost&lt;/a&gt; in 2020.&lt;/li&gt;
  &lt;li&gt;Ending the mortgage interest deduction on second homes would raise $250 million per year. &lt;a href=&quot;https://a25.asmdc.org/press-releases/20210219-assemblymember-alex-lee-introduces-repeal-regressive-mortgage-interest&quot;&gt;AB946&lt;/a&gt; proposes to do this, though the revenue is used for a first-time home buyer program.&lt;/li&gt;
  &lt;li&gt;Conforming parts of the state income tax code with federal tax code changes enacted as part of the 2017 Tax Cuts and Jobs Act; this would raise &lt;a href=&quot;https://lao.ca.gov/Publications/Report/3959&quot;&gt;$1.7 billion&lt;/a&gt; per year.&lt;/li&gt;
  &lt;li&gt;Replacing other benefit programs, such as CalWORKS (the state TANF program), Special Supplemental Nutrition Program for Women, Infants, and Children (WIC), the child component of CalEITC, and the Young Child Tax Credit.&lt;/li&gt;
  &lt;li&gt;Instituting an estate tax, as was &lt;a href=&quot;https://sd11.senate.ca.gov/news/20190326-senator-wiener-introduces-california-estate-tax-proposal-fund-programs-reducing-wealth&quot;&gt;proposed in 2017&lt;/a&gt; and which was estimated to raise between $500 million and $1 billion per year.&lt;/li&gt;
  &lt;li&gt;Repealing other state tax deductions that primarily benefit high income households, such as the property tax deduction.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;or-a-california-young-child-allowance&quot;&gt;Or a California young child allowance&lt;/h2&gt;

&lt;p&gt;For greater affordability, California could focus on the group whose development is most sensitive to financial conditions, and whose needs are most costly due to childcare: young kids. Providing a young child allowance of $100 per month to each of California’s 3 million Californians children under age 6 would cost $4 billion annually.&lt;/p&gt;

&lt;p&gt;Washington and Sacramento have both already prioritized the needs of young kids: the American Rescue Plan’s &lt;a href=&quot;https://www.brookings.edu/blog/up-front/2021/03/11/new-child-tax-credit-could-slash-poverty-now-and-boost-social-mobility-later/&quot;&gt;Child Tax Credit expansion&lt;/a&gt; provides an extra $50 per month to children under age 6 compared to older kids, and California provides a Young Child Tax Credit (YCTC) of up to $1,000 per year to families who qualify for the federal Earned Income Tax Credit and have at least one child under age 6.&lt;/p&gt;

&lt;p&gt;Transforming the YCTC into a young child allowance of $100 per month per child would have several benefits, by:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Including families with no earned income who are ineligible for EITC&lt;/li&gt;
  &lt;li&gt;Providing more money for families with multiple young children&lt;/li&gt;
  &lt;li&gt;Avoiding adding a 20% marginal tax to qualifying families with income between the phase-out region of $25,000 and $30,000&lt;/li&gt;
  &lt;li&gt;Including children whose parents earn above $30,000&lt;/li&gt;
  &lt;li&gt;Enhancing the benefit by at least $200 per year for all current recipients&lt;/li&gt;
  &lt;li&gt;Meeting needs on a monthly basis&lt;/li&gt;
  &lt;li&gt;Potentially sending parents money proactively, rather than relying on families filing tax returns (many of whom don’t have to file since they don’t owe taxes)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;california-can-make-policy-progress-toward-ubi&quot;&gt;California can make policy progress toward UBI&lt;/h2&gt;

&lt;p&gt;California is in many ways the center of the UBI conversation. Its tech community has long promoted the idea as an insurance policy against technological unemployment, supporting Andrew Yang’s candidacy, funding basic income pilots, and donating to &lt;a href=&quot;https://www.givedirectly.org/basic-income/&quot;&gt;GiveDirectly’s basic income experiment&lt;/a&gt; in Kenya. Of the 40 mayors in the &lt;a href=&quot;https://www.mayorsforagi.org/&quot;&gt;Mayors for a Guaranteed Income&lt;/a&gt; network, 6 lead California cities, including its founder, Michael Tubbs. The pilot in Tubbs’s hometown of Stockton was one of the first of a &lt;a href=&quot;https://basicincome.stanford.edu/experiments-map/&quot;&gt;wave&lt;/a&gt; that now includes Compton, Long Beach, Oakland, Marin County, and San Francisco.&lt;/p&gt;

&lt;p&gt;These pilots may provide more precise estimates of how people respond to guaranteed income, but we already know from a slew of studies that cash transfers &lt;a href=&quot;https://child-allowance.ubicenter.org/empirical.html&quot;&gt;improve health, well-being, and educational outcomes&lt;/a&gt;, and that they &lt;a href=&quot;https://scholar.harvard.edu/files/remahanna/files/151016_labor_supply_paper_draft_final.pdf&quot;&gt;don’t reduce labor supply much&lt;/a&gt; or &lt;a href=&quot;https://blogs.worldbank.org/impactevaluations/do-poor-waste-transfers-booze-and-cigarettes-no&quot;&gt;raise spending on vices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In introducing AB65, Assemblymember Low has started the next phase of California’s UBI conversation. The idea is ready for policy implementation, but if it’s to be more than signaling, it will need to fit in a budget the governor can sign.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Nick Rodelo provided research assistance for this post.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;California has the 7th highest ratio of top 1% to bottom 99% income: 30.7, compared to 26.3 nationwide. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Poverty researchers &lt;a href=&quot;https://www.vox.com/2015/9/16/9337041/supplemental-poverty-measure&quot;&gt;generally prefer the SPM&lt;/a&gt; over the OPM, and that’s what the UBI Center uses in its analysis. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;We interpreted a county’s “median per capita income” as the median personal income among people with income greater than zero. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;The Current Population Survey only includes migration data from one year ago. 1.0% of Californians lived in a different state one year ago. To approximate the three-year requirement, we tripled the observation weights for this 1%; this also served to “age” the data from the 2017-2019 period to 2021, as it produces a total population estimate of 40.1 million. The University of Virginia Weldon Cooper Center for Public Service &lt;a href=&quot;https://demographics.coopercenter.org/united-states-interactive-map&quot;&gt;projects&lt;/a&gt; that California’s 2020 population was 40.4 million. &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;The &lt;a href=&quot;https://www.census.gov/programs-surveys/cps/technical-documentation/methodology.html&quot;&gt;Current Population Survey omits prisoners&lt;/a&gt;, so we used data from the &lt;a href=&quot;https://www.prisonpolicy.org/profiles/CA.html&quot;&gt;Prison Policy Initiative&lt;/a&gt;, which estimates that 213,000 Californians were in state prison or county jail as of 2018. &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;We measure inequality as the Gini index of the ratio between a person’s poverty unit’s (similar to a household) resources and its poverty threshold. The current value is 0.42, and under CalUBI it would fall to 0.31. &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:7&quot;&gt;
      &lt;p&gt;High incomes in the Current Population Survey are obscured for privacy, such that only three records show personal income above $2 million. It estimates that Californians have a total of $321 billion of income in excess of $100,000, 15% of the $2.18 trillion of US personal income in excess of $100,000. &lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:8&quot;&gt;
      &lt;p&gt;This and other calculations apply &lt;a href=&quot;https://smartasset.com/taxes/california-tax-calculator#VBrctYjFhi&quot;&gt;SmartAsset’s calculator&lt;/a&gt;. &lt;a href=&quot;#fnref:8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:9&quot;&gt;
      &lt;p&gt;3.08% vs 3.03%. &lt;a href=&quot;#fnref:9&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;max&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="california" />
      

      
        <summary type="html">AB65 would cut poverty by 83%, but add $282 billion to the state deficit.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">UBI as a means of reducing gendered poverty</title>
      <link href="/womens-day-2021" rel="alternate" type="text/html" title="UBI as a means of reducing gendered poverty" />
      <published>2021-03-08T00:00:00+00:00</published>
      <updated>2021-03-08T00:00:00+00:00</updated>
      <id>/womens-day-2021</id>
      <content type="html" xml:base="/womens-day-2021">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;This year’s &lt;a href=&quot;https://www.internationalwomensday.com/&quot;&gt;International Women’s Day&lt;/a&gt; asks its celebrants to challenge the world in order to change it (&lt;a href=&quot;https://twitter.com/search?q=%23ChooseToChallenge&quot;&gt;#ChooseToChallenge&lt;/a&gt;).
The following simulation seeks to challenge the fact that women in the United States are more likely to be impoverished than men.
In our analysis, we evaluate a Universal Basic Income (UBI), funded by a flat income tax, as a possible solution for both alleviating poverty and narrowing the gendered poverty gap.&lt;sup id=&quot;fnref:modeling&quot;&gt;&lt;a href=&quot;#fn:modeling&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Poverty rates for children are roughly equal between genders, while adult women experience poverty at rates 17 percent greater than adult men: 12.4 percent vs. 10.6 percent.
As a general trend, the difference in poverty rates between women and men increases with age.
For example, 20.8 percent of women aged 85 or older are in poverty, compared to only 14.5 percent of men of the same age.
Among people aged 85 or older, women experience deep poverty at twice the rate of men.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import microdf as mdf
import numpy as np
import pandas as pd
import plotly.express as px
import ubicenter

df = pd.read_csv(
    &quot;https://github.com/MaxGhenis/datarepo/raw/master/pppub20.csv.gz&quot;,
    usecols=[
        &quot;MARSUPWT&quot;,
        &quot;SPM_RESOURCES&quot;,
        &quot;SPM_POVTHRESHOLD&quot;,
        &quot;SPM_WEIGHT&quot;,
        &quot;SPM_NUMPER&quot;,
        &quot;A_SEX&quot;,
        &quot;A_AGE&quot;,
        &quot;SPM_ID&quot;,
        &quot;AGI&quot;,
    ],
)
df.columns = df.columns.str.lower()
df[&quot;weight&quot;] = df.marsupwt / 100
df[&quot;spm_weight&quot;] = df.spm_weight / 100
df[&quot;female&quot;] = df.a_sex == 2
df[&quot;poverty&quot;] = df.spm_resources &amp;lt; df.spm_povthreshold
df[&quot;deep_poverty&quot;] = df.spm_resources &amp;lt; (df.spm_povthreshold / 2)
df[&quot;sex&quot;] = np.where(df.female, &quot;Female&quot;, &quot;Male&quot;)

spm = df.groupby(
    [&quot;spm_id&quot;, &quot;spm_resources&quot;, &quot;spm_weight&quot;, &quot;spm_povthreshold&quot;, &quot;spm_numper&quot;]
)[[&quot;agi&quot;]].sum()
spm[&quot;agi_pos&quot;] = np.maximum(spm.agi, 0)
spm.reset_index(inplace=True)

total_population = df.weight.sum()
total_agi_pos = mdf.weighted_sum(spm, &quot;agi_pos&quot;, &quot;spm_weight&quot;)

# Bin into ages aligning with 18 year old threshold.
DARK_PURPLE = &quot;#46296E&quot;  # Official Intl Womens Day Color.
LIGHT_PURPLE = &quot;#907EA8&quot;  # Lightened version.
DARK_GREY = &quot;#9E9E9E&quot;  # Gray 500 from Material Design.
LIGHT_GREY = &quot;#BDBDBD&quot;  # Gray 400.

COLOR_MAP = {
    &quot;Female&quot;: DARK_PURPLE,
    &quot;Male&quot;: LIGHT_GREY,
    &quot;Female poverty&quot;: DARK_PURPLE,
    &quot;Female deep poverty&quot;: LIGHT_PURPLE,
    &quot;Male poverty&quot;: DARK_GREY,
    &quot;Male deep poverty&quot;: LIGHT_GREY,
    &quot;Poverty&quot;: DARK_PURPLE,
    &quot;Deep poverty&quot;: LIGHT_PURPLE,
}

df[&quot;age_group&quot;] = pd.cut(df.a_age + 1, np.arange(0, 91, 5), labels=np.arange(0, 86, 5))
pov_age = mdf.weighted_mean(
    df, [&quot;poverty&quot;, &quot;deep_poverty&quot;], &quot;marsupwt&quot;, groupby=[&quot;age_group&quot;, &quot;sex&quot;]
)
pov_age = pov_age.round(3)
pov_age.reset_index(inplace=True)
pov_age = pov_age.melt([&quot;age_group&quot;, &quot;sex&quot;], [&quot;poverty&quot;, &quot;deep_poverty&quot;])
pov_age[&quot;label&quot;] = (
    pov_age.sex
    + &quot; &quot;
    + np.where(pov_age.variable == &quot;poverty&quot;, &quot;poverty&quot;, &quot;deep poverty&quot;)
)

fig = px.line(
    pov_age, x=&quot;age_group&quot;, y=&quot;value&quot;, color=&quot;label&quot;, color_discrete_map=COLOR_MAP
)
fig.update_layout(
    title=&quot;Poverty by gender and age&quot;,
    xaxis_title=&quot;Age (in 5-year bins)&quot;,
    yaxis_title=&quot;SPM poverty rate (2019)&quot;,
    legend_title=&quot;&quot;,
    yaxis_tickformat=&quot;%&quot;,
    yaxis_range=[0, pov_age.value.max() * 1.1] #fig.update_xaxes(range=[1.5, 4.5])
)

fig.update_traces(mode=&quot;markers+lines&quot;, hovertemplate=None)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/womens-day-2021/2020-03-08-womens-day-2021-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
pov_age_diff = pov_age[pov_age.variable == &quot;poverty&quot;].pivot_table(
    values=&quot;value&quot;, index=&quot;age_group&quot;, columns=&quot;sex&quot;
)
pov_age_diff[&quot;female_minus_male&quot;] = pov_age_diff.Female - pov_age_diff.Male
pov_age_diff.female_minus_male.plot()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/womens-day-2021/2020-03-08-womens-day-2021-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;With a significant difference in rates of poverty for adult women as compared to men, how might a UBI help close that gap?
Our past modeling has shown that a UBI would lessen poverty across demographic groups, and also shrink poverty disparities by &lt;a href=&quot;https://blog.ubicenter.org/20210118/racial-poverty-disparities-mlk-day-2021.html&quot;&gt;race&lt;/a&gt;, &lt;a href=&quot;https://blog.ubicenter.org/20201012/indigenous.html&quot;&gt;Indigenous heritage&lt;/a&gt;, and &lt;a href=&quot;https://blog.ubicenter.org/20200731/ada30.html&quot;&gt;disability status&lt;/a&gt;.
Our research here shows that it would do the same by gender.&lt;/p&gt;

&lt;p&gt;After receiving a UBI, the poverty rates for women and men converge as the monthly amount increases (we’ve focused on adults here).
Consistent with our past simulations, a $300 monthly UBI would halve the rate of female poverty and female deep poverty.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def pov(female, monthly_ubi):
    # Calculate poverty rates for a gender subset given a monthly UBI amount.
    cost = monthly_ubi * total_population * 12
    tax_rate = cost / total_agi_pos  # Divide by positive AGI.
    spm[&quot;new_resources&quot;] = (
        spm.spm_resources - tax_rate * spm.agi_pos + (12 * monthly_ubi * spm.spm_numper)
    )
    person = df[(df.female == female) &amp;amp; (df.a_age &amp;gt; 17)].merge(
        spm[[&quot;spm_id&quot;, &quot;new_resources&quot;]], on=&quot;spm_id&quot;
    )
    return pd.Series(
        dict(
            pov=mdf.poverty_rate(
                person, income=&quot;new_resources&quot;, threshold=&quot;spm_povthreshold&quot;, w=&quot;weight&quot;
            ),
            deep_pov=mdf.deep_poverty_rate(
                person, income=&quot;new_resources&quot;, threshold=&quot;spm_povthreshold&quot;, w=&quot;weight&quot;
            ),
        )
    )


def pov_row(row):
    return pov(row.female, row.monthly_ubi)


gender_ubi = mdf.cartesian_product(
    {&quot;female&quot;: [True, False], &quot;monthly_ubi&quot;: np.arange(0, 1001, 100)}
)
gender_ubi = pd.concat([gender_ubi, gender_ubi.apply(pov_row, axis=1)], axis=1)

gender_ubi_long = gender_ubi.melt(
    id_vars=[&quot;female&quot;, &quot;monthly_ubi&quot;], value_vars=[&quot;pov&quot;, &quot;deep_pov&quot;]
)
gender_ubi_long[&quot;label&quot;] = (
    pd.Series(np.where(gender_ubi_long.female, &quot;Female&quot;, &quot;Male&quot;))
    + &quot; &quot;
    + pd.Series(np.where(gender_ubi_long.variable == &quot;pov&quot;, &quot;poverty&quot;, &quot;deep poverty&quot;))
)
gender_ubi_long.value = gender_ubi_long.value.round(3)

fig = px.line(
    gender_ubi_long,
    x=&quot;monthly_ubi&quot;,
    y=&quot;value&quot;,
    color=&quot;label&quot;,
    color_discrete_map=COLOR_MAP,
)

fig.update_layout(
    title=&quot;Poverty by gender and UBI amount&quot;,
    xaxis_title=&quot;Monthly universal basic income amount (funded by flat income tax)&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    yaxis_title=&quot;SPM poverty rate (2019)&quot;,
    legend_title=&quot;&quot;,
    yaxis_tickformat=&quot;%&quot;,
)

fig.update_traces(mode=&quot;markers+lines&quot;, hovertemplate=None)
fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/womens-day-2021/2020-03-08-womens-day-2021-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;p&gt;UBI significantly narrows the ratio of poverty and deep poverty rates for adult women compared to adult men.
With a monthly UBI of $500, the rate of women compared to men in poverty is more than halved and the rate of women compared to men in deep poverty is nearly equal.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button4&quot; onclick=&quot;f4()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_4&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
gender_ratio = gender_ubi.pivot_table(
    values=&quot;pov&quot;, index=[&quot;monthly_ubi&quot;], columns=&quot;female&quot;
).reset_index()
gender_ratio.rename({True: &quot;female&quot;, False: &quot;male&quot;}, axis=1, inplace=True)
gender_ratio[&quot;ratio&quot;] = gender_ratio.female / gender_ratio.male
gender_ratio[&quot;poverty_type&quot;] = &quot;Poverty&quot;
deep_gender_ratio = gender_ubi.pivot_table(
    values=&quot;deep_pov&quot;, index=[&quot;monthly_ubi&quot;], columns=&quot;female&quot;
).reset_index()
deep_gender_ratio.rename({True: &quot;female&quot;, False: &quot;male&quot;}, axis=1, inplace=True)
deep_gender_ratio[&quot;ratio&quot;] = deep_gender_ratio.female / deep_gender_ratio.male
deep_gender_ratio[&quot;poverty_type&quot;] = &quot;Deep poverty&quot;

gender_ratios = pd.concat([gender_ratio, deep_gender_ratio])
gender_ratios.ratio = gender_ratios.ratio.round(2)

fig = px.line(
    gender_ratios,
    x=&quot;monthly_ubi&quot;,
    y=&quot;ratio&quot;,
    color=&quot;poverty_type&quot;,
    color_discrete_map=COLOR_MAP,
)

fig.update_yaxes(range=[0.94, 1.18])
fig.add_shape(
    type=&quot;line&quot;,
    x0=0,
    y0=1,
    x1=1000,
    y1=1,
    line=dict(color=LIGHT_GREY, dash=&quot;dash&quot;),
    xref=&quot;x&quot;,
    yref=&quot;y&quot;,
)

fig.update_layout(
    title=&quot;Poverty disparities by gender with respect to UBI&quot;,
    xaxis_title=&quot;Monthly universal basic income (funded by flat income tax)&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    yaxis_title=&quot;Ratio of women to men SPM poverty rate (2019)&quot;,
    legend_title=&quot;&quot;,
)

fig.update_traces(mode=&quot;markers+lines&quot;, hovertemplate=None)
fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f4() {
  var x = document.getElementById(&quot;asset_code_4&quot;);
  var b = document.getElementById(&quot;button4&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset4&quot;).load(&quot;/assets/markdown_assets/womens-day-2021/2020-03-08-womens-day-2021-asset-4.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset4&quot;&gt;&lt;/div&gt;

&lt;p&gt;The gender income gap is inseparable from the issue of care work.
On one hand, the &lt;a href=&quot;https://www.vox.com/2018/2/19/17018380/gender-wage-gap-childcare-penalty&quot;&gt;“baby penalty”&lt;/a&gt; explains much of the gap, with mothers earning less than fathers while women and men without children have similar earnings.
Meanwhile, &lt;a href=&quot;https://aspe.hhs.gov/system/files/aspe-files/260661/brief2-overviewmtranalyses.pdf&quot;&gt;high marginal tax rates&lt;/a&gt; for low-income parents (due to the phasing out of benefits) discourages work disproportionately of mothers.
A &lt;a href=&quot;https://americancompass.org/essays/home-building-survey-part-2/&quot;&gt;recent poll&lt;/a&gt; found that Americans prefer cash assistance to other family assistance policies like paid family leave, subsidized childcare, wage subsidies, and baby bonds.
Mothers, fathers, and low-income people especially preferred cash assistance, which would likely be more distributionally progressive than other policy options.&lt;/p&gt;

&lt;p&gt;In her &lt;a href=&quot;https://almazzelleke.files.wordpress.com/2014/01/zelleke-institutionalizing-the-universal-caretaker-dec-2008.pdf&quot;&gt;paper&lt;/a&gt; advocating for UBI as compared to other alternatives, political scientist Almaz Zelleke states that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Perhaps most importantly for advocates of gender equality, a basic income by virtue of its universality goes to both providers and recipients of care, and thus has the best chance of eliminating poverty for the most vulnerable group in contemporary capitalist economies: single mothers and their children. To any feminist, this should be a strong argument in favor of basic income.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Women provide most of the care work that today goes unpaid and unrecognized.
UBI compensates for that care work, reducing gender inequities and investing in the well-being of the cared-for.
Our analysis suggests that a UBI could be a relevant policy in the greater movement for the social, economic, and political equality of women.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:modeling&quot;&gt;
      &lt;p&gt;Data was gathered from the US Census Bureau’s March Supplement, which covers economic circumstances in 2019. We use the Supplemental Poverty Measure, which incorporates taxes and transfers (including in-kind benefits like SNAP) and adjusts for local housing costs. The flat income tax is applied on positive adjusted gross income. &lt;a href=&quot;#fnref:modeling&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;katarina&quot;, &quot;max&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="gender" />
      
        <category term="poverty" />
      

      
        <summary type="html">Women are 17% more likely to be in poverty than women, but basic income would shrink the gap.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">The effect of universal basic income on a novel measure of the racial wealth gap</title>
      <link href="/racial-wealth-gap-ks" rel="alternate" type="text/html" title="The effect of universal basic income on a novel measure of the racial wealth gap" />
      <published>2021-02-28T00:00:00+00:00</published>
      <updated>2021-02-28T00:00:00+00:00</updated>
      <id>/racial-wealth-gap-ks</id>
      <content type="html" xml:base="/racial-wealth-gap-ks">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;The large racial wealth gap traces its roots to slavery, redlining, and other discriminatory policies, and persists largely due to &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-03-21/how-income-inequality-feeds-the-racial-wealth-gap&quot;&gt;racial income gaps&lt;/a&gt;.
In honor of Black History month, we explore how closing part of this income gap with a universal basic income would affect the racial wealth gap, using novel measurements that consider how Black and White families differ across the full wealth distribution.&lt;/p&gt;

&lt;p&gt;The two most common measures of the racial wealth gap simply compare mean and median wealth between White and Black families.&lt;sup id=&quot;fnref:head&quot;&gt;&lt;a href=&quot;#fn:head&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
Based on the 2019 Survey of Consumer Finances&lt;sup id=&quot;fnref:scf&quot;&gt;&lt;a href=&quot;#fn:scf&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, White families have mean wealth 5.7 times that of Black families, and median wealth 6.4 times that of Black families.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import warnings

import numpy as np
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio
import ubicenter
from plotly.subplots import make_subplots

cdfs = pd.read_csv(&quot;data/cdfs.csv&quot;)
ubi_summary = pd.read_csv(&quot;data/ubi_summary.csv&quot;)
nw_quant = pd.read_csv(&quot;data/deciles.csv&quot;)


# Define UBI Center colors
BLUE = &quot;#1976D2&quot;
DARK_BLUE = &quot;#1565C0&quot;
LIGHT_BLUE = &quot;#90CAF9&quot;
GRAY = &quot;#BDBDBD&quot;
DARK_GRAY = &quot;#616161&quot;
BARELY_BLUE = &quot;#E3F2FD&quot;

colors = [BLUE, DARK_BLUE, LIGHT_BLUE, GRAY, BARELY_BLUE]

bl = ubi_summary.iloc[0].round(-2)
params = pd.DataFrame(
    {
        &quot;Mean&quot;: {
            &quot;White&quot;: bl.white_mean_networth_pa,
            &quot;Black&quot;: bl.black_mean_networth_pa,
        },
        &quot;Median&quot;: {
            &quot;White&quot;: bl.white_median_networth_pa,
            &quot;Black&quot;: bl.black_median_networth_pa,
        },
    }
)

fig = go.Figure(
    data=[
        go.Bar(name=&quot;White&quot;, x=params.T.index, y=params.T[&quot;White&quot;], marker_color=GRAY),
        go.Bar(name=&quot;Black&quot;, x=params.T.index, y=params.T[&quot;Black&quot;], marker_color=BLUE),
    ]
)

fig.update_layout(
    title=&quot;Traditional measures of the racial wealth gap&quot;,
    hovermode=&quot;x&quot;,
    xaxis_title=&quot;&quot;,
    yaxis_title=&quot;Wealth per adult (2019)&quot;,
    yaxis_tickprefix=&quot;$&quot;,
    legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.75),
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;As Matt Bruenig pointed out in his &lt;a href=&quot;https://www.peoplespolicyproject.org/2020/06/29/the-racial-wealth-gap-is-about-the-upper-classes/&quot;&gt;June 2020 piece&lt;/a&gt;, the mean wealth gap is largely shaped by overall wealth inequality, with over 70 percent of both Black and White families’ wealth held by the top decile.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
hovertemplate = &quot;%{x:.1f}%&quot;

fig = px.bar(
    nw_quant[nw_quant.variable.isin([&quot;White&quot;, &quot;Black&quot;])],
    y=&quot;percentile&quot;,
    x=&quot;value&quot;,
    color=&quot;variable&quot;,
    labels={
        &quot;percentile&quot;: &quot;Percent receiving benefit&quot;,
        &quot;value&quot;: &quot;Share of within-group wealth&quot;,
    },
    orientation=&quot;h&quot;,
    barmode=&quot;group&quot;,
    color_discrete_map={&quot;White&quot;: GRAY, &quot;Black&quot;: BLUE},
)

fig.update_traces(hovertemplate=&quot;Share of Wealth: &quot; + hovertemplate)

# apply formatting
fig.update_layout(
    title=&quot;Within-race wealth inequality&quot;,
    hovermode=&quot;y&quot;,
    xaxis_title=&quot;Share of total within-group wealth held by decile&quot;,
    yaxis_title=&quot;Decile of wealth per adult (2019)&quot;,
    xaxis_ticksuffix=&quot;%&quot;,
    legend_title=&quot;&quot;,
    yaxis_dtick=1,
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;While the median tells us where the middle of the distributions lay, it can obscure what is going on throughout the rest of the distribution.
To visualize a variable’s distribution in full, we can turn to the cumulative distribution function (CDF), which shows the population share with less than a specified value.&lt;/p&gt;

&lt;p&gt;The following graph shows how to interpret a CDF graph of of wealth per adult for all families in the U.S. (Note that while we have logarithmically transformed the x-axis, the y-axis remains linear.)&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
all_hh = cdfs.loc[cdfs.ubi_mo == 0].copy(deep=True)

# select 5000k
med = all_hh.loc[all_hh[&quot;networth_pa_new&quot;] == 50000, :].copy(deep=True)
med[&quot;x&quot;] = np.log10(med.networth_pa_new)
med[&quot;y&quot;] = med.loc[:, &quot;total_share&quot;]

# plot curve
fig = px.line(x=all_hh.networth_pa_new, y=all_hh.total_share.round(3))
# change line coloar
fig[&quot;data&quot;][0][&quot;line&quot;][&quot;color&quot;] = BLUE

# add explanation for arrow pointing to y-axis
fig.add_annotation(
    x=2,
    y=med.y.values[0],
    text=&quot;Look at y-axis to see share of families &lt;br /&gt; whose wealth is below the x-value&quot;,
    showarrow=True,
    arrowhead=0,
    ay=-50,
    ax=150,
    font=dict(size=16),
)

# add dotted line pointing from x-axis to point
fig.add_annotation(
    x=med.x.values[0],
    y=0,
    text=&quot;For a given wealth on the x-axis&quot;,
    showarrow=True,
    arrowhead=0,
    # yshift=-60,
    # xshift=-130,
    ax=160,
    ay=-50,
    font=dict(size=16),
)

# add red arrow pointing from x-axis to point
fig.add_annotation(
    x=med.x.values[0],  # arrows' head
    y=med.y.values[0],  # arrows' head
    ax=med.x.values[0],  # arrows' tail
    ay=0,  # arrows' tail
    xref=&quot;x&quot;,
    yref=&quot;y&quot;,
    axref=&quot;x&quot;,
    ayref=&quot;y&quot;,
    text=&quot;&quot;,  # if you want only the arrow
    showarrow=True,
    arrowhead=2,
    arrowsize=2,
    arrowwidth=1,
    arrowcolor=GRAY,
)

# add arrow pointing from point to y-axis
fig.add_annotation(
    x=2,  # arrows' head
    y=med.y.values[0],  # arrows' head
    ax=med.x.values[0],  # arrows' tail
    ay=med.y.values[0],  # arrows' tail
    xref=&quot;x&quot;,
    yref=&quot;y&quot;,
    axref=&quot;x&quot;,
    ayref=&quot;y&quot;,
    text=&quot;&quot;,  # if you want only the arrow
    showarrow=True,
    arrowhead=2,
    arrowsize=2,
    arrowwidth=1,
    arrowcolor=GRAY,
)

fig.update_layout(
    showlegend=False,
    title=&quot;Cumulative wealth distribution&quot;,
    xaxis_title=&quot;Wealth per adult (2019)&quot;,
    yaxis_title=&quot;Share of families with less than value in wealth&quot;,
    yaxis_ticksuffix=&quot;&quot;,
    yaxis_tickprefix=&quot;&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    hovermode=&quot;x&quot;,
)

fig.update_xaxes(
    dict(
        range=[2, 9],
        autorange=False,
        showspikes=False,  # Show spike line for x-axis
        # Format spike
        spikethickness=1,
        spikedash=&quot;dot&quot;,
        spikecolor=&quot;grey&quot;,
        spikemode=&quot;toaxis&quot;,
    ),
    type=&quot;log&quot;,
)
fig.update_yaxes(
    dict(
        range=[0, 1.01],
        showspikes=True,
        spikethickness=1,
        spikedash=&quot;dot&quot;,
        spikecolor=&quot;grey&quot;,
        spikemode=&quot;toaxis&quot;,
    )
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;p&gt;Now, how can we compare the distributions of wealth between Black and White families?
The two-sample Kolmogorov-Smirnov (KS) statistical test offers a way to test the difference between two distributions.
The KS statistic, or D-statistic (for “distance”), is the maximum absolute vertical distance between two CDFs.&lt;/p&gt;

&lt;p&gt;One advantage to this statistical method is that it is quite simple to explain visually.
The below chart plots the CDF for White and Black families.
The dotted line drawn between the two curves shows where the vertical distance between them is at its greatest.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button4&quot; onclick=&quot;f4()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_4&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
with warnings.catch_warnings():  # ignore &quot;FutureWarning&quot;
    &quot;&quot;&quot;
    Ignore numpy 'FutureWarning' :
    &quot;Using a non-tuple sequence for multidimensional indexing is deprecated;
    use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be
    interpreted as an array index, `arr[np.array(seq)]`, which will result
    either in an error or a different result.&quot;
    &quot;&quot;&quot;
    warnings.filterwarnings(&quot;ignore&quot;, category=FutureWarning)

    # Create traces
    fig = go.Figure()

    # create df for baseline
    cdfs_bl = cdfs[cdfs.ubi_mo == 0]
    # plot ECDFs
    fig.add_trace(
        go.Scatter(
            x=cdfs_bl.networth_pa_new,
            y=cdfs_bl.white_share.round(3),
            name=&quot;White&quot;,
            marker_color=GRAY,
        )
    )
    fig.add_trace(
        go.Scatter(
            x=cdfs_bl.networth_pa_new,
            y=cdfs_bl.black_share.round(3),
            name=&quot;Black&quot;,
            marker_color=BLUE,
        )
    )

    # define ks_stat
    ks_stat = ubi_summary.loc[ubi_summary.ubi_mo == 0, &quot;d_stat_cand&quot;].max()

    # find networth where the d-statistic is found
    max_x = ubi_summary.loc[ubi_summary.ubi_mo == 0, &quot;networth_pa_new&quot;].max()

    # find networth where abs distance between ecdfs is is @  max
    y1 = ubi_summary.loc[ubi_summary.ubi_mo == 0, &quot;white_share&quot;].max()
    y0 = ubi_summary.loc[ubi_summary.ubi_mo == 0, &quot;black_share&quot;].max()

    # # add a dashed line showing where max abs distance between ECDFs is

    dash_names = &quot;Max abs. distance between CDFs&quot;
    dash_color = &quot;black&quot;
    fig.add_trace(
        go.Scatter(
            x=[max_x, max_x],
            y=[y0, y1],
            mode=&quot;lines+text&quot;,
            line={&quot;dash&quot;: &quot;dot&quot;, &quot;color&quot;: dash_color, &quot;width&quot;: 2},
            visible=True,
            name=dash_names,
            text=[&quot;D-statistic: &quot; + str(round(ks_stat, 3)) + &quot;        &quot;, None],
            textfont=dict(size=16),
            textposition=&quot;top left&quot;,
            showlegend=False,
        )
    )

    fig.add_annotation(
        x=np.log10(max_x),
        y=(y1 + y0) / 2,
        text=&quot;The Kolmogorov-Smirnov D-statistic &lt;br /&gt;&quot;
        + &quot;is the maximum absolute vertical &lt;br /&gt;&quot;
        + &quot;distance between the two curves&quot;,
        showarrow=True,
        arrowhead=3,
        yshift=1,
        ax=200,
        bordercolor=&quot;#c7c7c7&quot;,
        borderwidth=2,
        borderpad=4,
        bgcolor=&quot;dark blue&quot;,
        opacity=1,
        font=dict(size=16),
    )

    fig.update_layout(
        title=&quot;Cumulative distribution function (CDF) of wealth by race&quot;,
        xaxis_title=&quot;Wealth per adult (2019)&quot;,
        yaxis_title=&quot;Share of families with less than value in wealth&quot;,
        yaxis_ticksuffix=&quot;&quot;,
        yaxis_tickprefix=&quot;&quot;,
        xaxis_tickprefix=&quot;$&quot;,
        legend={&quot;traceorder&quot;: &quot;reversed&quot;},
    )

    fig.update_xaxes(type=&quot;log&quot;)
    fig = ubicenter.format_fig(fig, show = False)
    fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f4() {
  var x = document.getElementById(&quot;asset_code_4&quot;);
  var b = document.getElementById(&quot;button4&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset4&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-4.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset4&quot;&gt;&lt;/div&gt;

&lt;p&gt;This shows us that approximately 65.9% of Black families have a wealth of less than $50,000 per adult, whereas only 33.3% of White families fall below that line.
As we will see, the threshold can be at any point along these curves; the KS statistic is the value measuring the size of the gap where the gap is the largest, at 0.326 (the actual wealth value corresponding to the D-statistic was $50,888).&lt;/p&gt;

&lt;p&gt;In the following model, we simulate how saving a total of one year’s UBI payments could change the racial wealth gap. We apply a flat tax on all income to fund the UBI program, and subtract each family’s new tax payment from their wealth.&lt;/p&gt;

&lt;p&gt;In the bottom graph, you can see the vertical distance between the two curves at each point along the x-axis from $0 to $2,000 per month.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button5&quot; onclick=&quot;f5()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_5&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def ecdf_slider(data):
    # Create traces
    fig = go.Figure()

    # create empty list for payment size for sliders
    payments = []
    ks_stats = []
    max_xs = []

    # create 2 subplots
    fig = make_subplots(
        rows=2,
        cols=1,
        shared_xaxes=False,
        # Apply x axis title elsewhere so it doesn't interfere with slider.
        y_title=&quot;Share of families with less than value in wealth&quot;,
    )

    for i, step in enumerate(data.ubi_mo.unique()):
        # append payment to list
        payments.append(step)
        step_data = data[data.ubi_mo == step]
        # add trace 0
        fig.add_trace(
            go.Scatter(
                x=step_data.networth_pa_new,
                y=step_data.white_share.round(3),
                name=&quot;White&quot;,
                visible=False,
                marker_color=GRAY,
            ),
            row=1,
            col=1,
        )
        # add trace 1
        fig.add_trace(
            go.Scatter(
                x=step_data.networth_pa_new,
                y=step_data.black_share.round(3),
                name=&quot;Black&quot;,
                visible=False,
                marker_color=BLUE,
            ),
            row=1,
            col=1,
        )
        # append ks-statistics to list
        ks_stat = ubi_summary.loc[ubi_summary.ubi_mo == step, &quot;d_stat_cand&quot;].values[0]
        ks_stats.append(ks_stat)

        # add plot to candidate
        # add trace 2, the d-statistic candidates
        fig.add_trace(
            go.Scatter(
                x=step_data.networth_pa_new,
                y=step_data.d_stat_cand.round(3),
                mode=&quot;lines&quot;,
                visible=False,
                name=&quot;Absolute distance between CDFs&quot;,
                marker_color=LIGHT_BLUE,
            ),
            row=2,
            col=1,
        )

        # find networth where the d-statistic
        max_x = (
            ubi_summary.loc[ubi_summary.ubi_mo == step, &quot;networth_pa_new&quot;]
            .iloc[0]
            .round(3)
        )
        max_xs.append(max_x)

        # find networth where abs distance between ecdfs is is @  max
        y1 = ubi_summary.loc[ubi_summary.ubi_mo == step, &quot;white_share&quot;].iloc[0].round(3)
        y0 = ubi_summary.loc[ubi_summary.ubi_mo == step, &quot;black_share&quot;].iloc[0].round(3)

        dash_names = &quot;Max abs. distance between CDFs&quot;
        dash_color = &quot;black&quot;
        # dotted line between two curves
        fig.add_trace(
            go.Scatter(
                x=[max_x, max_x],
                y=[y0, y1],
                mode=&quot;lines+text&quot;,
                line={&quot;dash&quot;: &quot;dot&quot;, &quot;color&quot;: dash_color, &quot;width&quot;: 2},
                visible=False,
                name=dash_names,
                text=[&quot;D-statistic: &quot; + str(round(ks_stat, 3)) + &quot;     &quot;, None],
                textfont=dict(size=16),
                textposition=&quot;top left&quot;,
                showlegend=False,
            ),
            row=1,
            col=1,
        )
        # dotted line to peak on bottom chart
        fig.add_trace(
            go.Scatter(
                x=[round(max_x, 3), round(max_x, 3)],
                y=[0, round(y0 - y1, 3)],
                mode=&quot;lines&quot;,
                line={&quot;dash&quot;: &quot;dot&quot;, &quot;color&quot;: dash_color, &quot;width&quot;: 2},
                visible=False,
                name=dash_names,
                showlegend=False,
            ),
            row=2,
            col=1,
        )

    # define number of plots in each step
    n = 5
    # Make first n traces visible
    for i in range(0, n):
        fig.data[i].visible = True

    # Create and add slider
    steps = []
    for i in range(0, len(fig.data), n):
        step = dict(
            method=&quot;update&quot;,
            args=[{&quot;visible&quot;: [False] * len(fig.data)},],  # layout attribute
            label=(&quot;$&quot; + str(payments[i // n])),
        )
        for j in range(0, n):
            step[&quot;args&quot;][0][&quot;visible&quot;][i + j] = True  # Toggle i'th trace to &quot;visible&quot;
        steps.append(step)
    sliders = [
        dict(
            active=0,
            currentvalue={&quot;prefix&quot;: &quot;Monthly universal basic income payment: &quot;},
            pad={&quot;t&quot;: 50},
            steps=steps,
        )
    ]

    fig.update_traces(xaxis=&quot;x1&quot;)

    # update shapes
    fig.update_shapes(dict(xref=&quot;x&quot;, yref=&quot;y&quot;))

    # fig.update_yaxes(showspikes=True)
    fig.update_layout(
        sliders=sliders,
        xaxis=dict(
            visible=True,
            type=&quot;log&quot;,
            range=[2, 9],
            autorange=False,
            showspikes=True,  # Show spike line for X-axis
            # Format spike
            spikethickness=2,
            spikedash=&quot;dot&quot;,
            spikecolor=&quot;#999999&quot;,
            spikemode=&quot;across&quot;,
        ),
        title=&quot;The Kolmogorov-Smirnov measure of the racial wealth gap&quot;,
        xaxis_title=&quot;Wealth per adult (2019)&quot;,
        hovermode=&quot;x&quot;,
        xaxis_tickprefix=&quot;$&quot;,
    )

    fig.update_xaxes(
        visible=True,
        type=&quot;log&quot;,
        row=2,
        col=1,
    )
    fig.update_yaxes(
        dict(
            range=[0, 1],
            autorange=False,
            showspikes=False,  # Show spike line for y-axis
            # Format spike
            spikethickness=2,
            spikedash=&quot;dot&quot;,
            spikecolor=&quot;#999999&quot;,
            spikemode=&quot;toaxis&quot;,
        ),
        row=2,
        col=1,
    )

    return ubicenter.format_fig(fig, show = False)


with warnings.catch_warnings():  # ignore &quot;FutureWarning&quot;
    &quot;&quot;&quot;
    Ignore numpy 'FutureWarning' :
    &quot;Using a non-tuple sequence for multidimensional indexing is deprecated;
    use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be
    interpreted as an array index, `arr[np.array(seq)]`, which will result
    either in an error or a different result.&quot;
    &quot;&quot;&quot;
    warnings.filterwarnings(&quot;ignore&quot;, category=FutureWarning)
    fig = ecdf_slider(cdfs)
    fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f5() {
  var x = document.getElementById(&quot;asset_code_5&quot;);
  var b = document.getElementById(&quot;button5&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset5&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-5.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset5&quot;&gt;&lt;/div&gt;

&lt;p&gt;It is notable that while the KS D-statistics declines overall, it fluctuates until we get to $500 payments, at which point the D-statistic begins a steady decline to minimum of 0.300 under the $2,000 monthly benefit scenario.
This is because the distances between the two curves are much larger around the center of the distributions than around the tails, thus the changes in the KS test are not picking up changes at lower incomes, where the curves were much closer together to begin with.&lt;/p&gt;

&lt;p&gt;In our simulations, the wealth point at which the curves are furthest apart increases with the UBI amount.
The wealth at which the gap is the biggest rises to just above $121,000, from $50,000 at baseline.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button6&quot; onclick=&quot;f6()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_6&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = make_subplots(
    rows=2,
    cols=1,
    shared_xaxes=True,
    x_title=&quot;Monthly universal basic income payment&quot;,
    subplot_titles=[
        &quot;Black vs White wealth KS statistic&quot;,
        &quot;Wealth where Black and White cumulative distributions differ most&quot;,
    ],
)

fig.add_trace(
    go.Scatter(
        x=ubi_summary.ubi_mo,
        y=ubi_summary.d_stat_cand.round(3),
        mode=&quot;lines+markers&quot;,
        name=&quot;KS statistic&quot;,
        marker_color=BLUE,
    ),
    row=1,
    col=1,
)
fig.add_trace(
    go.Scatter(
        x=ubi_summary.ubi_mo,
        y=ubi_summary.networth_pa_new,
        mode=&quot;lines+markers&quot;,
        name=&quot;Wealth at KS D-stat&quot;,
        marker_color=LIGHT_BLUE,
    ),
    row=2,
    col=1,
)

fig.update_layout(showlegend=False, hovermode=&quot;x&quot;, xaxis_tickprefix=&quot;$&quot;)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f6() {
  var x = document.getElementById(&quot;asset_code_6&quot;);
  var b = document.getElementById(&quot;button6&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset6&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-6.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset6&quot;&gt;&lt;/div&gt;

&lt;p&gt;Further, without UBI the median White family has $6.45 for every $1 held by the median Black family. Under a $1,000 monthly payment, this falls to $3.49 for every $1, and further down to $2.64 with a $2,000 monthly payment.&lt;/p&gt;

&lt;p&gt;The median wealth for White families rises from $115,103 without a UBI to $119,425 under a $1,000 monthly payment, and rises to $127,505 with a $2,000 monthly payment.
For Black families, a $1,000 UBI nearly doubles the median wealth, from $17,853 to $34,183, and a $2,000 monthly benefit grows it further to $48,310.&lt;/p&gt;

&lt;p&gt;It should be noted that the median wealth per adult&lt;sup id=&quot;fnref:peradult&quot;&gt;&lt;a href=&quot;#fn:peradult&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; rises among White families, it merely rises by less than that of Black families.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button7&quot; onclick=&quot;f7()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_7&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()

hovertemplate = &quot;$%{y:.0f}&quot;

fig.add_trace(
    go.Scatter(
        x=ubi_summary.ubi_mo,
        y=ubi_summary.black_median_networth_pa,
        mode=&quot;lines+markers&quot;,
        name=&quot;Black&quot;,
        marker_color=BLUE,
        hovertemplate=hovertemplate,
    )
)
fig.add_trace(
    go.Scatter(
        x=ubi_summary.ubi_mo,
        y=ubi_summary.white_median_networth_pa,
        mode=&quot;lines+markers&quot;,
        name=&quot;White&quot;,
        marker_color=GRAY,
        hovertemplate=hovertemplate,
    )
)

ymax = ubi_summary[[&quot;black_median_networth_pa&quot;, &quot;white_median_networth_pa&quot;]].max().max() * 1.1

fig.update_layout(
    title=&quot;How UBI affects median wealth by race&quot;,
    xaxis_title=&quot;Monthly universal basic income payment&quot;,
    yaxis_title=&quot;Median wealth per adult (2019)&quot;,
    yaxis_ticksuffix=&quot;&quot;,
    yaxis_tickprefix=&quot;$&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    yaxis_range=[0, ymax],
    legend={&quot;traceorder&quot;: &quot;reversed&quot;},
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f7() {
  var x = document.getElementById(&quot;asset_code_7&quot;);
  var b = document.getElementById(&quot;button7&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset7&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-7.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset7&quot;&gt;&lt;/div&gt;

&lt;p&gt;Unlike the rising median wealth for White families under the same UBI, mean wealth for White families declines from $557,216 without any UBI to 555,135 under a $1,000 monthly payment, and falls further to $553,054 with a $2,000 monthly payment.
For Black families, the mean wealth rises from $97,167 to $104,768 with a $1,000 benefit, and further to $112,369 with a $2,000 benefit.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button8&quot; onclick=&quot;f8()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_8&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()

hovertemplate = &quot;$%{y:.0f}&quot;

fig.add_trace(
    go.Scatter(
        x=ubi_summary.ubi_mo,
        y=ubi_summary.black_mean_networth_pa,
        mode=&quot;lines+markers&quot;,
        name=&quot;Black&quot;,
        marker_color=BLUE,
        hovertemplate=hovertemplate,
    )
)
fig.add_trace(
    go.Scatter(
        x=ubi_summary.ubi_mo,
        y=ubi_summary.white_mean_networth_pa,
        mode=&quot;lines+markers&quot;,
        name=&quot;White&quot;,
        marker_color=GRAY,
        hovertemplate=hovertemplate,
    )
)

ymax = (
    ubi_summary[[&quot;black_mean_networth_pa&quot;, &quot;white_mean_networth_pa&quot;]].max().max() * 1.1
)

fig.update_layout(
    title=&quot;How UBI affects mean wealth by race&quot;,
    xaxis_title=&quot;Monthly universal basic income payment&quot;,
    yaxis_title=&quot;Mean wealth per adult (2019)&quot;,
    yaxis_ticksuffix=&quot;&quot;,
    yaxis_tickprefix=&quot;$&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    yaxis_range=[0, ymax],
    legend={&quot;traceorder&quot;: &quot;reversed&quot;},
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f8() {
  var x = document.getElementById(&quot;asset_code_8&quot;);
  var b = document.getElementById(&quot;button8&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset8&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-8.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset8&quot;&gt;&lt;/div&gt;

&lt;p&gt;Finally, we look at the share of families that fall below $50,000 per adult, the point at which those two curves were further apart in our baseline scenario.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button9&quot; onclick=&quot;f9()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_9&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()
hovertemplate = &quot;%{y:.0f}%&quot;

fig.add_trace(
    go.Scatter(
        x=ubi_summary[&quot;ubi_mo&quot;],
        y=ubi_summary[&quot;black_share_above_50k&quot;] * 100,
        mode=&quot;lines+markers&quot;,
        name=&quot;Black&quot;,
        marker_color=BLUE,
        hovertemplate=hovertemplate,
    )
)
fig.add_trace(
    go.Scatter(
        x=ubi_summary[&quot;ubi_mo&quot;],
        y=ubi_summary[&quot;white_share_above_50k&quot;] * 100,
        mode=&quot;lines+markers&quot;,
        name=&quot;White&quot;,
        marker_color=GRAY,
        hovertemplate=hovertemplate,
    )
)

ymax = (
    ubi_summary[[&quot;white_share_above_50k&quot;, &quot;black_share_above_50k&quot;]].max().max()
    * 100
    * 1.1
)

fig.update_layout(
    title=&quot;How UBI affects the share of families with wealth above $50,000 by race&quot;,
    xaxis_title=&quot;Monthly universal basic income payment&quot;,
    yaxis_title=&quot;Share of families with wealth above $50,000 per adult (2019)&quot;,
    yaxis_ticksuffix=&quot;%&quot;,
    yaxis_tickprefix=&quot;&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    yaxis_range=[0, ymax],
    legend={&quot;traceorder&quot;: &quot;reversed&quot;},
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f9() {
  var x = document.getElementById(&quot;asset_code_9&quot;);
  var b = document.getElementById(&quot;button9&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset9&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-9.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset9&quot;&gt;&lt;/div&gt;

&lt;p&gt;The share of Black families with a per adult networth of over $50,000 rises from 65.9 percent to 61.2 percent when we raise the monthly UBI to $1,000 monthly, and falls further to 51.7 percent when we raise the benefit to $2,000 monthly.&lt;/p&gt;

&lt;p&gt;In the scenarios we explore, the outcomes for Black families improve in the share of families with wealth per adult below $50,000 declines, median family wealth increases.
In the final plot below, you can explore the relative changes in all of the metrics we’ve chosen.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button10&quot; onclick=&quot;f10()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_10&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()


def trace(col, chg_col, name, string, color):
    &quot;&quot;&quot;
    Args:
        col: Column name.
        chg_col: Column name of change.
        name: Name of column for printing.
        string: Formatting of customdata[1].
        color: Line color.
    &quot;&quot;&quot;
    fig.add_trace(
        go.Scatter(
            x=ubi_summary[&quot;ubi_mo&quot;],
            y=ubi_summary[chg_col] * 100,
            mode=&quot;lines+markers&quot;,
            name=name,
            marker_color=color,
            marker=dict(size=5),
            customdata=np.stack((ubi_summary.ubi_mo, ubi_summary[col]), axis=-1),
            hovertemplate=name
            + &quot;: &quot;
            + string
            + &quot;&lt;br /&gt;&quot;
            + &quot;Percent change: %{y:.0f}%&lt;br /&gt;&quot;,
        )
    )


trace(
    &quot;white_mean_nw_as_pct_of_mean_black&quot;,
    &quot;white_mean_nw_as_pct_of_mean_black_pc&quot;,
    &quot;White/Black mean wealth&quot;,
    &quot;%{customdata[1]: .1f}&quot;,
    DARK_GRAY,
)
# median wealth
trace(
    &quot;white_median_nw_as_pct_of_median_black&quot;,
    &quot;white_median_nw_as_pct_of_median_black_pc&quot;,
    &quot;White/Black median wealth&quot;,
    &quot;%{customdata[1]: .1f}&quot;,
    GRAY,
)
trace(
    &quot;d_stat_cand&quot;, &quot;d_stat_cand_pc&quot;, &quot;KS statistic&quot;, &quot;%{customdata[1]: .3f}&quot;, DARK_BLUE
)
trace(
    &quot;white_share_above_50k_pct_of_black&quot;,
    &quot;white_share_above_50k_pct_of_black_pc&quot;,
    &quot;White/Black share of families over $50k&quot;,
    &quot;%{customdata[1]: .1f}&quot;,
    LIGHT_BLUE,
)

fig.update_layout(
    title=&quot;How UBI affects different measures of the racial wealth gap&quot;,
    xaxis_title=&quot;Monthly universal basic income payment&quot;,
    yaxis_title=&quot;Percent change in measure over baseline (2019)&quot;,
    yaxis_ticksuffix=&quot;%&quot;,
    yaxis_tickprefix=&quot;&quot;,
    xaxis_tickprefix=&quot;$&quot;,
)

fig = ubicenter.format_fig(fig, show = False)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f10() {
  var x = document.getElementById(&quot;asset_code_10&quot;);
  var b = document.getElementById(&quot;button10&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset10&quot;).load(&quot;/assets/markdown_assets/racial-wealth-gap-ks/2021-02-28-racial-wealth-gap-ks-asset-10.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset10&quot;&gt;&lt;/div&gt;

&lt;p&gt;While these metrics aren’t truly comparable, we can see that the KS statistic is more stubborn than other measures, especially the gap in median wealth.
Median Black wealth is so low that even modest redistribution can close that gap quickly, but larger gaps in the middle of the distribution will persist.&lt;/p&gt;

&lt;p&gt;We will continue this line of research, especially longer-term dynamic analysis to reflect the accumulative nature of wealth.
Our simplifying assumption that the entire tax and transfer system flows straight to wealth, rather than consumption, may exaggerate these trends given propensities to consume decrease with wealth. But recurring redistribution would likely have a significantly larger effect in closing the gap, even accounting for consumption.
UBI isn’t the only policy that can reduce racial wealth disparities, but it certainly helps.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:head&quot;&gt;
      &lt;p&gt;White and Black families are families headed by a White and Black person, respectively. &lt;a href=&quot;#fnref:head&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:scf&quot;&gt;
      &lt;p&gt;We used the &lt;a href=&quot;http://pslmodels.org&quot;&gt;Policy Simulation Library&lt;/a&gt;’s &lt;a href=&quot;https://github.com/PSLmodels/scf&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/PSLmodels/microdf&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;microdf&lt;/code&gt;&lt;/a&gt; Python packages for extracting and processing this data in &lt;a href=&quot;https://github.com/UBICenter/blog/blob/master/jb/20210228/data/gen_data.py&quot;&gt;this script&lt;/a&gt;. &lt;a href=&quot;#fnref:scf&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:peradult&quot;&gt;
      &lt;p&gt;Family wealth conventionally adjusts for number of adults to avoid distorting statistics due to marriage patterns; for example, see &lt;a href=&quot;https://www.credit-suisse.com/about-us/en/reports-research/global-wealth-report.html&quot;&gt;Credit Suisse’s Global Net Worth Report&lt;/a&gt;. &lt;a href=&quot;#fnref:peradult&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;will&quot;, &quot;max&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="race" />
      
        <category term="wealth" />
      

      
        <summary type="html">Going beyond mean and median.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">How much UBI spending should go to children?</title>
      <link href="/child-ubi-share" rel="alternate" type="text/html" title="How much UBI spending should go to children?" />
      <published>2021-01-20T00:00:00+00:00</published>
      <updated>2021-01-20T00:00:00+00:00</updated>
      <id>/child-ubi-share</id>
      <content type="html" xml:base="/child-ubi-share">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;While the idea of a universal basic income has been around for centuries, it was recently brought into mainstream American political discourse by 2020 Presidential candidate Andrew Yang.
Yang centered his campaign around paying every adult citizen $1,000 each month.
Many other countries take the opposite approach, providing monthly &lt;a href=&quot;http://child-allowance.ubicenter.org&quot;&gt;“child allowance”&lt;/a&gt; payments for each child, an approach now favored by &lt;a href=&quot;https://www.vox.com/future-perfect/2019/3/6/18249290/child-poverty-american-family-act-sherrod-brown-michael-bennet&quot;&gt;many US lawmakers&lt;/a&gt;.
Here we explore which mix of these two approaches reduces poverty and inequality most effectively.&lt;/p&gt;

&lt;p&gt;In a &lt;a href=&quot;https://blog.ubicenter.org/20200707/adult_child_ubi.html&quot;&gt;July 2020 post&lt;/a&gt;, we found that a child allowance would be more effective at reducing poverty than an adult UBI, for spending levels up to $500 billion, at which point a UBI for both children and adults becomes more effective; adult-only UBI was never the best option.
But those three options—adults only, kids only, and equal for adults and kids—aren’t the only ones available.
In this post, we calculate the optimal ratios of adult to child UBIs, depending on the total spending and objective.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

# Turn off display bar
CONFIG = {&quot;displayModeBar&quot;: False}

# Define UBI Center colors
BLUE = &quot;#1976D2&quot;
DARK_BLUE = &quot;#1565C0&quot;
LIGHT_BLUE = &quot;#90CAF9&quot;
GRAY = &quot;#BDBDBD&quot;
BARELY_BLUE = &quot;#E3F2FD&quot;

july_post = pd.read_csv(&quot;https://github.com/ngpsu22/blog/raw/master/july_2020.csv&quot;)

colors = {0: DARK_BLUE, 1: LIGHT_BLUE, 2: GRAY}

fig = px.line(
    july_post,
    x=&quot;spending_in_billions&quot;,
    y=&quot;poverty_rate&quot;,
    color=&quot;ubi_type&quot;,
    color_discrete_map={
        &quot;Child allowance&quot;: DARK_BLUE,
        &quot;Adult UBI&quot;: LIGHT_BLUE,
        &quot;All UBI&quot;: GRAY,
    },
)
fig.update_layout(
    title=&quot;Overall poverty rate and spending on cash transfer programs&quot;,
    xaxis_title=&quot;Spending in billions&quot;,
    yaxis_title=&quot;SPM poverty rate&quot;,
    yaxis_ticksuffix=&quot;%&quot;,
    font=dict(family=&quot;Roboto&quot;),
    hovermode=&quot;x&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    xaxis_ticksuffix=&quot;B&quot;,
    plot_bgcolor=&quot;white&quot;,
    legend_title_text=&quot;&quot;,
)

fig.update_traces(mode=&quot;markers+lines&quot;, hovertemplate=None)

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/child-ubi-share/2021-01-20-child-ubi-share-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;To start, we modeled how different UBI amounts (funded by a flat tax on taxable income) would impact the poverty rate if children were excluded, received half the UBI, or received the full benefit.
Our model simulated up until $3 trillion in total UBI spending and found that including children further reduces poverty at every level.
For example, at $1.5 trillion in spending, excluding children would give each adult about $500 a month and reduce the overall poverty rate from 11.7 percent to 4.5 percent.
However, at the same amount of spending, including children in the full benefit would lower the poverty rate to 4 percent, lifting an additional 1.6 million people out of poverty.
Poverty is generally similar between giving children a full-size UBI or half the adult amount.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
summary2 = pd.read_csv(
    &quot;https://github.com/ngpsu22/blog/raw/master/child_share_ubi_summary.csv.gz&quot;,
    compression=&quot;gzip&quot;,
)
# Turn off display bar
CONFIG = {&quot;displayModeBar&quot;: False}

# Define UBI Center colors
BLUE = &quot;#1976D2&quot;
DARK_BLUE = &quot;#1565C0&quot;
LIGHT_BLUE = &quot;#90CAF9&quot;
GRAY = &quot;#BDBDBD&quot;
BARELY_BLUE = &quot;#E3F2FD&quot;

# Create figure
fig = px.line()

names = {
    0: &quot;No UBI for children&quot;,
    1: &quot;Half-sized UBI for children&quot;,
    2: &quot;Full-sized UBI for children&quot;,
}

colors = {0: GRAY, 1: LIGHT_BLUE, 2: DARK_BLUE}

percent_steps = [0, 50, 100]

zero = summary2[summary2[&quot;child_percent_ubi&quot;] == 0]
fifty = summary2[summary2[&quot;child_percent_ubi&quot;] == 50]
hundred = summary2[summary2[&quot;child_percent_ubi&quot;] == 100]

dfs = [zero, fifty, hundred]

for i, df in enumerate(dfs):
    # add trace for optimal poverty df
    fig.add_trace(
        go.Scatter(
            x=df[&quot;funding_billions&quot;],
            y=df[&quot;poverty_rate&quot;],
            mode=&quot;markers+lines&quot;,
            name=names[i],
            # assign numpy array with child &amp;amp; adult ubi to customdata argument
            customdata=np.stack(
                (df[&quot;monthly_child_ubi&quot;], df[&quot;monthly_adult_ubi&quot;]), axis=-1
            ),
            # add customdata to hovertemplate
            hovertemplate=(
                &quot;&lt;i&gt;Poverty rate&lt;/i&gt;: %{y:.1f}%&lt;br /&gt;&quot;
                + &quot;&lt;br /&gt;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
                + &quot;&lt;br /&gt;&lt;b&gt;Adult UBI/mo &lt;/b&gt;: $%{customdata[1]: .0f}&lt;br /&gt;&quot;
            ),
            line=dict(color=colors[i]),
        )
    )
fig.update_layout(
    title=&quot;Poverty by proportion of adult benefit paid to children&quot;,
    xaxis_title=&quot;Funding in billions&quot;,
    yaxis_title=&quot;SPM poverty rate&quot;,
    yaxis_ticksuffix=&quot;%&quot;,
    font=dict(family=&quot;Roboto&quot;),
    hovermode=&quot;x&quot;,
    xaxis_tickprefix=&quot;$&quot;,
    xaxis_ticksuffix=&quot;B&quot;,
    plot_bgcolor=&quot;white&quot;,
    height=600,
    width=1000,
    margin_b=90,  # add bottom margin for caption
    legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.7)
)

fig.add_layout_image(
    dict(
        source=&quot;https://raw.githubusercontent.com/UBICenter/blog/master/jb/_static/ubi_center_logo_wide_blue.png&quot;,
        # See https://github.com/plotly/plotly.py/issues/2975.
        # source=&quot;../_static/ubi_center_logo_wide_blue.png&quot;,
        xref=&quot;paper&quot;,
        yref=&quot;paper&quot;,
        x=1,
        y=-0.15,
        sizex=0.12,
        sizey=0.12,
        xanchor=&quot;right&quot;,
        yanchor=&quot;bottom&quot;,
    )
)

fig.update_traces(mode=&quot;markers+lines&quot;)

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/child-ubi-share/2021-01-20-child-ubi-share-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;Still, the results above only model three scenarios.
In our next simulation, we examined the optimal share of spending that should go to children in order to minimize poverty or reduce inequality.
For each spending level, we simulated 101 scenarios that range from 0 percent of the overall funding going to children to 100 percent.
As a benchmark, we show a line at 22%, which corresponds to equal UBI levels for adults and children (since children comprise 22% of the US population).&lt;/p&gt;

&lt;p&gt;The simplest case is inequality reduction, for which optimal policy would give vast majorities of funds to children.
In fact, an annual child allowance should reach over $17,000 per child before any spending goes towards adults.
Even at $3 trillion in new spending, over half of the money would go towards children, resulting in $1,743 a month for kids and $648 per adult.
This is, to some degree, by construction, as our inequality metric considers per-capita resources; other inequality measures may produce different results.&lt;/p&gt;

&lt;p&gt;If the goal is to minimize the poverty rate, the story is a bit more complicated.
For spending levels below $1 trillion, children should receive more than adults; for spending levels above $2 trillion, children should receive less; for spending levels in between, it varies.
Because many people have incomes just below or above their poverty threshold, the poverty rate responds to transfer policy in a volatile way.&lt;/p&gt;

&lt;p&gt;Finally, we examined the effect of UBI design on the  poverty gap, the summation of the distance poor families are from their poverty threshold.
The 2019 poverty gap is $153 billion.
To optimize its reduction, adults should receive more than children at every level above $150 billion in new spending.
With $2 trillion in funding, the poverty gap could be reduced to $45 billion by sending every adult $628 per month and parents $114 per month per child.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
summary = pd.read_csv(
    &quot;https://github.com/ngpsu22/blog/raw/master/children_share_funding_summary%20(4).csv.gz&quot;,
    compression=&quot;gzip&quot;,
)

optimal_poverty_gap = summary.sort_values(&quot;poverty_gap&quot;).drop_duplicates(
    &quot;funding_billions&quot;, keep=&quot;first&quot;
)
# Drop rows where funding level is 0
optimal_poverty_gap = optimal_poverty_gap.drop(
    optimal_poverty_gap[optimal_poverty_gap.funding_billions == 0].index
)

optimal_poverty_rate = summary.sort_values(&quot;poverty_rate&quot;).drop_duplicates(
    &quot;funding_billions&quot;, keep=&quot;first&quot;
)
# Drop rows where funding level is 0
optimal_poverty_rate = optimal_poverty_rate.drop(
    optimal_poverty_rate[optimal_poverty_rate.funding_billions == 0].index
)

optimal_inequality = summary.sort_values(&quot;gini&quot;).drop_duplicates(
    &quot;funding_billions&quot;, keep=&quot;first&quot;
)
# Drop rows where funding level is 0
optimal_inequality = optimal_inequality.drop(
    optimal_inequality[optimal_inequality.funding_billions == 0].index
)

optimal_winners = summary.sort_values(&quot;percent_better_off&quot;).drop_duplicates(
    &quot;funding_billions&quot;, keep=&quot;last&quot;
)
optimal_winners = optimal_winners.drop(
    optimal_winners[optimal_winners.funding_billions == 0].index
)

# Define adult population size, as determined in data preprocessing
adult_pop = 252117111.14000002
# Define child population size
child_pop = 73151070.56999998
# Calculate total population
pop = child_pop + adult_pop

# Create figure
fig = px.line()

# Add inequality trace
fig.add_trace(
    go.Scatter(
        x=optimal_inequality[&quot;funding_billions&quot;],
        y=optimal_inequality[&quot;child_percent_funding&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Gini index&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_inequality[&quot;monthly_child_ubi&quot;],
                optimal_inequality[&quot;monthly_adult_ubi&quot;],
                optimal_inequality[&quot;gini&quot;],
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;i&gt;Children's share of spending&lt;/i&gt;: %{y:.0f}%&lt;br /&gt;&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Adult UBI/mo &lt;/b&gt;: $%{customdata[1]: .0f}&lt;br /&gt;&quot;
            &quot;&lt;br /&gt;&lt;b&gt;Gini index &lt;/b&gt;: %{customdata[2]: .3f}&lt;br /&gt;&quot;
        ),
        line=dict(color=&quot;#499167&quot;),
    )
)

# Add poverty gap trace
fig.add_trace(
    go.Scatter(
        x=optimal_poverty_gap[&quot;funding_billions&quot;],
        y=optimal_poverty_gap[&quot;child_percent_funding&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Poverty gap&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_poverty_gap[&quot;monthly_child_ubi&quot;],
                optimal_poverty_gap[&quot;monthly_adult_ubi&quot;],
                optimal_poverty_gap[&quot;poverty_gap&quot;] / 1e9,
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;i&gt;Children's share of spending&lt;/i&gt;: %{y:.0f}%&lt;br /&gt;&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Adult UBI/mo &lt;/b&gt;: $%{customdata[1]: .0f}&lt;br /&gt;&quot;
            &quot;&lt;br /&gt;&lt;b&gt;Poverty gap &lt;/b&gt;: $%{customdata[2]: .0f} billion&lt;br /&gt;&quot;
        ),
        line=dict(color=DARK_BLUE),
    )
)

# Add poverty gap trace
fig.add_trace(
    go.Scatter(
        x=optimal_poverty_rate[&quot;funding_billions&quot;],
        y=optimal_poverty_rate[&quot;child_percent_funding&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Poverty rate&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_poverty_rate[&quot;monthly_child_ubi&quot;],
                optimal_poverty_rate[&quot;monthly_adult_ubi&quot;],
                optimal_poverty_rate[&quot;poverty_rate&quot;],
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;i&gt;Children's share of spending&lt;/i&gt;: %{y:.0f}%&lt;br /&gt;&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Adult UBI/mo &lt;/b&gt;: $%{customdata[1]: .0f}&lt;br /&gt;&quot;
            &quot;&lt;br /&gt;&lt;b&gt;Poverty rate &lt;/b&gt;: %{customdata[2]: .0f}%&lt;br /&gt;&quot;
        ),
        line=dict(color=LIGHT_BLUE),
    )
)


ratio = (child_pop / pop) * 100

fig.add_shape(
    type=&quot;line&quot;, line=dict(dash=&quot;dot&quot;, color=GRAY), x0=-1, x1=3000, y0=ratio, y1=ratio
)

# plot line where adult benefit is same size as child benefit
fig.add_annotation(
    text=&quot;Adult UBI = Child UBI&quot;,
    xref=&quot;paper&quot;,
    yref=&quot;paper&quot;,
    x=0.98,
    y=0.22,
    showarrow=False,
    font=dict(color=GRAY, size=12),
)

fig.update_xaxes(
    tickangle=0,
    title_text=&quot;Funding in billions&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    ticksuffix=&quot;B&quot;,
    tickprefix=&quot;$&quot;,
    range=[0, 3050],
)

fig.update_yaxes(
    title_text=&quot;Children's share of UBI spending&quot;,
    ticksuffix=&quot;%&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    range=[0, 105],
)

fig.update_layout(
    title_text=&quot;Optimal share of UBI spending on children by optimization criterion&quot;,
    hoverlabel_align=&quot;right&quot;,
    margin_b=90,
    legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.7),
    font=dict(family=&quot;Roboto&quot;),
    plot_bgcolor=&quot;white&quot;,
    height=600,
    width=1000,
    hovermode=&quot;x&quot;,
)

fig.add_layout_image(
    dict(
        source=&quot;https://raw.githubusercontent.com/UBICenter/blog/master/jb/_static/ubi_center_logo_wide_blue.png&quot;,
        # See https://github.com/plotly/plotly.py/issues/2975.
        # source=&quot;../_static/ubi_center_logo_wide_blue.png&quot;,
        xref=&quot;paper&quot;,
        yref=&quot;paper&quot;,
        x=1,
        y=-0.15,
        sizex=0.12,
        sizey=0.12,
        xanchor=&quot;right&quot;,
        yanchor=&quot;bottom&quot;,
    )
)

fig.update_traces(mode=&quot;markers+lines&quot;,)

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/child-ubi-share/2021-01-20-child-ubi-share-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;p&gt;The next chart shows the monthly amount given to children and adults under each optimization (you can hover over points in the prior chart to view this information as well).
Because the poverty gap is less volatile to changes at the margin, the UBI amounts increases are nearly linear. At the highest level of spending in our model, $3 trillion, adults would receive $942 per month and children would receive $171 while optimizing for poverty gap reduction.
Poverty rate amounts are more erratic, while inequality-minimizing amounts are roughly linear with a kink at the point where optimal adult amounts exceed $0.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button4&quot; onclick=&quot;f4()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_4&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Create UBI amount figure
fig = px.line()

fig.add_trace(
    go.Scatter(
        x=optimal_poverty_gap[&quot;funding_billions&quot;],
        y=optimal_poverty_gap[&quot;monthly_child_ubi&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Poverty gap - child&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_poverty_gap[&quot;monthly_child_ubi&quot;],
                optimal_poverty_gap[&quot;poverty_gap&quot;] / 1e9,
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Poverty gap &lt;/b&gt;: $%{customdata[1]: .0f} billion&lt;br /&gt;&quot;
        ),
        line=dict(color=DARK_BLUE),
    )
)

fig.add_trace(
    go.Scatter(
        x=optimal_poverty_gap[&quot;funding_billions&quot;],
        y=optimal_poverty_gap[&quot;monthly_adult_ubi&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Poverty gap - adult&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_poverty_gap[&quot;monthly_adult_ubi&quot;],
                optimal_poverty_gap[&quot;poverty_gap&quot;] / 1e9,
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;b&gt;Adult UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Poverty gap &lt;/b&gt;: %{customdata[1]: .0f} billion&quot;
        ),
        line=dict(color=LIGHT_BLUE),
    )
)

fig.add_trace(
    go.Scatter(
        x=optimal_poverty_rate[&quot;funding_billions&quot;],
        y=optimal_poverty_rate[&quot;monthly_child_ubi&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Poverty rate - child&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_poverty_rate[&quot;monthly_child_ubi&quot;],
                optimal_poverty_rate[&quot;poverty_rate&quot;],
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Poverty rate &lt;/b&gt;: %{customdata[1]: .0f}%&lt;br /&gt;&quot;
        ),
        line=dict(color=&quot;#484848&quot;),
    )
)

fig.add_trace(
    go.Scatter(
        x=optimal_poverty_rate[&quot;funding_billions&quot;],
        y=optimal_poverty_rate[&quot;monthly_adult_ubi&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Poverty rate - adult&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (
                optimal_poverty_rate[&quot;monthly_adult_ubi&quot;],
                optimal_poverty_rate[&quot;poverty_rate&quot;],
            ),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;b&gt;Adult UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Poverty rate &lt;/b&gt;: %{customdata[1]: .0f}%&quot;
        ),
        line=dict(color=GRAY),
    )
)


fig.add_trace(
    go.Scatter(
        x=optimal_inequality[&quot;funding_billions&quot;],
        y=optimal_inequality[&quot;monthly_child_ubi&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Inequality - child&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (optimal_inequality[&quot;monthly_child_ubi&quot;], optimal_inequality[&quot;gini&quot;]),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;b&gt;Child UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Gini &lt;/b&gt;: %{customdata[1]: .3f}&lt;br /&gt;&quot;
        ),
        line=dict(color=&quot;#499167&quot;),
    )
)

fig.add_trace(
    go.Scatter(
        x=optimal_inequality[&quot;funding_billions&quot;],
        y=optimal_inequality[&quot;monthly_adult_ubi&quot;],
        mode=&quot;markers+lines&quot;,
        name=&quot;Inequality - adult&quot;,
        # assign numpy array with child &amp;amp; adult ubi to customdata argument
        customdata=np.stack(
            (optimal_inequality[&quot;monthly_adult_ubi&quot;], optimal_inequality[&quot;gini&quot;]),
            axis=-1,
        ),
        # add customdata to hovertemplate
        hovertemplate=(
            &quot;&lt;b&gt;Adult UBI/mo&lt;/b&gt;: $%{customdata[0]: .0f}&quot;
            + &quot;&lt;br /&gt;&lt;b&gt;Gini &lt;/b&gt;: %{customdata[1]: .3f}&lt;br /&gt;&quot;
        ),
        line=dict(color=&quot;#5FDD9D&quot;),
    )
)

fig.update_xaxes(
    tickangle=0,
    title_text=&quot;Funding in billions&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    ticksuffix=&quot;B&quot;,
    tickprefix=&quot;$&quot;,
    range=[0, 3050],
)

fig.update_yaxes(
    title_text=&quot;Monthly UBI amount&quot;,
    tickprefix=&quot;$&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
)

fig.update_xaxes(title_font=dict(size=14, color=&quot;black&quot;))
fig.update_yaxes(title_font=dict(size=14, color=&quot;black&quot;))
fig.update_layout(
    title_text=&quot;UBI amounts for each optimization&quot;,
    hoverlabel_align=&quot;right&quot;,
    margin_b=90,
    legend=dict(yanchor=&quot;top&quot;, y=1, xanchor=&quot;left&quot;, x=1.03),
    font=dict(family=&quot;Roboto&quot;),
    plot_bgcolor=&quot;white&quot;,
    height=600,
    width=1000,
    hovermode=&quot;x&quot;,
)

fig.update_traces(mode=&quot;markers+lines&quot;)

hide_line = [
    &quot;Poverty rate - child&quot;,
    &quot;Poverty rate - adult&quot;,
    &quot;Inequality - child&quot;,
    &quot;Inequality - adult&quot;,
]
fig.for_each_trace(
    lambda trace: trace.update(visible=&quot;legendonly&quot;) if trace.name in hide_line else ()
)

fig.add_layout_image(
    dict(
        source=&quot;https://raw.githubusercontent.com/UBICenter/blog/master/jb/_static/ubi_center_logo_wide_blue.png&quot;,
        # See https://github.com/plotly/plotly.py/issues/2975.
        # source=&quot;../_static/ubi_center_logo_wide_blue.png&quot;,
        xref=&quot;paper&quot;,
        yref=&quot;paper&quot;,
        x=1,
        y=-0.15,
        sizex=0.12,
        sizey=0.12,
        xanchor=&quot;right&quot;,
        yanchor=&quot;bottom&quot;,
    )
)

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f4() {
  var x = document.getElementById(&quot;asset_code_4&quot;);
  var b = document.getElementById(&quot;button4&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset4&quot;).load(&quot;/assets/markdown_assets/child-ubi-share/2021-01-20-child-ubi-share-asset-4.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset4&quot;&gt;&lt;/div&gt;

&lt;p&gt;Our research shows that different policy objectives and funding levels may lead to starkly different amounts of cash transfer funding going towards children.
Each optimization, however, called for children to receive a nonzero share of UBI spending, and often a larger monthly amount than adults, especially with small budgets and when minimizing inequality.
These results underline the importance of including children in UBI conversations and policy analysis.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;nate&quot;, &quot;will&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="child allowance" />
      

      
        <summary type="html">At least some, but it depends on the measurement.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Basic income would shrink racial poverty disparities</title>
      <link href="/racial-poverty-disparities-mlk-day-2021" rel="alternate" type="text/html" title="Basic income would shrink racial poverty disparities" />
      <published>2021-01-18T00:00:00+00:00</published>
      <updated>2021-01-18T00:00:00+00:00</updated>
      <id>/racial-poverty-disparities-mlk-day-2021</id>
      <content type="html" xml:base="/racial-poverty-disparities-mlk-day-2021">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;Dr. Martin Luther King Jr. is remembered chiefly for his leadership of the civil rights movement,
but toward the end of his life, King extended this leadership to the cause of poverty.
In his &lt;a href=&quot;http://www.thekinglegacy.org/books/where-do-we-go-here-chaos-or-community&quot;&gt;final book&lt;/a&gt;,
he wrote:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-{epigraph}&quot;&gt;The time has come for us to civilize ourselves by the total, direct and immediate abolition of poverty [...] 
I'm now convinced that the simplest approach will prove to be the most effective — the solution to poverty is to abolish it directly by a now widely discussed measure: the guaranteed income.

-- Dr. Martin Luther King, Jr., *Where Do We Go From Here: Chaos or Community?* (1967)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We honor King’s call by showing how a universal basic income (UBI), funded by a flat income tax, would not only reduce overall poverty, but also shrink the poverty disparities between Black and White people. &lt;sup id=&quot;fnref:modeling&quot;&gt;&lt;a href=&quot;#fn:modeling&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Black Americans today are 75 percent more likely to be in poverty than White Americans, with a rate of 18.4 percent compared to 10.5 percent.
A $250 monthly UBI would cut both Black and White poverty roughly in half (this is similar to what we found in a &lt;a href=&quot;https://medium.com/ubicenter/how-universal-basic-income-would-affect-the-black-white-poverty-and-wealth-gaps-452e2af1497b&quot;&gt;July 2020 post&lt;/a&gt;, which used older data and did not simulate taxes to fund the UBI).
A $1,000 monthly UBI funded by a flat income tax would reduce poverty for both White and Black people to about 1 percent.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import pandas as pd
import numpy as np
import microdf as mdf
import plotly.express as px

SPM_COLS = [
    &quot;spm_&quot; + i for i in [&quot;id&quot;, &quot;weight&quot;, &quot;povthreshold&quot;, &quot;resources&quot;, &quot;numper&quot;]
]
raw = pd.read_csv(
    &quot;https://github.com/MaxGhenis/datarepo/raw/master/pppub20.csv.gz&quot;,
    usecols=[&quot;PRDTRACE&quot;, &quot;MARSUPWT&quot;, &quot;AGI&quot;] + [i.upper() for i in SPM_COLS],
)
person = raw.copy(deep=True)
person.columns = person.columns.str.lower()
person[&quot;weight&quot;] = person.marsupwt / 100
person.spm_weight /= 100
person = person.rename(columns={&quot;prdtrace&quot;: &quot;race&quot;})
# Add indicators for white only and black only (not considering other races).
person[&quot;white&quot;] = person.race == 1
person[&quot;black&quot;] = person.race == 2
# Limit to positive AGI.
person[&quot;agi_pos&quot;] = np.maximum(person.agi, 0)
# Need total population to calculate UBI and total AGI for required tax rate.
total_population = person.weight.sum()
total_agi = mdf.weighted_sum(person, &quot;agi_pos&quot;, &quot;weight&quot;)
# Sum up AGI for each SPM unit and merge that back to person level.
spm = person.groupby(SPM_COLS)[[&quot;agi_pos&quot;, &quot;white&quot;, &quot;black&quot;]].sum()
spm.columns = [&quot;spm_&quot; + i for i in spm.columns]
# Merge these back to person to calculate population in White and Black spmus.
person = person.merge(spm, on=&quot;spm_id&quot;)
pop_in_race_spmu = pd.Series(
    {
        &quot;Black&quot;: person[person.spm_black &amp;gt; 0].weight.sum(),
        &quot;White&quot;: person[person.spm_white &amp;gt; 0].weight.sum(),
    }
)
spm.reset_index(inplace=True)


def pov_gap(df, resources, threshold, weight):
    # df: Should be SPM-unit level.
    gaps = np.maximum(df[threshold] - df[resources], 0)
    return (gaps * df[weight]).sum()


def pov(race, monthly_ubi):
    # Total cost and associated tax rate.
    cost = monthly_ubi * total_population * 12
    tax_rate = cost / total_agi
    # Calculate new tax, UBI and resources per SPM unit.
    spm[&quot;new_spm_resources&quot;] = (
        spm.spm_resources - 
        (tax_rate * spm.spm_agi_pos) +  # New tax
        (12 * monthly_ubi * spm.spm_numper))  # UBI
    # Merge back to person.
    person2 = person.merge(spm[[&quot;spm_id&quot;, &quot;new_spm_resources&quot;]], on=&quot;spm_id&quot;)
    # Based on new resources, calculate
    person2[&quot;new_poor&quot;] = person2.new_spm_resources &amp;lt; person2.spm_povthreshold
    # Calculate poverty rate for specified race.
    poverty_rate = mdf.weighted_mean(
        person2[person2[race.lower()]], &quot;new_poor&quot;, &quot;weight&quot;
    )
    # Calculate poverty gap for specified race.
    poverty_gap = pov_gap(
        spm[spm[&quot;spm_&quot; + race.lower()] &amp;gt; 0], &quot;new_spm_resources&quot;,
        &quot;spm_povthreshold&quot;, &quot;spm_weight&quot;
    )
    poverty_gap_per_capita = (poverty_gap / pop_in_race_spmu[race])

    return pd.Series({
        &quot;poverty_rate&quot;: poverty_rate,
        &quot;poverty_gap_per_capita&quot;: poverty_gap_per_capita
    })


def pov_row(row):
    return pov(row.race, row.monthly_ubi)


summary = mdf.cartesian_product(
    {&quot;race&quot;: [&quot;White&quot;, &quot;Black&quot;], &quot;monthly_ubi&quot;: np.arange(0, 1001, 50)}
)
summary = pd.concat([summary, summary.apply(pov_row, axis=1)], axis=1)
# Format results.
summary.poverty_rate = 100 * summary.poverty_rate.round(3)
summary.poverty_gap_per_capita = summary.poverty_gap_per_capita.round(0)
wide = summary.pivot_table(
    [&quot;poverty_rate&quot;, &quot;poverty_gap_per_capita&quot;], &quot;monthly_ubi&quot;, &quot;race&quot;
)
wide.columns = [&quot;pg_black&quot;, &quot;pg_white&quot;, &quot;pr_black&quot;, &quot;pr_white&quot;]
wide[&quot;pg_ratio&quot;] = (wide.pg_black / wide.pg_white).round(2)
wide[&quot;pr_ratio&quot;] = (wide.pr_black / wide.pr_white).round(2)
wide.reset_index(inplace=True)
ratios = wide.melt(id_vars=&quot;monthly_ubi&quot;, value_vars=[&quot;pr_ratio&quot;, &quot;pg_ratio&quot;])
# Change for chart.
ratios.variable.replace({&quot;pr_ratio&quot;: &quot;Poverty rate&quot;,
                         &quot;pg_ratio&quot;: &quot;Poverty gap per capita&quot;},
                        inplace=True)


def add_ubi_center_logo(fig, x=0.98, y=-0.14):
    fig.add_layout_image(
        dict(
            source=&quot;https://raw.githubusercontent.com/UBICenter/blog/master/jb/_static/ubi_center_logo_wide_blue.png&quot;,
            # See https://github.com/plotly/plotly.py/issues/2975.
            # source=&quot;../_static/ubi_center_logo_wide_blue.png&quot;,
            xref=&quot;paper&quot;, yref=&quot;paper&quot;,
            x=x, y=y,
            sizex=0.12, sizey=0.12,
            xanchor=&quot;right&quot;, yanchor=&quot;bottom&quot;
        )
    )


def line_graph(
    df,
    x,
    y,
    color,
    title,
    xaxis_title,
    yaxis_title,
    color_discrete_map,
    yaxis_ticksuffix,
    yaxis_tickprefix,
):
    &quot;&quot;&quot;Style for line graphs.
    
    Arguments
    df: DataFrame with data to be plotted.
    x: The string representing the column in df that holds the new spending in billions.
    y: The string representing the column in df that holds the poverty rate.
    color: The string representing the UBI type.
    xaxis_title: The string represnting the xaxis-title.
    yaxis_title: The string representing the yaxis-title.
    
    Returns
    Nothing. Shows the plot.
    &quot;&quot;&quot;
    fig = px.line(
        df, x=x, y=y, color=color, color_discrete_map=color_discrete_map
    )
    fig.update_layout(
        title=title,
        xaxis_title=xaxis_title,
        yaxis_title=yaxis_title,
        yaxis_ticksuffix=yaxis_ticksuffix,
        yaxis_tickprefix=yaxis_tickprefix,
        font=dict(family=&quot;Roboto&quot;),
        hovermode=&quot;x&quot;,
        xaxis_tickprefix=&quot;$&quot;,
        plot_bgcolor=&quot;white&quot;,
        legend_title_text=&quot;&quot;,
        height=600,
        width=1000,
    )

    fig.update_layout(
        legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.9)
    )

    fig.update_traces(mode=&quot;markers+lines&quot;, hovertemplate=None)
    
    add_ubi_center_logo(fig)

    return fig
    

DARK_BLUE = &quot;#1565C0&quot;
GRAY = &quot;#9E9E9E&quot;
DARK_GREEN = &quot;#388E3C&quot;
LIGHT_GREEN = &quot;#66BB6A&quot;
CONFIG = {&quot;displayModeBar&quot;: False}

fig = line_graph(
    df=summary,
    x=&quot;monthly_ubi&quot;,
    y=&quot;poverty_rate&quot;,
    color=&quot;race&quot;,
    title=&quot;Black and White poverty rate by UBI amount&quot;,
    xaxis_title=&quot;Monthly universal basic income funded by flat income tax&quot;,
    yaxis_title=&quot;SPM poverty rate (2019)&quot;,
    color_discrete_map={&quot;White&quot;: GRAY, &quot;Black&quot;: DARK_BLUE},
    yaxis_ticksuffix=&quot;%&quot;,
    yaxis_tickprefix=&quot;&quot;,
)
fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/racial-poverty-disparities-mlk-day-2021/2021-01-18-racial-poverty-disparities-mlk-day-2021-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;The poverty rate only tells part of the story, though.
When someone goes from deep in poverty to just below the poverty line, the poverty rate is left unchanged, despite the person’s material conditions improving.&lt;/p&gt;

&lt;p&gt;An alternative measure is the &lt;em&gt;poverty gap&lt;/em&gt;, which aggregates each household’s difference between its resources and its poverty threshold. This counts improvements of people who remain in poverty, and can be thought of as the total amount of money required to lift everyone out of poverty, if that money could be perfectly targeted.&lt;/p&gt;

&lt;p&gt;Applying this measure and adjusting for population differences, the Black poverty gap exceeds the White poverty gap by 50 percent: $654 per person, vs. $434 per person.
Given a $250 monthly UBI, which cuts poverty rates in half, poverty gaps also fall by about half, and the difference falls such that the Black poverty gap is about 36 percent higher.
For UBIs above $600 per month, the Black poverty gap even falls below the White poverty gap, likely due to Black people living in areas with lower-cost housing.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = line_graph(
    df=summary,
    x=&quot;monthly_ubi&quot;,
    y=&quot;poverty_gap_per_capita&quot;,
    color=&quot;race&quot;,
    title=&quot;Black and White poverty gap per capita by UBI amount&quot;,
    xaxis_title=&quot;Monthly universal basic income funded by flat income tax&quot;,
    yaxis_title=&quot;Poverty gap per capita (2019)&quot;,
    color_discrete_map={&quot;White&quot;: GRAY, &quot;Black&quot;: DARK_BLUE},
    yaxis_ticksuffix=&quot;&quot;,
    yaxis_tickprefix=&quot;$&quot;,
)
fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/racial-poverty-disparities-mlk-day-2021/2021-01-18-racial-poverty-disparities-mlk-day-2021-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;Viewing these together, it’s clear that UBIs don’t only reduce poverty rates and poverty gaps for both races, but also bring them closer together, reducing racial disparities in poverty.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = line_graph(
    df=ratios,
    x=&quot;monthly_ubi&quot;,
    y=&quot;value&quot;,
    color=&quot;variable&quot;,
    title=&quot;Black poverty relative to White poverty by UBI amount&quot;,
    xaxis_title=&quot;Monthly universal basic income funded by flat income tax&quot;,
    yaxis_title=&quot;Ratio of Black to White poverty measure (2019)&quot;,
    color_discrete_map={&quot;Poverty rate&quot;: LIGHT_GREEN,
                        &quot;Poverty gap per capita&quot;: DARK_GREEN},
    yaxis_ticksuffix=&quot;&quot;,
    yaxis_tickprefix=&quot;&quot;,
)
fig.add_hline(1, line_dash=&quot;dot&quot;)
fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/racial-poverty-disparities-mlk-day-2021/2021-01-18-racial-poverty-disparities-mlk-day-2021-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;p&gt;Dr. King didn’t live to see today’s renaissance of guaranteed income, with pandemic responses including &lt;a href=&quot;https://www.cbsnews.com/news/stimulus-check-600-2000-dollars-eligibility-2021-1-1/&quot;&gt;generous unconditional cash transfers&lt;/a&gt;, &lt;a href=&quot;http://mayorsforagi.org&quot;&gt;mayors across America&lt;/a&gt; calling for pilots, and &lt;a href=&quot;https://www.express.co.uk/news/politics/1316702/nicola-sturgeon-news-scotland-ubi-Universal-Basic-Income-SNP-latest-economy&quot;&gt;leaders across the world&lt;/a&gt; embracing the idea.
But our analysis validates his intuition and the intertwining of his racial justice and economic justice emphases: guaranteed income will produce not only a less impoverished world, but also a less racially disparate one.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:modeling&quot;&gt;
      &lt;p&gt;Data was gathered from the US Census Bureau’s March Supplement, which covers economic circumstances in 2019. We use the Supplemental Poverty Measure, which incorporates taxes and transfers (including in-kind benefits like SNAP), and adjusts for local housing costs. The flat income tax is applied on positive adjusted gross income. We calculate per-capita poverty gaps by race as the total poverty gap of SPM units with at least one person of that race, divided by the number of people in SPM units with at least one person of that race. &lt;a href=&quot;#fnref:modeling&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;max&quot;, &quot;connor&quot;, &quot;nate&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="race" />
      
        <category term="poverty" />
      

      
        <summary type="html">$600 per month or more would end one measure of the Black-White poverty disparity.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Basic income can make switching to a flat income tax progressive</title>
      <link href="/us-flat-tax" rel="alternate" type="text/html" title="Basic income can make switching to a flat income tax progressive" />
      <published>2020-12-30T00:00:00+00:00</published>
      <updated>2020-12-30T00:00:00+00:00</updated>
      <id>/us-flat-tax</id>
      <content type="html" xml:base="/us-flat-tax">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;The current US income tax code taxes different types of incomes at different rates, includes an array of credits and deductions that primarily benefit the &lt;a href=&quot;https://fivethirtyeight.com/features/the-tax-deductions-economists-hate/&quot;&gt;upper and middle class&lt;/a&gt;, and requires Americans to spend &lt;a href=&quot;https://www.washingtonpost.com/wp-srv/politics/documents/economy082710.pdf&quot;&gt;billions of hours and dollars&lt;/a&gt; filing taxes each year.
A &lt;a href=&quot;https://www.pewresearch.org/fact-tank/2016/04/06/the-biggest-u-s-tax-breaks/&quot;&gt;2015 Pew survey&lt;/a&gt; found that 66 percent of Republicans and 48 percent of Democrats support completely changing the tax system.
While there are many ways to reform the tax code, a simple way is taxing every dollar at the same rate; this is often called a “flat tax.”
In this paper, we examine the impact of replacing today’s system with a budget-neutral combination of flat income taxes and universal basic incomes (UBIs).&lt;/p&gt;

&lt;h2 id=&quot;us-flat-tax-simulations&quot;&gt;US flat tax simulations&lt;/h2&gt;

&lt;p&gt;We simulated the effect of replacing the current federal income tax code and employee side payroll tax with a flat tax over a range of rates.
We allocated any excess revenue to a UBI to make each reform budget-neutral, and filled budget shortfalls with a head tax (equal tax amount per person, essentially a negative UBI). &lt;sup id=&quot;fnref:modeling&quot;&gt;&lt;a href=&quot;#fn:modeling&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;A flat tax of approximately 18 percent would raise the same amount of revenue as federal income taxes and employee side payroll do today.
Each percentage point of flat tax raises enough revenue to fund a UBI of $360 per year for each adult and child.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
import microdf as mdf
import statsmodels.api as sm
import stargazer.stargazer as sg
from pandas_datareader import wb


summary = pd.read_csv(&quot;data/summary.csv&quot;)


BLUE = &quot;#1976D2&quot;
DARK_BLUE = &quot;#1565C0&quot;
LIGHT_BLUE = &quot;#90CAF9&quot;
GRAY = &quot;#BDBDBD&quot;
CONFIG = {&quot;displayModeBar&quot;: False}

def add_ubi_center_watermark(fig, x, y=-0.14):
    fig.add_layout_image(
        dict(
            source=&quot;https://raw.githubusercontent.com/UBICenter/blog/master/jb/_static/ubi_center_logo_wide_blue.png&quot;,
            # See https://github.com/plotly/plotly.py/issues/2975.
            # source=&quot;../_static/ubi_center_logo_wide_blue.png&quot;,
            xref=&quot;paper&quot;, yref=&quot;paper&quot;,
            x=x, y=y,
            sizex=0.12, sizey=0.12,
            xanchor=&quot;right&quot;, yanchor=&quot;bottom&quot;
        )
    )

fig = px.line()

fig.add_trace(
    go.Scatter(
        x=summary.flat_tax,
        y=summary.ubi.round(),
        mode=&quot;markers+lines&quot;,
        name=&quot;UBI (head tax)&quot;,
        line=dict(color=BLUE, width=2),
    )
)

fig.add_shape(
    type=&quot;line&quot;, line=dict(dash=&quot;dot&quot;, color=&quot;gray&quot;), x0=-1, x1=50, y0=0, y1=0
)

fig.update_xaxes(
    tickangle=0,
    title_text=&quot;Flat tax rate&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    ticksuffix=&quot;%&quot;,
    tickprefix=&quot;&quot;,
)

fig.update_yaxes(
    title_text=&quot;Budget-neutral annual UBI (head tax)&quot;,
    tickprefix=&quot;$&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
)

fig.update_xaxes(title_font=dict(size=16, color=&quot;black&quot;))
fig.update_yaxes(title_font=dict(size=16, color=&quot;black&quot;))
fig.update_layout(
    title_text=&quot;Budget-neutral UBI (head tax) by flat tax rate&quot;,
    hoverlabel_align=&quot;right&quot;,
    font_family=&quot;Roboto&quot;,
    title_font_size=20,
)

add_ubi_center_watermark(fig, 0.98)

fig.update_layout(plot_bgcolor=&quot;white&quot;, hovermode=&quot;x&quot;)
fig.update_layout(legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.8))
fig.update_traces(mode=&quot;markers+lines&quot;)

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/us-flat-tax/2020-12-30-us-flat-tax-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;This replacement would increase the poverty rate by 37 percent, increase the poverty gap (the dollar amount needed to lift everyone above the poverty line) by 23 percent, and increase inequality (as measured by the Gini index of resources per person) by 7 percent.&lt;/p&gt;

&lt;p&gt;Maintaining current levels of poverty and inequality requires a higher tax rate to raise funds for a UBI.
A 21 percent flat tax, which would give each person $1,200 per year, would maintain the current poverty gap; a rate and poverty gap; a 22 percent tax giving each person about $1,600 per year would maintain the current poverty rate; a 23 percent tax giving each person about $1,900 would maintain current inequality.&lt;/p&gt;

&lt;p&gt;Higher taxes funding more generous UBIs reduce poverty and inequality to a greater degree.
A flat tax of 30 percent would fund a UBI (including children) of nearly $4,500—cutting poverty in half and inequality by 9 percent.
Going up to 50 percent funds a $1,000 monthly UBI, leaving the poverty rate at a tenth of its currently level and cutting inequality by a third.&lt;/p&gt;

&lt;p&gt;The chart below shows how different flat tax rates up to 50 percent would impact poverty and inequality (the hover function shows the corresponding head tax or UBI for each reform).&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def trace(col, chg_col, name, string, color):
    &quot;&quot;&quot;
    Args:
        col: Column name.
        chg_col: Column name of change.
        name: Name of column for printing.
        string: Formatting of customdata[1].
        color: Line color.
    &quot;&quot;&quot;
    fig.add_trace(
        go.Scatter(
            x=summary.flat_tax,
            y=summary[chg_col],
            mode=&quot;markers+lines&quot;,
            name=name,
            line=dict(color=color, width=2),
            customdata=np.stack((summary.ubi, summary[col]), axis=-1),
            hovertemplate=&quot;&lt;br /&gt;Flat tax: %{x}&lt;br /&gt;&quot;
            + &quot;UBI (head tax): $%{customdata[0]: .0f}&lt;br /&gt;&quot;
            + name
            + &quot;: &quot;
            + string
            + &quot;&lt;br /&gt;&quot;
            + &quot;Percent change: %{y:.0f}%&lt;br /&gt;&quot;,
            marker=dict(size=5),
        )
    )


fig = px.line()
trace(
    &quot;poverty_rate&quot;,
    &quot;change_poverty_rate&quot;,
    &quot;Poverty rate&quot;,
    &quot;%{customdata[1]: .1f}%&quot;,
    DARK_BLUE,
)
trace(
    &quot;poverty_gap_billions&quot;,
    &quot;change_poverty_gap&quot;,
    &quot;Poverty gap&quot;,
    &quot;$%{customdata[1]: .0f}B&quot;,
    LIGHT_BLUE,
)
trace(&quot;gini&quot;, &quot;change_gini&quot;, &quot;Gini index&quot;, &quot;%{customdata[1]}&quot;, GRAY)


fig.update_xaxes(
    tickangle=0,
    title_text=&quot;Flat tax rate&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    ticksuffix=&quot;%&quot;,
    tickprefix=&quot;&quot;,
    range=[-2, 51],
)

fig.update_yaxes(
    title_text=&quot;Percent change&quot;,
    ticksuffix=&quot;%&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    range=[-101, 301],
)

fig.update_xaxes(title_font=dict(size=16, color=&quot;black&quot;))
fig.update_yaxes(title_font=dict(size=16, color=&quot;black&quot;))
fig.update_layout(
    title_text=(
        &quot;Replacing employee side FICA and federal income taxes with &quot;
        &quot;a flat tax and UBI (head tax)&quot;
    ),
    title_font_size=20,
    hoverlabel_align=&quot;right&quot;,
    font_family=&quot;Roboto&quot;,
)

add_ubi_center_watermark(fig, 1.01)

fig.update_layout(plot_bgcolor=&quot;white&quot;, hovermode=&quot;x&quot;)
fig.update_yaxes(zeroline=True, zerolinewidth=2, zerolinecolor=&quot;black&quot;)
fig.update_layout(legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.75))

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/us-flat-tax/2020-12-30-us-flat-tax-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;From the point of the flat tax producing a UBI (18 percent), higher rates lead to more Americans benefiting on a net basis.
Replacing today’s taxes on individual income with a 28 percent flat tax would give each person about $3,700 per year, benefiting the majority of Americans.
The share that come out ahead levels off around 60 percent, with flat taxes of 40 percent or more.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = px.line()

fig.add_trace(
    go.Scatter(
        x=summary.flat_tax,
        y=summary.percent_better_off,
        mode=&quot;markers+lines&quot;,
        name=&quot;&quot;,
        line=dict(color=BLUE, width=2),
        customdata=np.stack(
            (summary.ubi, summary.percent_better_off), axis=-1
        ),
        hovertemplate=&quot;&lt;br /&gt;Flat tax: %{x}&lt;br /&gt;&quot;
        # TODO: Adapt &quot;UBI&quot; vs &quot;head tax&quot; for value.
        + &quot;UBI (head tax): $%{customdata[0]: .0f}&lt;br /&gt;&quot;
        + &quot;Share better off: %{y:.0f}%&lt;br /&gt;&quot;,
        marker=dict(size=5),
    )
)

fig.add_shape(
    type=&quot;line&quot;,
    line=dict(dash=&quot;dot&quot;, color=&quot;gray&quot;),
    x0=-1,
    x1=50,
    y0=50,
    y1=50,
)

fig.update_xaxes(
    tickangle=0,
    title_text=&quot;Flat tax rate&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    ticksuffix=&quot;%&quot;,
    tickprefix=&quot;&quot;,
)

fig.update_yaxes(
    title_text=&quot;&quot;,
    ticksuffix=&quot;%&quot;,
    tickfont={&quot;size&quot;: 14},
    title_standoff=25,
    tickvals=[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
    range=[20, 80],
)

fig.update_xaxes(title_font=dict(size=16, color=&quot;black&quot;))
fig.update_yaxes(title_font=dict(size=16, color=&quot;black&quot;))
fig.update_layout(
    title_text=(
        &quot;Share of people who gain from switching to a flat tax and &quot;
        &quot;UBI (head tax)&quot;
    ),
    title_font_size=20,
    hoverlabel_align=&quot;right&quot;,
    font_family=&quot;Roboto&quot;,
)

add_ubi_center_watermark(fig, 0.98)

fig.update_layout(plot_bgcolor=&quot;white&quot;, height=600, width=1000, hovermode=&quot;x&quot;)
fig.update_layout(legend=dict(yanchor=&quot;top&quot;, y=0.99, xanchor=&quot;left&quot;, x=0.8))
fig.update_traces(mode=&quot;markers+lines&quot;)

fig.show(config=CONFIG)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/us-flat-tax/2020-12-30-us-flat-tax-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;generous-transfers-are-the-key-to-inequality-reduction&quot;&gt;Generous transfers are the key to inequality reduction&lt;/h2&gt;

&lt;p&gt;Labor markets don’t explain the unusually high level of inequality in the United States, third only to Chile and Mexico among developed countries.
For example, the US has similar “market income” inequality as France, Germany, and Finland—each with Gini indexes of 0.50 to 0.51, as shown in the right bars of this graph from &lt;a href=&quot;https://ourworldindata.org/income-inequality&quot;&gt;Our World In Data&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//assets/images/inequality-of-incomes-before-and-after-taxes-and-transfers.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What’s unusual about the US is how little its government reduces inequality through redistribution.
While France, Germany, and Finland reduce inequality by 0.21, 0.22, and 0.24 on the Gini scale, the US only reduces it by 0.12.&lt;/p&gt;

&lt;p&gt;What mechanisms do these other countries utilize to cut inequality twice as much as the US?
Counterintuitively, it’s not progressive taxation—the US actually has the most progressive tax code in the OECD,&lt;sup id=&quot;fnref:progressive-tax&quot;&gt;&lt;a href=&quot;#fn:progressive-tax&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; and tax progressivity does not correlate significantly to inequality reduction (if anything the relationship is slightly negative).&lt;/p&gt;

&lt;p&gt;:::{admonition,dropdown,tip} Data notes
Data on inequality reduction comes from Our World In Data’s analysis of OECD data reflecting the period 2012 to 2014.
Data on the concentration index and income shares of household taxes and cash transfers come from Table 4.6 of the OECD’s 2008 report, &lt;a href=&quot;https://read.oecd-ilibrary.org/social-issues-migration-health/growing-unequal_9789264044197-en#page109&quot;&gt;&lt;em&gt;Growing Unequal?&lt;/em&gt;&lt;/a&gt;, which uses data from around 2005.
Country population is as of 2014 from the World Bank.
Taxes include income taxes and employee social security contributions, not consumption taxes;
however, per &lt;a href=&quot;https://read.oecd-ilibrary.org/social-issues-migration-health/growing-unequal_9789264044197-en#page296&quot;&gt;Figure 11.2&lt;/a&gt; in &lt;em&gt;Growing Unequal?&lt;/em&gt;, consumption taxes have a small effect on relative levels of inequality across OECD countries.
:::&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button4&quot; onclick=&quot;f4()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_4&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Get data.
pop = wb.download(indicator=&quot;SP.POP.TOTL&quot;,
                  country='all', start=2014, 
                  end=2014).reset_index().drop('year', axis=1)
pop.rename({&quot;SP.POP.TOTL&quot;: &quot;population&quot;}, axis=1, inplace=True)
# Align countries with Our World In Data and current convention.
pop.country.replace({&quot;Czech Republic&quot;: &quot;Czech Rep.&quot;,
                     &quot;Slovak Republic&quot;: &quot;Slovakia&quot;,
                     &quot;Korea, Rep.&quot;: &quot;South Korea&quot;},
                     inplace=True)

oecd_raw = pd.read_csv(&quot;data/oecd_growing_unequal_2008_table_4_6.csv&quot;)
# Align countries with Our World In Data and current convention.
oecd_raw.country.replace({&quot;Korea&quot;: &quot;South Korea&quot;,
                          &quot;Slovak Rep.&quot;: &quot;Slovakia&quot;},
                         inplace=True)
owid = pd.read_csv(&quot;data/inequality_pre_post_redistribution.csv&quot;)
owid[&quot;gini_diff&quot;] = owid.gini_market - owid.gini_disposable
oecd = oecd_raw.merge(owid, on=&quot;country&quot;).merge(pop, on=&quot;country&quot;)
oecd[&quot;sqrt_pop&quot;] = np.sqrt(oecd.population)

LABELS = {&quot;gini_diff&quot;:
          &quot;Gini reduction via taxes and transfers&quot;,
          &quot;household_taxes_concentration&quot;:
          &quot;Household tax concentration index&quot;,
          &quot;public_cash_transfers_income_share&quot;:
          &quot;Cash transfer share of household income&quot;,
          &quot;population&quot;:
          &quot;Population&quot;,
          &quot;household_taxes_income_share&quot;:
          &quot;Tax share of household income&quot;
         }

# Make plot.
def ineq_scatter(x, xtitle, title, logo_x=1):
    fig = px.scatter(oecd, x=x, y=&quot;gini_diff&quot;, hover_name=&quot;country&quot;,
                     size=&quot;sqrt_pop&quot;, #trendline=&quot;ols&quot;,
                     labels=LABELS,
                     size_max=30)
    # Remove sqrt_pop from hover template.
    hovertemplate = (&quot;&lt;b&gt;%{hovertext}&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&quot; +
                     LABELS[x] + &quot;=%{x}&lt;br /&gt;&quot;
                     &quot;Gini reduction via taxes and transfers=%{y}&quot;)
    fig.update_traces(hovertemplate=hovertemplate)
    fig.update_layout(
        title_text=title,
        title_font_size=20,
        font_family=&quot;Roboto&quot;,
    )

    fig.update_xaxes(
        tickangle=0,
        title_text=xtitle,
        tickfont={&quot;size&quot;: 14},
        title_standoff=25,
        ticksuffix=&quot;&quot;,
        tickprefix=&quot;&quot;,
    )

    fig.update_yaxes(
        title_text=&quot;Difference between market and disposable income Gini index&quot;,
        ticksuffix=&quot;&quot;,
        tickfont={&quot;size&quot;: 14},
        title_standoff=25,
    )
    if x == &quot;public_cash_transfers_income_share&quot;:
        fig.update_xaxes(ticksuffix=&quot;%&quot;)

    fig.update_xaxes(title_font=dict(size=16, color=&quot;black&quot;))
    fig.update_yaxes(title_font=dict(size=16, color=&quot;black&quot;))

    add_ubi_center_watermark(fig, x=logo_x, y=-0.17)

    fig.update_layout(plot_bgcolor=&quot;white&quot;)

    return fig
    
fig = ineq_scatter(x=&quot;household_taxes_concentration&quot;,
             xtitle=&quot;Household tax concentration index&quot;,
             title=&quot;Tax progressivity and inequality reduction in the OECD&quot;)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f4() {
  var x = document.getElementById(&quot;asset_code_4&quot;);
  var b = document.getElementById(&quot;button4&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset4&quot;).load(&quot;/assets/markdown_assets/us-flat-tax/2020-12-30-us-flat-tax-asset-4.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset4&quot;&gt;&lt;/div&gt;

&lt;p&gt;A stronger correlate of inequality reduction is the generosity of public cash transfers.
The countries that distribute a higher share of household income as cash transfers generally cut inequality more.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button5&quot; onclick=&quot;f5()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_5&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = ineq_scatter(x=&quot;public_cash_transfers_income_share&quot;,
             xtitle=&quot;Public cash transfers / household disposable income&quot;,
             title=&quot;Cash transfer generosity and inequality reduction in the OECD&quot;,
             logo_x=0.95)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f5() {
  var x = document.getElementById(&quot;asset_code_5&quot;);
  var b = document.getElementById(&quot;button5&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset5&quot;).load(&quot;/assets/markdown_assets/us-flat-tax/2020-12-30-us-flat-tax-asset-5.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset5&quot;&gt;&lt;/div&gt;

&lt;p&gt;While overall tax levels also significantly correlate with inequality reduction, the effect vanishes when controlling for cash transfers, as shown in column 4 of the regression table below.
Cash transfers are consistently the dominant predictor of the extent to which governments reduce inequality.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button6&quot; onclick=&quot;f6()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_6&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
oecd = sm.add_constant(oecd)

def gini_reg(x, weighted=True):
    if weighted:
        m = sm.WLS(oecd.gini_diff, oecd[x + [&quot;const&quot;]], oecd.population)
    else:
        m = sm.WLS(oecd.gini_diff, oecd[x + [&quot;const&quot;]])
    return m.fit(cov_type=&quot;HC1&quot;)  # Robust standard errors.

cash_m = gini_reg([&quot;public_cash_transfers_income_share&quot;])
tax_prog_m = gini_reg([&quot;household_taxes_concentration&quot;])
tax_level_m = gini_reg([&quot;household_taxes_income_share&quot;])
combined_m = gini_reg([&quot;household_taxes_concentration&quot;,
                       &quot;household_taxes_income_share&quot;,
                       &quot;public_cash_transfers_income_share&quot;])

def starg(models, covariate_order=None):
    &quot;&quot;&quot; Creates formatted Stargazer object.
    &quot;&quot;&quot;
    star = sg.Stargazer(models)
    if covariate_order is not None:
        star.covariate_order(covariate_order)
    star.rename_covariates(LABELS)
    star.show_adj_r2 = False
    star.show_residual_std_err = False
    star.show_f_statistic = False
    return star


star = starg([cash_m, tax_level_m, tax_prog_m, combined_m],
             [&quot;public_cash_transfers_income_share&quot;,
              &quot;household_taxes_income_share&quot;,
              &quot;household_taxes_concentration&quot;,
              ])
star.add_custom_notes([&quot;Weighted by population. Robust SEs.&quot;])
star.title(&quot;Inequality reduction and tax levels, tax progressivity, and cash &quot;
           &quot;transfers&quot;)
star
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f6() {
  var x = document.getElementById(&quot;asset_code_6&quot;);
  var b = document.getElementById(&quot;button6&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset6&quot;).load(&quot;/assets/markdown_assets/us-flat-tax/2020-12-30-us-flat-tax-asset-6.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset6&quot;&gt;&lt;/div&gt;

&lt;p&gt;This cross-country picture aligns with our simulations: larger UBIs cut inequality more, and even if the tax system that funds those larger UBIs isn’t progressive, ability to fund the UBI is what matters.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Beyond their simplicity, flat taxes have a number of theoretical advantages.
Progressive tax structures necessarily encourage shifting income from one year to the next as well as &lt;a href=&quot;https://www.cbo.gov/sites/default/files/105th-congress-1997-1998/reports/marriage.pdf&quot;&gt;marriage, divorce, or both&lt;/a&gt;.&lt;sup id=&quot;fnref:marriage&quot;&gt;&lt;a href=&quot;#fn:marriage&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;
Flat taxes treat income neutrally, regardless of when it was earned, by whom, or earners’ family choices.
And because they align marginal tax rates (which determine labor incentives) with effective tax rates (which determine revenue), they raise revenue with relatively little work disincentive.
For example, a &lt;a href=&quot;https://www.nber.org/papers/w27622&quot;&gt;2020 paper&lt;/a&gt; from the National Bureau of Economic Research found that “a uniform flat tax on capital and labor income combined with a lump-sum transfer is nearly optimal.”&lt;/p&gt;

&lt;p&gt;And consider a progressive tax policy with two rates: 0% (a standard deduction) and 50%.
If the standard deduction is $30,000, the first couple has a total tax liability of $15,000 if filing as a couple, but $0 if filing separately—a large marriage bonus (the second couple’s tax liability is $15,000 whether married or separate).
If the standard deduction instead varies with marital status, e.g. $15,000 for singles and $30,000 for couples, then the first couple will be treated neutrally, paying $15,000 whether filing separate or married.
But now the second couple faces a marriage &lt;em&gt;bonus&lt;/em&gt;, paying $22,500 in taxes if filing separately, but only $15,000  if married.
This can be partly remedied by moving to an individualized tax system, as the United Kingdom does, where earnings are taxed independently of a spouse’s earnings.
But couples will still have joint assets, and therefore face marriage penalties or bonuses on their capital income if capital income is taxed progressively.
Only a flat tax avoids marriage penalties or bonuses.&lt;/p&gt;

&lt;p&gt;Our simulations and cross-country comparisons show that these advantages don’t need to come at the cost of progressivity; if anything, they may enhance progressivity.
Even a 30 percent flat income tax, with excess revenue distributed as UBI, could cut poverty in half, reduce inequality by 10 percent, and leave most Americans better off.
To achieve the egalitarianism of other developed countries, the US should focus less on progressive taxation, and more on how to raise enough revenue to distribute it broadly, effectively, and generously.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:modeling&quot;&gt;
      &lt;p&gt;We replaced all elements of the personal income tax code, including refundable tax credits, but we retained benefit programs. The analysis is fully static; we did not model changes to labor supply resulting from the changes to marginal tax rates and incomes. We used the Current Population Survey (CPS) March Supplement reflecting income from 2019. The Census Bureau estimates tax liabilities using a microsimulation model, but income and taxes are known to be under-reported in the CPS. &lt;a href=&quot;#fnref:modeling&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:progressive-tax&quot;&gt;
      &lt;p&gt;As of 2005, the US had the most progressive tax code of any OECD country according to the concentration index (as shown in the graph), as well as two alternative measures: the ratio of concentration coefficients of household taxes to the Gini index of market income, and the ratio of the richest decile’s tax share to its market income share (&lt;a href=&quot;https://read.oecd-ilibrary.org/social-issues-migration-health/growing-unequal_9789264044197-en#page108&quot;&gt;Table 4.5&lt;/a&gt; of &lt;em&gt;Growing Unequal?&lt;/em&gt;). &lt;a href=&quot;#fnref:progressive-tax&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:marriage&quot;&gt;
      &lt;p&gt;Consider, for example, two couples: one with $30,000 earnings each, and another with one earning $60,000 and the spouse earning $0. &lt;a href=&quot;#fnref:marriage&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;nate&quot;, &quot;max&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="tax" />
      

      
        <summary type="html">Flat tax rates of 25 percent or more would reduce poverty and inequality.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Student debt cancellation is less progressive than universal payments</title>
      <link href="/student-debt" rel="alternate" type="text/html" title="Student debt cancellation is less progressive than universal payments" />
      <published>2020-11-17T00:00:00+00:00</published>
      <updated>2020-11-17T00:00:00+00:00</updated>
      <id>/student-debt</id>
      <content type="html" xml:base="/student-debt">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;Over 40 million Americans possess over $1.5 trillion in student debt. And as new borrowers take out loans faster than old borrowers pay them back, that number is &lt;a href=&quot;https://www.newyorkfed.org/microeconomics/hhdc.html&quot;&gt;increasing with time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This problem has led to Democrats across the ideological spectrum to advocate for student debt relief. In the 2020 primary, Bernie Sanders had the most generous &lt;a href=&quot;https://berniesanders.com/issues/free-college-cancel-debt/&quot;&gt;plan&lt;/a&gt;, calling for the cancellation of all outstanding student debt regardless of a person’s income. Also in the primary, Elizabeth Warren &lt;a href=&quot;https://elizabethwarren.com/plans/affordable-higher-education&quot;&gt;proposed&lt;/a&gt; cancelling up to $50,000 in student debt, phasing out for households with income above $100,000; in September 2020, she and Senate Minority Leader Chuck Schumer &lt;a href=&quot;https://www.politico.com/f/?id=00000174-9b5b-d59c-a174-df5f0b960000&quot;&gt;introduced a resolution&lt;/a&gt; calling on Biden to cancel $50,000 in debt per person through executive order (the resolution didn’t mention phasing out the cancellation with income).   Back in April, President-elect Joe Biden &lt;a href=&quot;https://medium.com/@JoeBiden/joe-biden-outlines-new-steps-to-ease-economic-burden-on-working-people-e3e121037322&quot;&gt;recommended&lt;/a&gt; forgiving a minimum of $10,000 of student debt per person.&lt;/p&gt;

&lt;p&gt;In this paper, I analyze which Americans would benefit the most from student debt cancellation and examine how it compares to budget-equivalent universal payments. I find that, across a range of distributional outcomes, each student debt cancellation plan would be less progressive than a universal payment of the same total cost.&lt;/p&gt;

&lt;h2 id=&quot;who-holds-the-debt&quot;&gt;Who holds the debt?&lt;/h2&gt;

&lt;p&gt;First, a caveat: data on student debt is incomplete. The Federal Reserve’s Survey of Consumer Finances (SCF) is the primary source of wealth microdata, powering inequality statistics, detailed breakdowns of assets and liabilities, and microsimulations like mine. However, it only counts people in a household’s “Primary Economic Unit,” meaning economically independent young adults living with parents are excluded. As a result, the SCF understates total student debt by about a third, compared to aggregate data sources like the &lt;a href=&quot;https://www.federalreserve.gov/releases/g19/current/&quot;&gt;G.19&lt;/a&gt; and &lt;a href=&quot;https://www.newyorkfed.org/medialibrary/interactives/householdcredit/data/pdf/hhdc_2019q4.pdf&quot;&gt;Consumer Credit Panel&lt;/a&gt;. The missing student debt is disproportionately held by &lt;a href=&quot;https://www.peoplespolicyproject.org/2019/06/27/low-income-people-have-more-student-debt-than-realized/&quot;&gt;young people&lt;/a&gt; and people in the &lt;a href=&quot;https://www.brookings.edu/blog/up-front/2019/06/28/who-owes-the-most-student-debt/&quot;&gt;bottom and top income quintiles&lt;/a&gt;. While my colleagues and I aim to refine the data, the SCF is currently the best available source for this sort of analysis, so I use it here while acknowledging its limitations.&lt;/p&gt;

&lt;p&gt;That said, the 2019 SCF reports $1.1 trillion of total student debt,&lt;sup id=&quot;fnref:debt&quot;&gt;&lt;a href=&quot;#fn:debt&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; held by households representing one in four Americans. Some demographics are more likely to hold debt than others:&lt;sup id=&quot;fnref:hhdemo&quot;&gt;&lt;a href=&quot;#fn:hhdemo&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Black Americans are the most likely to have student debt, while Hispanic Americans are the least likely, with 33 percent and 18 percent of people possessing student debt respectively.&lt;/li&gt;
  &lt;li&gt;Young people are more likely to hold student debt than any other age group: 40 percent of people under 35 have student debt compared to just 2 percent of those who are 75 or older.&lt;/li&gt;
  &lt;li&gt;Income quintiles&lt;sup id=&quot;fnref:quintiles&quot;&gt;&lt;a href=&quot;#fn:quintiles&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; follow a bell curve, with the highest amount of debt held by the middle class and smaller amounts held by the lowest and highest quintile.&lt;/li&gt;
  &lt;li&gt;Americans living in poverty&lt;sup id=&quot;fnref:poverty&quot;&gt;&lt;a href=&quot;#fn:poverty&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; are less likely to possess student debt than Americans living above the poverty line.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The chart below (and others like it included in this paper) allow you to compare the results across race, education level, age groups, income quintiles, net worth quintiles, and poverty status.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Import libraries
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import microdf as mdf
import plotly.graph_objects as go

race = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/race_debt_ubi%20(1).csv')
education = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/education_debt_ubi.csv')
age = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/age_debt_ubi.csv')
income = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/income_debt_ubi%20(1).csv')
networth = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/networth_debt_ubi%20(1).csv')
poor = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/poor_debt_ubi.csv')
all2 = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/all2.csv')
racial_wealth_gap = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/racial_wealth_gap%20(2)')
scf = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/scf_raw2')

race2 = race.drop([4])
education2 = education.drop([4])
age2 = age.drop([6])
income2 = income.drop([5])
networth2 = networth.drop([5])
poor2 = poor.drop([2])

# Colors from https://material.io/design/color/the-color-system.html
BLUE = '#1976D2'
DARK_BLUE = '#1565C0'
LIGHT_BLUE = '#90CAF9'
GRAY = '#BDBDBD'

colors = [GRAY,] * 5

colors2 = [GRAY,] * 7

colors3 = [GRAY,] * 6

colors4 = [GRAY,] * 3

fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_has_debt'], 
                     text=race2['percent_has_debt'], name='race',
                     showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_has_debt'],
                     text=education2['percent_has_debt'], name='education',
                     visible = False, showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_has_debt'], name='age',
                     text=age2['percent_has_debt'], visible = False,
                     showlegend=False, marker_color=colors2))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_has_debt'],
                     text=income2['percent_has_debt'], name='income', visible = False,
                     showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_has_debt'], y=networth2['percent_has_debt'],
                     name='networth', visible = False, showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_has_debt'],
                     text=poor2['percent_has_debt'], name='poor',
                     visible = False, showlegend=False, marker_color=colors4))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Share of people in households with student debt&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,50])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Population share with student debt by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Population share with student debt by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Population share with student debt by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Population share with student debt by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Population share with student debt by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Population share with student debt by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Population share with student debt by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;The average person holds about $3,700 in student debt, including those who have no debt at all, with demographic trends similar to the share of households holding debt.  As expected, households headed by college graduates possess the most debt, holding 18 times the amount of debt for those headed by people without a high school diploma (whose student debt is ostensibly held by a spouse or child).  Those at the bottom of the net worth distribution have more student debt than those at the top. This too is unsurprising as younger people hold a disproportionate amount of debt and the student debt itself decreases one’s net worth.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Average debt by demographic

fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['mean_debt'], 
                     text=race2['mean_debt'], name='race',
                     showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['mean_debt'],
                     text=education2['mean_debt'], name='education',
                     visible = False, showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['mean_debt'], name='age',
                     text=age2['mean_debt'], visible = False,
                     showlegend=False, marker_color=colors2))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['mean_debt'],
                     text=income2['mean_debt'], name='income', visible = False,
                     showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['mean_debt'], y=networth2['mean_debt'],
                     name='networth', visible = False, showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['mean_debt'],
                     text=poor2['mean_debt'], name='poor',
                     visible = False, showlegend=False, marker_color=colors4))


fig.update_layout(uniformtext_minsize=11, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average student debt per person&quot;,
        tickprefix =&quot;$&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,12_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Average student debt by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Average student debt by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Average student debt by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Average student debt by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Average student debt by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Average student debt by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Average student debt by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;comparing-50000-debt-cancellation-to-a-budget-equivalent-universal-payment&quot;&gt;Comparing $50,000 debt cancellation to a budget-equivalent universal payment&lt;/h2&gt;

&lt;p&gt;According to the 2019 SCF, the Warren-Schumer proposal to cancel $50,000 in student debt would cost approximately $700 billion, or about $2,300 for every adult and child. What if that $2,300 was given directly as a universal payment?&lt;/p&gt;

&lt;p&gt;On average, groups that would receive more money from student debt cancellation include the top two income quintiles, Black Americans, college graduates, and people not in poverty; other groups would receive more from the universal payment.&lt;/p&gt;

&lt;h3 id=&quot;average-benefit-per-policy&quot;&gt;Average benefit per policy&lt;/h3&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Average Benefit by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_change_50,
    text=race2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))


fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_change_50,
    text= race2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))


fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_change_50,
    text=education2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_change_50,
    text=education2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_change_50,
    text=age2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_change_50,
    text=age2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_change_50,
    text=income2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_change_50,
    text=income2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_change_50,
    text=networth2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_change_50,
    text=networth2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_change_50,
    text=poor2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_change_50,
    text=poor2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average benefit per person&quot;,
        ticksuffix =&quot;&quot;,
        tickprefix =&quot;$&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,12_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Average benefit by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Average benefit of reform by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Average benefit of reform by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Average benefit of reform by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])


fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;share-better-off-in-each-policy&quot;&gt;Share better off in each policy&lt;/h3&gt;

&lt;p&gt;While Black Americans on the whole receive more under student debt cancellation, 74 percent of Black Americans would be better off with the universal payment.  For those at the bottom quintile of the net worth distribution, 65 percent would receive more money with the universal payment.  88 percent of people living in poverty would receive a larger benefit with the universal payment.  In total, 82 percent of Americans would be better off with a budget-equivalent universal payment compared to $50,000 in student debt cancellation.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button4&quot; onclick=&quot;f4()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_4&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent better off with universal payment ##
fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_better_off_with_ubi_50'], 
                     text=race2['percent_better_off_with_ubi_50'], name='race',
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_better_off_with_ubi_50'],
                     text=education2['percent_better_off_with_ubi_50'], name='education',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_better_off_with_ubi_50'], name='age',
                     text=age2['percent_better_off_with_ubi_50'], visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_better_off_with_ubi_50'],
                     text=income2['percent_better_off_with_ubi_50'], name='income', visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_better_off_with_ubi_50'], y=networth2['percent_better_off_with_ubi_50'],
                     name='networth', visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_better_off_with_ubi_50'],
                     text=poor2['percent_better_off_with_ubi_50'], name='poor',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Percent better off with universal payment&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,110])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Percent better off with universal payments by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Share better off with universal payment by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Share better off with universal payment by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Share better off with universal payment by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Share better off with universal payment by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Share better off with universal payment by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Share better off with universal payment by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])


fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f4() {
  var x = document.getElementById(&quot;asset_code_4&quot;);
  var b = document.getElementById(&quot;button4&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset4&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-4.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset4&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;reduction-in-net-debt-rates&quot;&gt;Reduction in net debt rates&lt;/h3&gt;

&lt;p&gt;Cancelling $50,000 in student debt would lift more Americans out of total debt (negative net worth) than a budget-equivalent universal payment.&lt;sup id=&quot;fnref:static&quot;&gt;&lt;a href=&quot;#fn:static&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; In total, the student debt cancellation would reduce the number of Americans in debt by 44 percent while the universal payment plan would reduce it by 30 percent. This overall trend is mostly consistent across demographic groups. Exceptions include Hispanics, people with no education beyond high school, people at the bottom quintile of the income distribution, and those living in poverty.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button5&quot; onclick=&quot;f5()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_5&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent decrease of people in debt by reform ##

fig = go.Figure()


fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_debt_reduction_50,
    text=race2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_debt_reduction_50,
    text= race2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_debt_reduction_50,
    text=education2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_debt_reduction_50,
    text=education2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_debt_reduction_50,
    text=age2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_debt_reduction_50,
    text=age2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_debt_reduction_50,
    text=income2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_debt_reduction_50,
    text=income2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_debt_reduction_50,
    text=networth2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_debt_reduction_50,
    text=networth2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_debt_reduction_50,
    text=poor2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_debt_reduction_50,
    text=poor2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Percent decrease of people in debt&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-60,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Percent decrease of people in debt by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Percent decrease of people in debt by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Percent decrease of people in debt by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f5() {
  var x = document.getElementById(&quot;asset_code_5&quot;);
  var b = document.getElementById(&quot;button5&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset5&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-5.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset5&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;racial-wealth-gaps&quot;&gt;Racial wealth gaps&lt;/h3&gt;

&lt;p&gt;While much of the rhetoric surrounding student debt relief has been &lt;a href=&quot;https://www.businessinsider.com/how-eliminating-student-debt-would-close-the-racial-wealth-gap-2019-6&quot;&gt;centered&lt;/a&gt; around the racial wealth gap, a budget-equivalent universal payment would be stronger at reducing the median gap for both Black and Hispanics Americans. Considering the mean racial wealth gaps, universal payments also reduce the White/Hispanic gap more, though student debt cancellation reduces the White/Black gap more.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button6&quot; onclick=&quot;f6()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_6&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
racial_wealth_gap = (racial_wealth_gap).round(1)

fig = go.Figure()

groups = ['Hispanic mean', 'Hispanic median', 'Black mean', 'Black median']

status_quo_ratio = [racial_wealth_gap.ratios[1],
                   racial_wealth_gap.ratios[0],
                   racial_wealth_gap.ratios[2],
                   racial_wealth_gap.ratios[3],]

ubi_ratio = [racial_wealth_gap.ratios[5],
            racial_wealth_gap.ratios[4],
            racial_wealth_gap.ratios[6],
            racial_wealth_gap.ratios[7],]

ed_debt_ratio = [racial_wealth_gap.ratios[9],
                racial_wealth_gap.ratios[8],
                racial_wealth_gap.ratios[10],
                racial_wealth_gap.ratios[11],]


fig = go.Figure(data=[
    go.Bar(name='Status quo', x=groups, y=status_quo_ratio, 
                                    marker_color=GRAY,
          text=status_quo_ratio),
    
        
    go.Bar(name='$50k student&lt;br /&gt;debt cancellation', x=groups, y=ed_debt_ratio,
                                      marker_color=LIGHT_BLUE,
                                      text=ed_debt_ratio),
    
    go.Bar(name='Budget-equiavalent&lt;br /&gt;universal payment', x=groups, y=ubi_ratio, 
                                    marker_color=DARK_BLUE,
          text=ubi_ratio),
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}', textposition='outside')
fig.update_layout(title_text='Racial wealth gap by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Ratio of white wealth statistic to demographic&quot;,
        ticksuffix =&quot;&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,10])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f6() {
  var x = document.getElementById(&quot;asset_code_6&quot;);
  var b = document.getElementById(&quot;button6&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset6&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-6.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset6&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;inequality-impacts&quot;&gt;Inequality impacts&lt;/h3&gt;

&lt;p&gt;For income inequality (and poverty), I follow &lt;a href=&quot;https://finaid.org/loans/forgivenesstaxability&quot;&gt;IRS guidelines&lt;/a&gt; in treating student loan forgiveness as income, though I do not estimate its tax liability. I calculate inequality using the Gini index, which goes from zero (perfect equality) to one (one person holds all the income/wealth). Student debt forgiveness reduces wealth inequality slightly more than a budget equivalent-universal payment; however, universal payments reduce income inequality more.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button7&quot; onclick=&quot;f7()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_7&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Gini chart

# Calculate the change in gini index for income of each reform
start_gini = mdf.gini(scf, 'income_pp', w='wgt_numper').round(3)
ubi_gini = mdf.gini(scf, 'ubi_income_pp', w='wgt_numper').round(3)
ed_gini = mdf.gini(scf, 'no_debt_income_pp', w='wgt_numper').round(3)
ubi_gini_50 = mdf.gini(scf, 'ubi_income_pp_50', w='wgt_numper').round(3)
ubi_gini_50_phase_out = mdf.gini(scf, 'ubi_income_pp_50_phase_out', w='wgt_numper').round(3)
ubi_gini_10 = mdf.gini(scf, 'ubi_income_pp_10', w='wgt_numper').round(3)
ed_gini_10 = mdf.gini(scf, 'no_debt_income_pp_10', w='wgt_numper').round(3)
ed_gini_50 = mdf.gini(scf, 'no_debt_income_pp_50', w='wgt_numper').round(3)
ed_gini_50_phase_out = mdf.gini(scf, 'no_debt_income_pp_50_phase_out', w='wgt_numper').round(3)

change_ubi_gini = (((ubi_gini - start_gini) / start_gini) * 100).round(1)
change_ubi_gini_50 = (((ubi_gini_50 - start_gini) / start_gini) * 100).round(1)
change_ubi_gini_50_phase_out = (((ubi_gini_50_phase_out - start_gini) / start_gini) * 100).round(1)
change_ubi_gini_10 = (((ubi_gini_10 - start_gini) / start_gini) * 100).round(1)

change_ed_gini = (((ed_gini - start_gini) / start_gini) * 100).round(1)
change_ed_gini_50 = (((ed_gini_50 - start_gini) / start_gini) * 100).round(1)
change_ed_gini_50_phase_out = (((ed_gini_50_phase_out - start_gini) / start_gini) * 100).round(1)
change_ed_gini_10 = (((ed_gini_10 - start_gini) / start_gini) * 100).round(1)

# Calculate the change in gini index for networth of each reform
start_gini_networth = mdf.gini(scf, 'networth_pp', w='wgt_numper').round(3)
ubi_gini_networth = mdf.gini(scf, 'ubi_networth_pp', w='wgt_numper').round(3)
ed_gini_networth = mdf.gini(scf, 'no_debt_networth_pp', w='wgt_numper').round(3)
ubi_gini_50_networth = mdf.gini(scf, 'ubi_networth_pp_50', w='wgt_numper').round(3)
ubi_gini_50_phase_out_networth = mdf.gini(scf, 'ubi_networth_pp_50_phase_out', w='wgt_numper').round(3)
ubi_gini_10_networth = mdf.gini(scf, 'ubi_networth_pp_10', w='wgt_numper').round(3)
ed_gini_10_networth = mdf.gini(scf, 'no_debt_networth_pp_10', w='wgt_numper').round(3)
ed_gini_50_networth = mdf.gini(scf, 'no_debt_networth_pp_50', w='wgt_numper').round(3)
ed_gini_50_phase_out_networth = mdf.gini(scf, 'no_debt_networth_pp_50_phase_out', w='wgt_numper').round(3)

change_ubi_gini_networth = (((ubi_gini_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ubi_gini_50_networth = (((ubi_gini_50_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ubi_gini_50_phase_out_networth = (((ubi_gini_50_phase_out_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ubi_gini_10_networth = (((ubi_gini_10_networth - start_gini_networth) / start_gini_networth) * 100).round(2)

change_ed_gini_networth = (((ed_gini_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ed_gini_50_networth = (((ed_gini_50_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ed_gini_50_phase_out_networth = (((ed_gini_50_phase_out_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ed_gini_10_networth = (((ed_gini_10_networth - start_gini_networth) / start_gini_networth) * 100).round(2)

racial_wealth_gap = (racial_wealth_gap).round(1)

fig = go.Figure()

metric = ['Wealth', 'Income']

status_quo_gini = [start_gini_networth,
               start_gini]

ubi_gini = [ubi_gini_50_networth,
           ubi_gini_50]

ed_debt_gini = [ed_gini_50_networth,
               ed_gini_50]



fig = go.Figure(data=[
    go.Bar(name='Status quo', x=metric, y=status_quo_gini, 
                                    marker_color=GRAY,
          text=status_quo_gini),
    
        
    go.Bar(name='$50k student&lt;br /&gt;debt cancellation', x=metric, y=ed_debt_gini,
                                      marker_color=LIGHT_BLUE,
                                      text=ed_debt_gini),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=metric, y=ubi_gini, 
                                    marker_color=DARK_BLUE,
          text=ubi_gini)

])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}', textposition='outside')
fig.update_layout(title_text='Inequality by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Gini index&quot;,
        ticksuffix =&quot;&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,1])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')
config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f7() {
  var x = document.getElementById(&quot;asset_code_7&quot;);
  var b = document.getElementById(&quot;button7&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset7&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-7.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset7&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;poverty-impacts&quot;&gt;Poverty impacts&lt;/h3&gt;

&lt;p&gt;Across every demographic and metric, universal payments would cut poverty rates at a higher rate than student debt cancellation. Overall, universal payments would cut poverty by 52 percent, while cancelling $50,000 in student debt would cut poverty by 14 percent. Hispanic and Black poverty would fall 63 percent and 47 percent under universal payments, respectively, but only 7 percent and 11 percent under student debt cancellation. Student debt cancellation would cut poverty for people in households headed by people without a high school diploma by 1 percent, while universal payments would cut it by 46 percent. Universal payments would even eliminate poverty for Americans in the second income quintile.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button8&quot; onclick=&quot;f8()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_8&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent reduction in poverty rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_poverty_reduction_50	,
    text=race2.ed_debt_poverty_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_poverty_reduction_50,
    text= race2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_poverty_reduction_50	,
    text=education2.ed_debt_poverty_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_poverty_reduction_50,
    text=education2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_poverty_reduction_50	,
    text=age2.ed_debt_poverty_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_poverty_reduction_50,
    text=age2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_poverty_reduction_50,
    text=income2.ed_debt_poverty_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_poverty_reduction_50,
    text=income2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_poverty_reduction_50,
    text=networth2.ed_debt_poverty_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_poverty_reduction_50,
    text=networth2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_poverty_reduction_50,
    text=poor2.ed_debt_poverty_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_poverty_reduction_50,
    text=poor2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty reduction&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-105,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Poverty reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by age group',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])
config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f8() {
  var x = document.getElementById(&quot;asset_code_8&quot;);
  var b = document.getElementById(&quot;button8&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset8&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-8.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset8&quot;&gt;&lt;/div&gt;

&lt;p&gt;Universal payments also outperform student debt cancellation across all demographics on poverty gap reduction.  The poverty gap is defined as the sum of the gaps between a household’s resources and its poverty threshold across all households in poverty. The poverty gap would fall 69 percent under universal payments and 15 percent under student debt cancellation.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button9&quot; onclick=&quot;f9()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_9&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent in poverty by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_gap_reduction_50	,
    text=race2.ed_debt_gap_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_gap_reduction_50,
    text= race2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_gap_reduction_50	,
    text=education2.ed_debt_gap_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_gap_reduction_50,
    text=education2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_gap_reduction_50,
    text=age2.ed_debt_gap_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_gap_reduction_50,
    text=age2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_gap_reduction_50,
    text=income2.ed_debt_gap_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_gap_reduction_50,
    text=income2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_gap_reduction_50,
    text=networth2.ed_debt_gap_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_gap_reduction_50,
    text=networth2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_gap_reduction_50	,
    text=poor2.ed_debt_gap_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_gap_reduction_50,
    text=poor2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty gap reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Poverty gap reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty gap reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty gap reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Percent reduction in poverty gap by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f9() {
  var x = document.getElementById(&quot;asset_code_9&quot;);
  var b = document.getElementById(&quot;button9&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset9&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-9.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset9&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;comparing-other-student-debt-proposals&quot;&gt;Comparing other student debt proposals&lt;/h2&gt;

&lt;p&gt;While this paper focuses on comparing the $50,000 forgiveness currently proposed by Senators Warren and Schumer, I found similar results comparing other proposals. Whether comparing full forgiveness to a budget-equivalent universal payment of $3,650, or Warren’s phased-out $50,000 forgiveness to $2,100 payments, or $10,000 forgiveness to $770 payments, universal payments benefit a larger share of Americans and reduce poverty and income inequality by a larger amount, while student debt cancellation reduces wealth inequality more.&lt;/p&gt;

&lt;p&gt;The charts below show how all four plans would impact each metric; for more charts on each plan, see the Appendix.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button10&quot; onclick=&quot;f10()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_10&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
comparison = race[race['race'] == 'All']

fig = go.Figure()

reform = ['All', '$50k', '$50k phase-out', '$10k']

ubi_all = [comparison.ubi_poverty_reduction[4],
           comparison.ubi_poverty_reduction_50[4],
           all2.ubi_poverty_reduction_50_phase_out[0],
           comparison.ubi_poverty_reduction_10[4]]

ed_debt_all = [comparison.ed_debt_poverty_reduction[4], 
            comparison.ed_debt_poverty_reduction_50[4],
               all2.ed_debt_poverty_reduction_50_phase_out[0],
            comparison.ed_debt_poverty_reduction_10[4]]



fig = go.Figure(data=[
    
    go.Bar(name='Student&lt;br /&gt;debt cancellation', x=reform, y=ed_debt_all,
                                      marker_color=LIGHT_BLUE,
          text=ed_debt_all),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all, 
                                    marker_color=DARK_BLUE,
          text=ubi_all)
    
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Poverty reduction by reform')


fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Change to poverty rate&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f10() {
  var x = document.getElementById(&quot;asset_code_10&quot;);
  var b = document.getElementById(&quot;button10&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset10&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-10.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset10&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button11&quot; onclick=&quot;f11()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_11&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# gini_networth chart
fig = go.Figure()

ubi_all_gini_networth = [change_ubi_gini_networth,
           change_ubi_gini_50_networth,
           change_ubi_gini_50_phase_out_networth,
               change_ubi_gini_10_networth]

ed_debt_all_gini_networth = [change_ed_gini_networth,
           change_ed_gini_50_networth,
           change_ed_gini_50_phase_out_networth,
               change_ed_gini_10_networth]



fig = go.Figure(data=[
    go.Bar(name='Student&lt;br /&gt;debt cancellation', x=reform,
           y=ed_debt_all_gini_networth,
           marker_color=LIGHT_BLUE,
           text=ed_debt_all_gini_networth),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all_gini_networth, 
                                    marker_color=DARK_BLUE,
          text=ubi_all_gini_networth)
    

])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Wealth inequality by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Change in Gini index of per-capita wealth&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-2,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')
fconfig = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f11() {
  var x = document.getElementById(&quot;asset_code_11&quot;);
  var b = document.getElementById(&quot;button11&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset11&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-11.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset11&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button12&quot; onclick=&quot;f12()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_12&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Gini chart
fig = go.Figure()

ubi_all_gini = [change_ubi_gini,
           change_ubi_gini_50,
           change_ubi_gini_50_phase_out,
               change_ubi_gini_10]

ed_debt_all_gini = [change_ed_gini,
           change_ed_gini_50,
           change_ed_gini_50_phase_out,
               change_ed_gini_10]



fig = go.Figure(data=[
    
    go.Bar(name='Student&lt;br /&gt;debt cancellation', x=reform, y=ed_debt_all_gini,
                                      marker_color=LIGHT_BLUE,
          text=ed_debt_all_gini),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all_gini, 
                                    marker_color=DARK_BLUE,
          text=ubi_all_gini),
    
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Income inequality by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Change in Gini index of per-capita income&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-10,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')
config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f12() {
  var x = document.getElementById(&quot;asset_code_12&quot;);
  var b = document.getElementById(&quot;button12&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset12&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-12.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset12&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button13&quot; onclick=&quot;f13()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_13&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()

ubi_all = [comparison.percent_better_off_with_ubi[4],
           comparison.percent_better_off_with_ubi_50[4],
           all2.percent_better_off_with_ubi_50_phase_out[0],
           comparison.percent_better_off_with_ubi_10[4]]



fig = go.Figure(data=[
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all, 
                                    marker_color=DARK_BLUE,
          text=ubi_all)
    
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Share better off with universal payments than student debt cancellation by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Share of people better off with universal payments&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,100])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f13() {
  var x = document.getElementById(&quot;asset_code_13&quot;);
  var b = document.getElementById(&quot;button13&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset13&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-13.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset13&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Because the majority of Americans do not have student debt, the majority of Americans will not benefit from student debt cancellation, no matter the size of the proposal.  Student debt cancellation primarily benefits high income earners with a college degree, a demographic &lt;a href=&quot;https://fordhaminstitute.org/national/research/what-you-make-depends-on-where-you-live&quot;&gt;likely to see incomes rise over time&lt;/a&gt;, while leaving out some of the poorest Americans. Still, Senator Warren and other proponents correctly identify it as a way to &lt;a href=&quot;https://rooseveltinstitute.org/wp-content/uploads/2020/08/RI_StudentDebtForgiveness_WorkingPaper_202008.pdf&quot;&gt;cut inequality and the racial wealth gap&lt;/a&gt;. Student debt has reached enormous levels, making its cancellation a major program that would benefit tens of millions, and among degree holders, it would disproportionately benefit those from less-advantaged backgrounds.&lt;/p&gt;

&lt;p&gt;But the enormity of the endeavor justifies careful comparison to other policies. While student debt cancellation reduces wealth inequality more than universal payments, it mostly underperforms simply sending every American a check on reducing racial wealth gaps. On all other outcomes, it fares even worse: universal payments would reduce poverty and income inequality more than student debt cancellation, regardless of the particular policy design. This analysis may even understate the relative progressivity of universal payments, given it doesn’t capitalize the higher future incomes associated with college education (though limitations of the SCF data may counter that).&lt;/p&gt;

&lt;p&gt;Means-testing the student debt cancellation closes some of the gap, but introduces its own challenges. Warren’s proposal is effectively a retroactive additional marginal tax of 33 percent on student debtors’ earnings between $100,000 and $250,000. This would make this group some of the most highly taxed in the country, with total marginal tax rates likely exceeding 70 percent after considering state and federal income and payroll taxes (only &lt;a href=&quot;https://aspe.hhs.gov/system/files/aspe-files/260661/brief2-overviewmtranalyses.pdf&quot;&gt;low-income benefit recipients&lt;/a&gt; would face higher marginal taxes). Retroactive taxation may be &lt;a href=&quot;https://fas.org/sgp/crs/misc/R42791.pdf&quot;&gt;constitutional&lt;/a&gt;, but it arguably &lt;a href=&quot;https://www.cost.org/globalassets/cost/state-tax-resources-pdf-pages/cost-studies-articles-reports/law360-oped-on-retroactive-taxation-003.pdf&quot;&gt;threatens rule of law&lt;/a&gt;; people value knowing the payoff to their labor when making decisions about it.&lt;/p&gt;

&lt;p&gt;Universal payments have less quantifiable advantages, as well. A one-time debt cancellation excludes both people who recently paid off their student loans, and those about to incur it; universal payments reach all. By favoring college graduates over non-college graduates, student debt cancellation threatens to exacerbate political tensions between these demographics that &lt;a href=&quot;https://www.brookings.edu/research/2020-exit-polls-show-a-scrambling-of-democrats-and-republicans-traditional-bases/&quot;&gt;only rose in the 2020 election&lt;/a&gt;. If young people expect future rounds of student debt cancellation, they may also choose to take on more debt, which could in turn &lt;a href=&quot;http://taylornadauld.com/research/published_papers/Credit%20Supply%20and%20the%20Rise%20in%20College%20Tuition.pdf&quot;&gt;raise the cost of higher education&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While student debt cancellation makes progress toward egalitarian goals (and may have the advantage of &lt;a href=&quot;https://www.warren.senate.gov/imo/media/doc/Ltr%20to%20Warren%20re%20admin%20debt%20cancellation.pdf?fbclid=IwAR3x7goUzVOpD7vcp7XhPYPlYQPmzv7rTzfNIvwl9Y8claLM0p7fo017N-g&quot;&gt;skipping congressional approval&lt;/a&gt;), dollar-for-dollar, those goals are better achieved through universal payments.&lt;/p&gt;

&lt;h2 id=&quot;appendix&quot;&gt;Appendix&lt;/h2&gt;

&lt;h3 id=&quot;10k-relief&quot;&gt;$10k relief&lt;/h3&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button14&quot; onclick=&quot;f14()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_14&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Average Benefit by reform ##

fig = go.Figure()


fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_change_10,
    text=race2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_change_10,
    text= race2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))


fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_change_10,
    text=education2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_change_10,
    text=education2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_change_10,
    text=age2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_change_10,
    text=age2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_change_10,
    text=income2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_change_10,
    text=income2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_change_10,
    text=networth2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_change_10,
    text=networth2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_change_10,
    text=poor2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_change_10,
    text=poor2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=9, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average benefit&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,2_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Average benefit by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Average benefit of reform by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Average benefit of reform by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Average benefit of reform by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f14() {
  var x = document.getElementById(&quot;asset_code_14&quot;);
  var b = document.getElementById(&quot;button14&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset14&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-14.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset14&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button15&quot; onclick=&quot;f15()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_15&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent better off with ed debt ##
fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_better_off_with_ubi_10'], 
                     text=race2['percent_better_off_with_ubi_10'], name='race',
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_better_off_with_ubi_10'],
                     text=education2['percent_better_off_with_ubi_10'], name='education',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_better_off_with_ubi_10'], name='age',
                     text=age2['percent_better_off_with_ubi_10'], visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_better_off_with_ubi_10'],
                     text=income2['percent_better_off_with_ubi_10'], name='income', visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_better_off_with_ubi_10'], y=networth2['percent_better_off_with_ubi_10'],
                     name='networth', visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_better_off_with_ubi_10'],
                     text=poor2['percent_better_off_with_ubi_10'], name='poor',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Share better off with universal payments&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,100])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Share better off with universal payment by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Share better off with universal payment by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Share better off with universal payment by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Share better off with universal payment by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Share better off with universal payment by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Share better off with universal payment by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Share better off with universal payment by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f15() {
  var x = document.getElementById(&quot;asset_code_15&quot;);
  var b = document.getElementById(&quot;button15&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset15&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-15.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset15&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button16&quot; onclick=&quot;f16()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_16&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent decrease of people in debt by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_debt_reduction_10,
    text=race2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_debt_reduction_10,
    text= race2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))


fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_debt_reduction_10,
    text=education2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_debt_reduction_10,
    text=education2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_debt_reduction_10,
    text=age2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_debt_reduction_10,
    text=age2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_debt_reduction_10,
    text=income2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_debt_reduction_10,
    text=income2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_debt_reduction_10,
    text=networth2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_debt_reduction_10,
    text=networth2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_debt_reduction_10,
    text=poor2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_debt_reduction_10,
    text=poor2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')


fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Net debt rate reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-40,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Net debt rate reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Net debt rate reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Net debt rate reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Net debt rate reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Net debt rate reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Net debt rate reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Net debt rate reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f16() {
  var x = document.getElementById(&quot;asset_code_16&quot;);
  var b = document.getElementById(&quot;button16&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset16&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-16.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset16&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button17&quot; onclick=&quot;f17()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_17&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent reduction in poverty rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_poverty_reduction_10	,
    text=race2.ed_debt_poverty_reduction_10	,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_poverty_reduction_10,
    text= race2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_poverty_reduction_10	,
    text=education2.ed_debt_poverty_reduction_10	,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_poverty_reduction_10,
    text=education2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_poverty_reduction_10	,
    text=age2.ed_debt_poverty_reduction_10	,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_poverty_reduction_10,
    text=age2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_poverty_reduction_10,
    text=income2.ed_debt_poverty_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_poverty_reduction_10,
    text=income2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_poverty_reduction_10,
    text=networth2.ed_debt_poverty_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_poverty_reduction_10,
    text=networth2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor.original_poor,
    y=poor.ed_debt_poverty_reduction_10,
    text=poor.ed_debt_poverty_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor.original_poor,
    y=poor.ubi_poverty_reduction_10,
    text=poor.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty reduction&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-55,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Poverty reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by age group',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f17() {
  var x = document.getElementById(&quot;asset_code_17&quot;);
  var b = document.getElementById(&quot;button17&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset17&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-17.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset17&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button18&quot; onclick=&quot;f18()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_18&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent in poverty by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_gap_reduction_10	,
    text=race2.ed_debt_gap_reduction_10	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_gap_reduction_10,
    text= race2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_gap_reduction_10	,
    text=education2.ed_debt_gap_reduction_10	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_gap_reduction_10,
    text=education2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_gap_reduction_10,
    text=age2.ed_debt_gap_reduction_10,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_gap_reduction_10,
    text=age2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_gap_reduction_10,
    text=income2.ed_debt_gap_reduction_10,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_gap_reduction_10,
    text=income2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_gap_reduction_10,
    text=networth2.ed_debt_gap_reduction_10,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_gap_reduction_10,
    text=networth2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_gap_reduction_10	,
    text=poor2.ed_debt_gap_reduction_10	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_gap_reduction_10,
    text=poor2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Poverty gap reduction by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty gap reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reductionp by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty gap reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty gap reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty gap reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f18() {
  var x = document.getElementById(&quot;asset_code_18&quot;);
  var b = document.getElementById(&quot;button18&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset18&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-18.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset18&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;all-relief&quot;&gt;All relief&lt;/h3&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button19&quot; onclick=&quot;f19()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_19&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Average Benefit by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_change,
    text=race2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_change,
    text= race2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_change,
    text=education2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_change,
    text=education2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_change,
    text=age2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_change,
    text=age2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_change,
    text=income2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_change,
    text=income2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_change,
    text=networth2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_change,
    text=networth2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_change,
    text=poor2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_change,
    text=poor2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=9, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')
fig.update_layout(title_text='Average benefit by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average benefit&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,12_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Average benefit of reform by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Average benefit of reform by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Average benefit of reform by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f19() {
  var x = document.getElementById(&quot;asset_code_19&quot;);
  var b = document.getElementById(&quot;button19&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset19&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-19.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset19&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button20&quot; onclick=&quot;f20()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_20&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent better off with ed debt ##
fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_better_off_with_ubi'], 
                     text=race2['percent_better_off_with_ubi'], name='race',
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_better_off_with_ubi'],
                     text=education2['percent_better_off_with_ubi'], name='education',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_better_off_with_ubi'], name='age',
                     text=age2['percent_better_off_with_ubi'], visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_better_off_with_ubi'],
                     text=income2['percent_better_off_with_ubi'], name='income', visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_better_off_with_ubi'], y=networth2['percent_better_off_with_ubi'],
                     name='networth', visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_better_off_with_ubi'],
                     text=poor2['percent_better_off_with_ubi'], name='poor',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Percent better off with universal payment')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Percent better off with universal payment&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,100])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Share better off with universal payments by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Share better off with universal payments by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Share better off with universal payments by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Share better off with universal payments by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Share better off with universal payments by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Share better off with universal payments by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f20() {
  var x = document.getElementById(&quot;asset_code_20&quot;);
  var b = document.getElementById(&quot;button20&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset20&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-20.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset20&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button21&quot; onclick=&quot;f21()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_21&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Reduction in net debt rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_debt_reduction,
    text=race2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_debt_reduction,
    text= race2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_debt_reduction,
    text=education2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_debt_reduction,
    text=education2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_debt_reduction,
    text=age2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_debt_reduction,
    text=age2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_debt_reduction,
    text=income2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_debt_reduction,
    text=income2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_debt_reduction,
    text=networth2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_debt_reduction,
    text=networth2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_debt_reduction,
    text=poor2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_debt_reduction,
    text=poor2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Reduction in net debt rate by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Reduction in net debt rate&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Reduction in net debt rate by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Reduction in net debt rate by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Reduction in net debt rate by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Reduction in net debt rate by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Reduction in net debt rate by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Reduction in net debt rate by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f21() {
  var x = document.getElementById(&quot;asset_code_21&quot;);
  var b = document.getElementById(&quot;button21&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset21&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-21.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset21&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button22&quot; onclick=&quot;f22()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_22&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent reduction in poverty rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_poverty_reduction	,
    text=race2.ed_debt_poverty_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_poverty_reduction,
    text= race2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_poverty_reduction	,
    text=education2.ed_debt_poverty_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_poverty_reduction,
    text=education2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_poverty_reduction	,
    text=age2.ed_debt_poverty_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_poverty_reduction,
    text=age2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_poverty_reduction,
    text=income2.ed_debt_poverty_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_poverty_reduction,
    text=income2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_poverty_reduction,
    text=networth2.ed_debt_poverty_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_poverty_reduction,
    text=networth2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_poverty_reduction,
    text=poor2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_poverty_reduction,
    text=poor2.ed_debt_poverty_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Reduction in poverty rate by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty reduction&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-105,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by age group',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f22() {
  var x = document.getElementById(&quot;asset_code_22&quot;);
  var b = document.getElementById(&quot;button22&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset22&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-22.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset22&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button23&quot; onclick=&quot;f23()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_23&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent in poverty by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_gap_reduction	,
    text=race2.ed_debt_gap_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_gap_reduction,
    text= race2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_gap_reduction	,
    text=education2.ed_debt_gap_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_gap_reduction,
    text=education2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_gap_reduction,
    text=age2.ed_debt_gap_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_gap_reduction,
    text=age2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_gap_reduction,
    text=income2.ed_debt_gap_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_gap_reduction,
    text=income2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_gap_reduction,
    text=networth2.ed_debt_gap_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_gap_reduction,
    text=networth2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_gap_reduction	,
    text=poor2.ed_debt_gap_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_gap_reduction,
    text=poor2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Poverty gap reduction by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty gap reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty gap reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty gap reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty gap reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f23() {
  var x = document.getElementById(&quot;asset_code_23&quot;);
  var b = document.getElementById(&quot;button23&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset23&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-23.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset23&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:debt&quot;&gt;
      &lt;p&gt;The Federal Reserve Bank of New York has &lt;a href=&quot;https://www.newyorkfed.org/microeconomics/hhdc.html&quot;&gt;estimated&lt;/a&gt; total student debt to be $1.54 trillion as of the second quarter of 2020. &lt;a href=&quot;#fnref:debt&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:hhdemo&quot;&gt;
      &lt;p&gt;Because the SCF collects data at the household level, all demographics are represented by the demographic of the head of household. &lt;a href=&quot;#fnref:hhdemo&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:quintiles&quot;&gt;
      &lt;p&gt;I assign households to income and net worth quintiles based on per-capita income and net worth, respectively, weighted by person such that each quintile has the same population. Inequality statistics are also based on per-capita income and net worth and weighted by person. &lt;a href=&quot;#fnref:quintiles&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:poverty&quot;&gt;
      &lt;p&gt;I classify a household as in poverty if its official &lt;a href=&quot;https://aspe.hhs.gov/2019-poverty-guidelines&quot;&gt;2019 poverty guideline&lt;/a&gt; (defined by Health and Human Services) exceeds its total income (including in-kind benefits like food assistance, and in this case, student loan forgiveness). &lt;a href=&quot;#fnref:poverty&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:static&quot;&gt;
      &lt;p&gt;Calculations around net debt and other outcomes assume that all cancelled debt and universal payments go directly to net worth; that is, consumption is assumed to be constant. &lt;a href=&quot;#fnref:static&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Nate Golden</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="student debt" />
      

      
        <summary type="html">Dollar for dollar, universal payments do more for poverty and income inequality.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">A $300-per-month UBI would cut Veteran poverty in half</title>
      <link href="/veterans" rel="alternate" type="text/html" title="A $300-per-month UBI would cut Veteran poverty in half" />
      <published>2020-11-11T00:00:00+00:00</published>
      <updated>2020-11-11T00:00:00+00:00</updated>
      <id>/veterans</id>
      <content type="html" xml:base="/veterans">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;Today we honor &lt;a href=&quot;https://www.va.gov/vetdata/veteran_population.asp&quot;&gt;over 19 million Americans&lt;/a&gt; who have served in the military, of whom one in 13 is in poverty. This is a third lower than the poverty rate among non-Veterans, thanks to &lt;a href=&quot;https://www.pewresearch.org/fact-tank/2019/12/09/veteran-households-in-u-s-are-economically-better-off-than-those-of-non-veterans/&quot;&gt;higher incomes&lt;/a&gt; and Veteran benefits, but still amounts to over 1.4 million people who lack resources to cover basic needs. Universal basic income would help.&lt;/p&gt;

&lt;p&gt;Existing assistance programs cut Veteran poverty substantially. &lt;a href=&quot;https://www.cbpp.org/blog/veterans-and-the-safety-net-0&quot;&gt;Two million Veterans&lt;/a&gt; receive refundable tax credits—the Earned Income Tax Credit and the refundable portion of the Child Tax Credit—and &lt;a href=&quot;https://www.cbpp.org/research/food-assistance/snap-helps-13-million-low-income-veterans-including-thousands-in-every&quot;&gt;1.3 million&lt;/a&gt; receive SNAP (formerly food stamps). Certain veteran households are also eligible to receive &lt;a href=&quot;https://www.va.gov/pension/veterans-pension-rates/&quot;&gt;up to $36,387&lt;/a&gt; per year through the &lt;a href=&quot;https://www.va.gov/pension/eligibility/&quot;&gt;Veterans Pension&lt;/a&gt; program, depending on their household size, income, net worth, age, service period, and disability status. Veterans with disabilities related to their active-duty service can also receive up to $44,208 per year, depending on their household size and severity of their disability through the &lt;a href=&quot;https://www.va.gov/disability/compensation-rates/veteran-rates/&quot;&gt;Veterans Disability Compensation&lt;/a&gt; program. The &lt;a href=&quot;https://benefits.va.gov/benefits/&quot;&gt;Veterans Benefit Administration&lt;/a&gt; provides a number of other benefits around health, education, and other areas, especially for &lt;a href=&quot;https://www.benefits.va.gov/persona/veteran-elderly.asp&quot;&gt;elderly Veterans&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yet these programs fail to reach all Veterans in need. As the Department of Veterans Affairs &lt;a href=&quot;https://www.va.gov/vetdata/docs/specialreports/veteran_poverty_trends.pdf&quot;&gt;found&lt;/a&gt; in 2012, veterans with disabilities have a higher official poverty rate than non-veterans with disabilities for all age groups except over age 65, and &lt;a href=&quot;https://www.va.gov/vetdata/docs/Quickfacts/VA_Utilization_Profile_2017.pdf&quot;&gt;half of Veterans&lt;/a&gt; don’t use VA programs. &lt;a href=&quot;https://www.bls.gov/opub/ted/2016/43-point-3-percent-of-veterans-with-a-service-connected-disability-were-employed-in-august-2015.htm#:~:text=Bureau%20of%20Labor%20Statistics,-The%20Economics%20Daily&amp;amp;text=In%20August%202015%2C%20about%204.3,all%20veterans%20was%2047.8%20percent.&quot;&gt;20 percent of Veterans&lt;/a&gt; have a service-connected disability, and as we &lt;a href=&quot;https://blog.ubicenter.org/20200731/ada30.html&quot;&gt;wrote in July&lt;/a&gt;, one in five people with disabilities is in poverty—nearly double the rate of people without disabilities. In that analysis, we also showed that a $300-per-month universal basic income (UBI) would halve poverty among people with disabilities. What would UBI do for all Veterans?&lt;/p&gt;

&lt;p&gt;In this analysis, we modeled a UBI funded by a flat tax on adjusted gross income (AGI). In this model, every $100 monthly UBI requires a 3.3 percent tax on AGI. To fund a $300-per-month UBI, the federal government would have to levy a 9.8 percent tax. But like we found in the disability analysis, this would also reduce Veteran poverty by half. Poverty among children in Veteran households would be cut by 60 percent.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Import Libraries
import microdf as mdf
import numpy as np
import pandas as pd
import plotly.express as px

# Import data
raw = pd.read_csv(&quot;https://github.com/UBICenter/Veteran-s_Day/raw/main/VeteranData.gz&quot;)

# Create Demographic Columns
person = raw.copy(deep=True)
person.columns = person.columns.str.lower()
person[&quot;child&quot;] = person.age &amp;lt; 18
person[&quot;adult&quot;] = person.age &amp;gt;= 18
person[&quot;veteran&quot;] = (person.vetstat == 2) &amp;amp; person.adult
person[&quot;non_veteran&quot;] = (person.vetstat == 1) &amp;amp; person.adult

veterans = person.groupby([&quot;spmfamunit&quot;])[[&quot;veteran&quot;]].sum()
veterans.columns = [&quot;total_veterans&quot;]
person = person.merge(veterans.reset_index(), on=[&quot;spmfamunit&quot;])

person[&quot;child_with_vet&quot;] = (person.child) &amp;amp; (person.total_veterans &amp;gt; 0)
person[&quot;child_with_no_vet&quot;] = (person.child) &amp;amp; (person.total_veterans == 0)

# Show total veterans in millions
total_veterans = (person.veteran * person.asecwt).sum()
total_veterans / 1_000_000

# Calculate total AGI
person[&quot;adjginc&quot;].replace({99999999: 0}, inplace=True)
population = person.asecwt.sum()
person[&quot;weighted_agi&quot;] = person.adjginc * person.asecwt
total_agi = person.weighted_agi.sum()

# Calculate AGI tax rate per dollar of UBI
fed_tax_rate_per_dollar_ubi_monthly = (population * 12) / total_agi

# Create table showing tax amounts
tax_rates = pd.DataFrame(np.arange(0, 1001, 50))
tax_rates.columns = [&quot;monthly_ubi&quot;]


def tax(monthly_ubi):
    return (monthly_ubi * fed_tax_rate_per_dollar_ubi_monthly * 100).round(1)


def tax_row(row):
    return tax(row.monthly_ubi)


tax_rates[&quot;tax_rate&quot;] = tax_rates.apply(tax_row, axis=1)
tax_rates.columns = [&quot;Monthly UBI&quot;, &quot;Flat Tax Rate on AGI&quot;]


def ubi(status, monthly_ubi):
    &quot;&quot;&quot;At a given UBI level, calculate the poverty rate, median resources,
    mean resources, and percent of people better off for:
    * Veterans
    * Non-Veterans
    * Children living with Veteran
    * Children not living with Veterans
  
    Args:
        status: A person's Veteran status.
            For this simulation their are 4 categories:
            * Veteran
            * Non-Veteran
            * Child living with a Veteran
            * Children not living with a Veteran
        monthly_ubi: the monthly cash transfer given to each person
  
    Returns:
        pandas Series with four elements for the selected group:
        * Poverty rate
        * Median resources per person
        * Mean resources per person
        * Percent of people better off
    &quot;&quot;&quot;

    # Create a copy of the person DataFrame
    target_persons = person.copy(deep=True)

    # Calculate a person's tax increase
    target_persons[&quot;tax_increase&quot;] = (
        fed_tax_rate_per_dollar_ubi_monthly * monthly_ubi * target_persons.adjginc
    )

    # Calculate the total UBI per SPM unit.
    target_persons[&quot;total_ubi&quot;] = target_persons.spmnpers * 12 * monthly_ubi

    # Calculate the total tax increase of an SPM unit
    spmu = target_persons.groupby([&quot;spmfamunit&quot;])[[&quot;tax_increase&quot;]].sum()
    spmu.columns = [&quot;total_tax_increase&quot;]
    target_persons = target_persons.merge(
        spmu, left_on=[&quot;spmfamunit&quot;], right_index=True
    )

    # Calculate each SPM unit's tax rate person
    target_persons[&quot;new_spm_resources&quot;] = (
        target_persons.spmtotres
        + target_persons.total_ubi
        - target_persons.total_tax_increase
    )

    # Calculate the new resources per person of each SPM unit
    target_persons[&quot;new_resources_per_person&quot;] = (
        target_persons.new_spm_resources / target_persons.spmnpers
    )

    # Slice the data based on Race input
    if status == &quot;veteran&quot;:
        target_persons = target_persons[target_persons.veteran]
    if status == &quot;non_veteran&quot;:
        target_persons = target_persons[target_persons.non_veteran]

    if status == &quot;veteran_child&quot;:
        target_persons = target_persons[target_persons.child_with_vet]
    if status == &quot;non_veteran_child&quot;:
        target_persons = target_persons[target_persons.child_with_no_vet]

    # Calculate the change in poverty rate
    target_persons[&quot;poor&quot;] = target_persons.new_spm_resources &amp;lt; target_persons.spmthresh
    total_poor = (target_persons.poor * target_persons.asecwt).sum()
    target_pop = target_persons.asecwt.sum()

    # Calculate percent better off
    target_persons[&quot;better_off&quot;] = (
        target_persons.new_spm_resources &amp;gt; target_persons.spmtotres
    )
    total_better_off = (target_persons.better_off * target_persons.asecwt).sum()
    percent = total_better_off / target_pop * 100

    return pd.Series(
        [
            mdf.weighted_median(
                target_persons, &quot;new_resources_per_person&quot;, &quot;asecwt&quot;
            ).round(0),
            mdf.weighted_mean(
                target_persons, &quot;new_resources_per_person&quot;, &quot;asecwt&quot;
            ).round(0),
            (total_poor / target_pop * 100).round(1),
            percent,
        ]
    )


def ubi_row(row):
    &quot;&quot;&quot; run the ubi function across the rows of a DataFrame.
  
    Arguments
    row: the row of the DataFrame containing a person's race and the monthly UBI amount
  
    Returns
    The poverty rate for the selected row.
    The median resources per person for the selected row.
    The mean resources per person for the selected row.
    The percent of people better off under the program for the selected row.
    &quot;&quot;&quot;
    return ubi(row.status, row.monthly_ubi)


# Create a DataFrame that has each the each monthly UBI amount for each race input
summary = mdf.cartesian_product(
    {
        &quot;monthly_ubi&quot;: np.arange(0, 1001, 50),
        &quot;status&quot;: [&quot;veteran&quot;, &quot;non_veteran&quot;, &quot;veteran_child&quot;, &quot;non_veteran_child&quot;],
    }
)

# Calculate the poverty rate for each row of the summary DataFrame
summary[
    [
        &quot;med_resources_per_person&quot;,
        &quot;mean_resources_per_person&quot;,
        &quot;poverty_rate&quot;,
        &quot;better_off&quot;,
    ]
] = summary.apply(ubi_row, axis=1)

summary2 = summary[summary[&quot;status&quot;] != &quot;non_veteran_child&quot;]
summary2 = summary2[summary2[&quot;status&quot;] != &quot;veteran_child&quot;]
# Format text
center = {
    &quot;med_resources_per_person&quot;: &quot;Median resources&quot;,
    &quot;mean_resources_per_person&quot;: &quot;Mean resources&quot;,
}
status = {
    &quot;veteran&quot;: &quot;Veterans&quot;,
    &quot;non_veteran&quot;: &quot;Non-Veteran adults&quot;,
    &quot;veteran_child&quot;: &quot;Children in Veteran households&quot;,
    &quot;non_veteran_child&quot;: &quot;Children in non-Veteran households&quot;,
}

summary[&quot;status&quot;] = summary[&quot;status&quot;].map(status)
summary2[&quot;status&quot;] = summary2[&quot;status&quot;].map(status)

# Colors from https://material.io/design/color/the-color-system.html
BLUE = &quot;#1976D2&quot;
DARK_BLUE = &quot;#0D47A1&quot;
BARELY_BLUE = &quot;#64B5F6&quot;
GRAY = &quot;#9E9E9E&quot;
LIGHT_GRAY = &quot;#E0E0E0&quot;

COLOR_MAP = {
    &quot;Veterans&quot;: BLUE,
    &quot;Non-Veteran adults&quot;: GRAY,
    &quot;Children in Veteran households&quot;: BARELY_BLUE,
    &quot;Children in non-Veteran households&quot;: LIGHT_GRAY,
}


def line_graph(df, x, y, color, title, xaxis_title, yaxis_title):
    &quot;&quot;&quot;Style for line graphs.
    
    Args:
        df: DataFrame with data to be plotted.
        x: The string representing the column in df that holds the new
            spending in billions.
        y: The string representing the column in df that holds the poverty
            rate.
        color: The string representing the UBI type.
        xaxis_title: The string represnting the xaxis-title.
        yaxis_title: The string representing the yaxis-title.
    
    Returns:
        Nothing. Shows the plot.
    &quot;&quot;&quot;
    fig = px.line(df, x=x, y=y, color=color, color_discrete_map=COLOR_MAP)
    fig.update_layout(
        title=title,
        xaxis_title=xaxis_title,
        yaxis_title=yaxis_title,
        yaxis_ticksuffix=&quot;%&quot;,
        font=dict(family=&quot;Roboto&quot;),
        hovermode=&quot;x&quot;,
        xaxis_tickprefix=&quot;$&quot;,
        xaxis_ticksuffix=&quot;&quot;,
        plot_bgcolor=&quot;white&quot;,
        legend_title_text=&quot;&quot;,
    )
    fig.update_traces(mode=&quot;markers+lines&quot;, hovertemplate=None)

    hide_line = [&quot;Children in Veteran households&quot;, &quot;Children in non-Veteran households&quot;]

    fig.for_each_trace(
        lambda trace: trace.update(visible=&quot;legendonly&quot;)
        if trace.name in hide_line
        else ()
    )

    return fig


fig = line_graph(
    df=summary,
    x=&quot;monthly_ubi&quot;,
    y=&quot;poverty_rate&quot;,
    color=&quot;status&quot;,
    title=&quot;The impact of a UBI on Veterans and their families&quot;,
    xaxis_title=&quot;Monthly UBI&quot;,
    yaxis_title=&quot;SPM poverty rate&quot;,
)
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/veterans/2020-11-11-veterans-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Studies suggest that reducing Veteran poverty could address issues disproportionately experienced by Veterans. &lt;a href=&quot;https://www.hud.gov/press/press_releases_media_advisories/HUD_No_19_163&quot;&gt;Over 37,000 Veterans&lt;/a&gt; experience homelessness on a given night, and a recent experiment in Canada found that &lt;a href=&quot;https://forsocialchange.org/our-story&quot;&gt;cash transfers accelerated&lt;/a&gt; transitions out of homelessness. Veterans have a higher rate of &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4638236/&quot;&gt;mental illness&lt;/a&gt;, especially depression, PTSD, and substance abuse disorder, while Finland’s UBI experiment &lt;a href=&quot;https://twitter.com/TheUBICenter/status/1258064957406511104&quot;&gt;improved mental health&lt;/a&gt;. Controlling for age and sex, the Veteran suicide rate exceeds the non-Veteran suicide rate by &lt;a href=&quot;https://www.mentalhealth.va.gov/docs/data-sheets/2019/2019_National_Veteran_Suicide_Prevention_Annual_Report_508.pdf&quot;&gt;50 percent&lt;/a&gt;, and a review of cash transfer programs in low- and middle-income countries found &lt;a href=&quot;https://mbrg.bsg.ox.ac.uk/sites/default/files/2020-05/the_role_of_cash_transfers_in_preventing_suicides_in_lmics_1.pdf&quot;&gt;significant suicide reductions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The unique Veteran experience warrants investment in tailored solutions, such as the health and education programs offered by the VA. Cash transfers like universal basic income can also reduce their incidence of poverty and empower them to meet their individual needs. Even modest basic incomes such as a tax-funded $300 per month would halve Veteran poverty and more than halve poverty among children of Veterans, improving poverty-linked outcomes for those who have served.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;max&quot;, &quot;nate&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="veterans" />
      
        <category term="poverty" />
      

      
        <summary type="html">Unconditional cash would fill in gaps of VA programs.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">How a tax-funded UBI can improve the lives of Indigenous Americans</title>
      <link href="/indigenous" rel="alternate" type="text/html" title="How a tax-funded UBI can improve the lives of Indigenous Americans" />
      <published>2020-10-12T00:00:00+00:00</published>
      <updated>2020-10-12T00:00:00+00:00</updated>
      <id>/indigenous</id>
      <content type="html" xml:base="/indigenous">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;Indigenous People’s Day is a time to celebrate and honor Indigenous Americans, while also recognizing the history of discrimination, oppression, and genocide they have faced since Europeans arrived in the Americas more than 500 years ago.&lt;/p&gt;

&lt;p&gt;For centuries, American public policy has treated Indigenous Americans as second class citizens—enforcing migration, barring citizenship, and refusing to give them the fundamental rights granted to them by the Constitution. All of this produced large economic disparities that continue to this day.  Indigenous Americans are 35 percent more likely to be in poverty than non-Indigenous Americans, and their median income is a third lower.  While public policy has historically been used to marginalize Indigenous Americans, it can also be used as a tool to build them up. In this paper, I examine how a tax-funded Universal Basic Income (UBI) would impact Indigenous Americans.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;To conduct the simulation I used data from the Census Bureau’s Annual Social and Economic Supplement (ASEC), which reports on data from 2019.  For each simulation, a UBI is given to every American of all ages and funded by a flat tax on Adjusted Gross Income (AGI).  AGI includes labor and capital income, and subtracts specific deductions like half of the self-employment taxes and contributions to certain retirement accounts.  Unlike taxable income, AGI does not account for most itemized deductions or the standard deduction. I assume no labor supply responses to the new taxes or income.&lt;/p&gt;

&lt;p&gt;For each UBI amount ranging from $0 per month to $1,000 per month, I calculated the necessary tax rates (below; each $100 per month requires a 3.3 percent tax on AGI), and change in poverty rates and income distributions for both Indigenous and non-Indigenous Americans after taxes and the UBI.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Import Libraries
import numpy as np
import pandas as pd
import microdf as mdf
import plotly.express as px

# Import data
person = pd.read_csv('https://github.com/ngpsu22/indigenous-peoples-day/raw/main/cps_00021.csv.gz')

# Create Demographic Columns
person.columns = person.columns.str.lower()
person['child'] = person.age &amp;lt; 18
person['adult'] = person.age &amp;gt;= 18
person['native'] = person.race == 300
person['non_native'] = person.race != 300

# Calculate total AGI
person['adjginc'].replace({99999999: 0}, inplace=True)
population = person.asecwt.sum()
person['weighted_agi'] = person.adjginc * person.asecwt
total_agi = person.weighted_agi.sum()

# Calculate AGI tax rate per dollar of UBI
fed_tax_rate_per_dollar_ubi_monthly = (population * 12) / total_agi

# Create table showing tax amounts
tax_rates = pd.DataFrame(np.arange(0,1001, 50))
tax_rates.columns = ['monthly_ubi']

def tax(monthly_ubi):
    return (monthly_ubi * fed_tax_rate_per_dollar_ubi_monthly * 100).round(1)

def tax_row(row):
    return tax(row.monthly_ubi)

tax_rates['tax_rate'] = tax_rates.apply(tax_row, axis=1)
tax_rates.columns = ['monthly_ubi', 'tax_rate']

fig = px.line(tax_rates, x='monthly_ubi', y='tax_rate')
fig.update_layout(
    title='Tax rate on AGI needed to fund each UBI level',
    xaxis_title='Monthly UBI amount',
    yaxis_title='Required tax rate on adjusted gross income',
    yaxis_ticksuffix='%',
    font=dict(family='Roboto'),
    hovermode='x', 
    xaxis_tickprefix='$',
    xaxis_ticksuffix='',
    plot_bgcolor='white',
    legend_title_text=''
)
fig.update_traces(mode='markers+lines', hovertemplate=None)

fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/indigenous/2020-10-12-indigenous-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;The simulation shows that a tax-funded UBI has the potential to drastically reduce the poverty rate of Indigenous Americans. A UBI of $100 per month would drop Indigenous poverty below the current non-Indigenous poverty rate.  At $250 per month Indigenous poverty rates fall by more than half.  A larger UBI of $1,000 per month would drive Indigenous poverty to less than one percent.&lt;/p&gt;

&lt;p&gt;Beyond just reducing the overall poverty rate a UBI could shrink or eliminate the poverty gap between Indigenous and non-Indigenous Americans.  At all rates of $250 per month or higher, the gap closes within one percentage point.  At all rates of $600 per month or higher, Indigenous poverty is lower than non-Indigenous poverty.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def ubi(race, monthly_ubi):
    &quot;&quot;&quot; Calculate the poverty rate, median resources, mean resources, and 
        percent of people better off for Indigenous and Non-Indigenous
        Americans at a given UBI level.
  
    Args:
        race: a person's race, for this simulation, either Indigenous or
            non-Indigenous.
        monthly_ubi: the monthly cash transfer given to each person.
  
    Returns:
        pd.Series with the following attributes:
        - The poverty rate for the selected group.
        - The median resources per person for the selected group.
        - The mean resources per person for the selected group.
        - The percent of people better off under the program for the selected
          group.
    &quot;&quot;&quot;    

  
    # Create a copy of the person DataFrame
    target_persons = person.copy(deep=True)
    
    # Calculate a person's tax increase
    target_persons['tax_increase'] = (
        fed_tax_rate_per_dollar_ubi_monthly * monthly_ubi * 
        target_persons.adjginc)
    
    # Calculate the total UBI per SPM unit.
    target_persons['total_ubi'] = (
        target_persons.spmnpers * 12 * monthly_ubi)
  
    # Calculate the total tax increase of an SPM unit
    spmu = target_persons.groupby(['spmfamunit'])[['tax_increase']].sum()
    spmu.columns = ['total_tax_increase']
    target_persons = target_persons.merge(spmu,left_on=['spmfamunit'],
                                          right_index=True)
    
    # Calculate each SPM unit's tax rate person
    target_persons['new_spm_resources'] = (target_persons.spmtotres
                                         + target_persons.total_ubi
                                         - target_persons.total_tax_increase)
    
    # Calculate the new resources per person of each SPM unit
    target_persons['new_resources_per_person'] = (
        target_persons.new_spm_resources / target_persons.spmnpers)
      
    # Slice the data based on Race input
    if race == 'native':
        target_persons = target_persons[target_persons.native]
    if race == 'non_native':
        target_persons = target_persons[target_persons.non_native] 
  
    # Calculate the change in poverty rate
    target_persons['poor'] = (target_persons.new_spm_resources 
                            &amp;lt; target_persons.spmthresh)
    total_poor = (target_persons.poor * target_persons.asecwt).sum()
    target_pop = target_persons.asecwt.sum()
    
    # Calculate percent better off
    target_persons['better_off'] = (target_persons.new_spm_resources &amp;gt; 
                                target_persons.spmtotres)
    total_better_off = (
        target_persons.better_off * target_persons.asecwt).sum()
    percent = total_better_off / target_pop * 100

    return pd.Series([
        mdf.weighted_median(target_persons, 'new_resources_per_person',
                            'asecwt').round(0), 
        mdf.weighted_mean(target_persons, 'new_resources_per_person',
                          'asecwt').round(0), 
        (total_poor / target_pop * 100).round(1), percent])

def ubi_row(row):  
    &quot;&quot;&quot; Runs the ubi_pov function across the rows of a DataFrame.
  
    Args:
        row: the row of the DataFrame containing a person's race and the
            monthly UBI amount
  
    Returns:
        pd.Series with the following elements:
        - The poverty rate for the selected row.
        - The median resources per person for the selected row.
        - The mean resources per person for the selected row.
        - The percent of people better off under the program for the selected
            row.
    &quot;&quot;&quot;  
    return ubi(row.race, row.monthly_ubi)

# Create a DataFrame that has each the each monthly UBI amount for each race
# input.
summary = mdf.cartesian_product({'monthly_ubi': np.arange(0, 1001, 50),
                       'race': ['native', 'non_native']})

# Calculate the poverty rate for each row of the summary DataFrame.
summary[['med_resources_per_person', 'mean_resources_per_person',
         'poverty_rate', 'better_off']] = summary.apply(ubi_row, axis=1)

# Format text.
center = {&quot;med_resources_per_person&quot;: &quot;Median resources&quot;,
          &quot;mean_resources_per_person&quot;: &quot;Mean resources&quot;}
race = {&quot;native&quot;: &quot;Indigenous&quot;,
        &quot;non_native&quot;: &quot;Non-Indigenous&quot;}

summary[&quot;race&quot;] =  summary.race.map(race)

COLOR_MAP = {'Indigenous': '#1976D2',  # Blue.
             'Non-Indigenous': '#BDBDBD'  # Gray.
            }


def line_graph(df, x, y, color, title, xaxis_title, yaxis_title):
    &quot;&quot;&quot;Style for line graphs.
    
    Args:
        df: DataFrame with data to be plotted.
        x: The string representing the column in df that holds the new
            spending in billions.
        y: The string representing the column in df that holds the poverty
            rate.
        color: The string representing the UBI type.
        xaxis_title: The string represnting the xaxis-title.
        yaxis_title: The string representing the yaxis-title.
    
    Returns:
        Nothing. Shows the plot.
    &quot;&quot;&quot;
    fig = px.line(df, x=x, y=y, color=color, color_discrete_map=COLOR_MAP)
    fig.update_layout(
        title=title,
        xaxis_title=xaxis_title,
        yaxis_title=yaxis_title,
        yaxis_ticksuffix='%',
        font=dict(family='Roboto'),
        hovermode='x', 
        xaxis_tickprefix='$',
        xaxis_ticksuffix='',
        plot_bgcolor='white',
        legend_title_text=''   
    )
    fig.update_traces(mode='markers+lines', hovertemplate=None)

    return fig

fig = line_graph(df=summary, x='monthly_ubi', 
           y='poverty_rate', color='race',
           title='The impact of a UBI on Indigenous and Non-Indigenous poverty',
           xaxis_title='Monthly UBI',
           yaxis_title='SPM poverty rate')
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/indigenous/2020-10-12-indigenous-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;A UBI funded by a flat tax would not just benefit those currently living in poverty; our simulation finds that 83 percent of Indigenous Americans would be better off under the program, regardless of the amount.&lt;/p&gt;

&lt;p&gt;Further, a UBI could reduce both the median and mean income gaps between Indigenous and non-Indigenous Americans.  A $500 per month UBI shrinks the gap in both median and mean resources by about a third.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Add commas
def comma(num):
    return num.astype(int).apply(&quot;{:,}&quot;.format)

summary[&quot;med_resources_per_person&quot;] = comma(summary.med_resources_per_person)
summary[&quot;mean_resources_per_person&quot;] = comma(summary.mean_resources_per_person)

# Create identifier columns
summary_long = pd.melt(summary,
                       id_vars=[&quot;monthly_ubi&quot;, &quot;race&quot;],
                       value_vars=['med_resources_per_person',
                                   'mean_resources_per_person'],
                       var_name=&quot;resource&quot;,
                       value_name=&quot;y&quot;)

summary_long[&quot;resource&quot;] = summary_long.resource.map(center)

# Plot
fig = px.bar(summary_long,
             x='resource',
             y=&quot;y&quot;,
             color=&quot;race&quot;,
             barmode='group',
             animation_frame='monthly_ubi',
             text='y',
             labels={&quot;race&quot;: &quot;Race&quot;,
                     &quot;monthly_ubi&quot;: &quot;Monthly UBI&quot;,
                     &quot;y&quot;: &quot;Resources per person&quot;,
                     &quot;resource&quot;: &quot;Metric&quot;
                    },
             color_discrete_map=COLOR_MAP,
             title=&quot;Tax-funded UBI and median/mean resources per person&quot;,
             range_y=[0, 32_000]
    )
fig.update_traces(texttemplate='$%{text}')
fig.update_layout(xaxis_title='',
                  yaxis_tickprefix='$',
                  uniformtext_minsize=9,
                  plot_bgcolor='white',
                  font=dict(family='Roboto'),
                  legend_title_text='')
fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/indigenous/2020-10-12-indigenous-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Disparities between Indigenous and non-Indigenous Americans are not limited to income: inequities persist in &lt;a href=&quot;https://education.wsu.edu/documents/2015/08/native-american-achievement-gap-report.pdf/&quot;&gt;education&lt;/a&gt;, &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2567901/&quot;&gt;health outcomes&lt;/a&gt;, &lt;a href=&quot;https://www.bjs.gov/content/pub/pdf/aic.pdf&quot;&gt;incarceration rates&lt;/a&gt;, and &lt;a href=&quot;http://ssrc-static.s3.amazonaws.com/wp-content/uploads/2015/04/Geographies-of-Opportunity-4.22.2015.pdf&quot;&gt;life expectancy&lt;/a&gt;.  However, evidence suggests that cash transfers could help close these gaps as well.  One &lt;a href=&quot;https://www.aeaweb.org/articles?id=10.1257/app.2.1.86&quot;&gt;study&lt;/a&gt; followed a group of Cherokee Indian families that received unconditional cash transfers of approximately $4,000 annually as part of a profit sharing agreement from a local casino. When recipients of the dividend were compared to residents nearby that did not receive it, researchers found that an additional $4,000 per year for the poorest households increased educational attainment of children by one year by age 21, and reduced the chance of committing a minor crime by 22 percent for 16 and 17 year olds.  They also documented a decline in teenage pregnancy and substance abuse.  Other studies found cash transfers reduce &lt;a href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3380033&quot;&gt;child obesity&lt;/a&gt;, improve &lt;a href=&quot;http://eprints.lse.ac.uk/58059/1/__lse.ac.uk_storage_LIBRARY_Secondary_libfile_shared_repository_Content_STICERD_PEP%20discussion%20papers_pep01.pdf&quot;&gt;health outcomes&lt;/a&gt;, and increase &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5510957/&quot;&gt;life expectancy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In short, UBI is a policy tool that has already been successfully trialed in Indigenous communities, and which has the potential to radically change the life of the average Indigenous American for the better.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Nate Golden</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="indigenous americans" />
      

      
        <summary type="html">Policies of at least $250 per month would close the Indigenous/non-Indigenous poverty gap.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">One in five Americans with disabilities is in poverty. Even small basic incomes would help.</title>
      <link href="/ada30" rel="alternate" type="text/html" title="One in five Americans with disabilities is in poverty. Even small basic incomes would help." />
      <published>2020-07-31T00:00:00+00:00</published>
      <updated>2020-07-31T00:00:00+00:00</updated>
      <id>/ada30</id>
      <content type="html" xml:base="/ada30">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;As the Americans with Disabilities Act reaches its 30th anniversary, we wanted to look beyond the workplace to poverty, safety net programs, and basic income. Today, more than 1 in 5 Americans with disabilities live below the poverty threshold, nearly twice the rate of Americans without disabilities.&lt;/p&gt;

&lt;p&gt;While America provides some income support to its citizens with disabilities through Supplemental Security Income (SSI) and Social Security Disability Insurance (SSDI), these programs inevitably leave many out.  Today, 22% of households with people with disabilities do not receive any federal government assistance.  Further, just 14% of households of families where someone is disabled collected SSI, a program “designed to help aged, blind, and &lt;a href=&quot;https://www.ssa.gov/ssi/&quot;&gt;disabled people&lt;/a&gt;, who have little or no income.”  Unemployment insurance was the only program in our analysis that was more likely to go to families without people with disabilities&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
### LOAD PACKAGES ####

import pandas as pd
import plotly.express as px
import microdf as mdf
import numpy as np

### COLORS ###

# Colors from https://material.io/design/color/the-color-system.html
BLUE = '#1976D2'
DARK_BLUE = '#0D47A1'
BARELY_BLUE = '#E3F2FD'
GRAY = '#BDBDBD'


### LOAD DATA ###

person_raw = pd.read_csv('https://github.com/MaxGhenis/datarepo/raw/master/pppub19.csv.gz',
                         usecols=['MARSUPWT', 'SPM_ID', 'SPM_RESOURCES',
                                  'SPM_POVTHRESHOLD', 'A_AGE', 'PEDISDRS',
                                  'PEDISEAR', 'PEDISEYE', 'PEDISOUT',
                                  'PEDISPHY', 'PEDISREM', 'SPM_NUMPER',
                                  'SS_VAL', 'SSI_VAL', 'SPM_SNAPSUB',
                                  'PAW_TYP', 'SPM_CAPHOUSESUB', 'UC_VAL'])

### PREPROCESS ###

person = person_raw.copy(deep = True)
person.columns = person.columns.str.lower()
person['weight'] = person.marsupwt / 100
# Create a new dataframe that only includes adults.
adults = person[person['a_age'] &amp;gt; 17].copy(deep=True)

# Create a column that shows if people have any disabilities.
adults['any_disability'] = ((adults.pedisdrs == 1) | 
                            (adults.pedisear == 1) | 
                            (adults.pediseye == 1) |
                            (adults.pedisout == 1) | 
                            (adults.pedisphy == 1) |
                            (adults.pedisrem == 1))

# Map the ASEC codes to disability types.
PWD_MAP = ({'pedisdrs': 'Self-care',
            'pedisear': 'Hearing',
            'pediseye': 'Vision',
            'pedisout': 'Mobility',
            'pedisphy': 'Physical',
            'pedisrem': 'Cognitive',
            'any_disability': 'Any'
           })

# group individual questions by spm group
adults['got_tanf'] = np.where(adults.paw_typ == 1, 1, 0)
PERSON_SPM_COLS = ['ss_val', 'ssi_val', 'uc_val', 'got_tanf']
groups = adults.groupby('spm_id')[PERSON_SPM_COLS].sum()
groups.columns = ['spm_' + i for i in PERSON_SPM_COLS]
adults2 = adults.merge(groups, left_on='spm_id', right_index=True)
# Also look into OI_OFF column: Value 3 = AFDC

# All PWD records.
adults_pwd = adults2[adults2.any_disability]

# Note these columns don't represent anything consistent
# except that &amp;gt;0 values indicate that the SPM unit received it.

# create a columns map
BEN_MAP = ({'spm_ss_val': 'Social Security', 
            'spm_ssi_val': 'Supplemental Security Income',
            'spm_got_tanf': 'TANF',
            'spm_uc_val': 'Unemployment',
            'spm_snapsub': 'SNAP',
            'spm_caphousesub': 'Housing Assistance',
            'spm_any_ben': 'Any'
            })

# Sum up all columns except the last (which is any, itself).
adults2['spm_any_ben'] = adults2[list(BEN_MAP.keys())[:-1]].sum(axis=1)


# Create a function that calculates percent of people with disabilities
# receiving each benefit.
def percent_bens(ben_column, has_disability):
    target_adults = adults2[adults2.any_disability == has_disability]
    total_w_ben = ((target_adults[ben_column] &amp;gt; 0) * target_adults.weight)
    return ((total_w_ben.sum() / target_adults.weight.sum()) * 100).round(1)

def percent_bens_row(row):
    return percent_bens(row.ben_column, row.has_disability)

benefits = mdf.cartesian_product({'ben_column': BEN_MAP.keys(),
                                  'has_disability': [True, False]
                                  })

benefits['percentage'] = benefits.apply(percent_bens_row, axis=1)
benefits['benefit'] = benefits.ben_column.map(BEN_MAP)
benefits = (benefits.sort_values(['percentage','benefit'],
                               ascending=(True, True)))
benefits['disability_text'] = np.where(benefits.has_disability,
                                       'Has disability', 'No disability')

fig = px.bar(benefits, x='percentage', y='benefit', color='disability_text',
             labels={'percentage': 'Percent receiving benefit',
                      'benefit': 'Benefit'},
             title='Share of Americans in families receiving benefits',
             text='percentage',
             orientation='h',
             barmode='group',
             color_discrete_map={'Has disability': BLUE, 'No disability': GRAY}
)

fig.update_layout(barmode='group',
                  font=dict(family='Roboto'),
                  plot_bgcolor='white',
                  yaxis_title='',
                  legend_title='',
                  xaxis_ticksuffix='%',
                  legend={'traceorder': 'reversed'}
                 )

fig.update_traces(texttemplate='%{text}%')

fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/ada30/2020-07-31-ada30-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Universal payments would ensure that all households receive government assistance.  The remainder of this paper examines how universal payments can alleviate poverty for Americans with disabilities.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;To conduct this analysis, we used the most recent Current Population Survey March Supplement, which reflects 2018 income.  Using this data, we simulated how various UBI levels impact the poverty rate of Americans with a variety of disabilities. For reference, the chart below shows the amount of Americans identifying with each type of disability.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# data for bar graph that shows amount of people with each disability

total_cognitive_m = (adults.weight * (adults.pedisrem==1)).sum()/1e6
total_mobility_m = (adults.weight * (adults.pedisout==1)).sum()/1e6
total_self_care_m = (adults.weight * (adults.pedisdrs==1)).sum()/1e6
total_physical_m = (adults.weight * (adults.pedisphy==1)).sum()/1e6 
total_vision_m = (adults.weight * (adults.pediseye==1)).sum()/1e6
total_hearing_m = (adults.weight* (adults.pedisear==1)).sum()/1e6
total_pwd_m = (adults.weight * adults.any_disability).sum()/1e6
total_pwd = (adults.weight * adults.any_disability).sum()

total_dict = {'disability_type': ['Cognitive', 'Mobility', 'Self-care', 'Physical',
                       'Vision', 'Hearing', 'Any'],
              'total_millions': [total_cognitive_m, total_mobility_m, total_self_care_m, 
                        total_physical_m, total_vision_m, total_hearing_m,
                        total_pwd_m] 
}

total_df = pd.DataFrame(total_dict)
total_df = total_df.round(1)
total_df = (total_df.sort_values(['total_millions','disability_type'],
                               ascending=(False, True)))

fig = px.bar(total_df, x = 'total_millions', y='disability_type',
             title='Number of adults reporting each disability type',
             color='disability_type',
             text='total_millions',
             orientation = 'h',
             color_discrete_map={'Cognitive': BLUE,
                                 'Mobility': BLUE,
                                 'Self-care': BLUE,
                                 'Physical': BLUE,
                                 'Vision': BLUE,
                                 'Hearing': BLUE,
                                 'Any': DARK_BLUE})

fig.update_layout(showlegend=False,
                  xaxis_ticksuffix='M',
                  font=dict(family='Roboto'),
                  plot_bgcolor='white',
                  xaxis_title='',
                  yaxis_title=''
                 )
fig.update_traces(texttemplate='%{text}M')

fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/ada30/2020-07-31-ada30-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;findings&quot;&gt;Findings&lt;/h2&gt;
&lt;p&gt;We found that  a UBI has the potential to drastically reduce poverty among adults with disabilities and that a $300 monthly UBI would cut the poverty rate in half, from 20.7 percent to 9.2 percent.  A UBI of $1,000 per month, such as in &lt;a href=&quot;https://www.ubicenter.org/plans&quot;&gt;Andrew Yang’s Freedom Dividend&lt;/a&gt;, would shrink the poverty rate among people with disabilities to 1.3 percent.&lt;/p&gt;

&lt;p&gt;With the status quo, poverty rates are highest among people with cognitive, physical, and self-care disabilities, which all exceed 24 percent.  A UBI of $500 per month would slash all these rates below 7 percent, a third of their current level.&lt;/p&gt;

&lt;p&gt;The interactive chart below shows the poverty rate for each group with various monthly UBI levels up to $1,000 at $100 intervals.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Determine the poverty rate impact for Americans with disabilities of a UBI from $0 per month to $1000 per month

def pwd_pov(type_of_disability, monthly_ubi=0):
    target_persons = adults[adults[type_of_disability]==1].copy(deep=True)
    target_persons['total_ubi'] = person.spm_numper * monthly_ubi * 12
    target_persons['new_spm_resources'] = (target_persons.total_ubi
                                           + target_persons.spm_resources)
    target_persons['poor'] = (target_persons.new_spm_resources 
                              &amp;lt; target_persons.spm_povthreshold)
    population_target = target_persons.weight.sum()
    total_target_poor = (target_persons.poor * target_persons.weight).sum()
    total_pov_rate = total_target_poor / population_target

    return (total_pov_rate * 100).round(1)

def pwd_pov_row(row):
    return pwd_pov(row.type_of_disability, row.monthly_ubi)

# Create a dataframe that summarizes the outputs of the function

summary = mdf.cartesian_product({'type_of_disability':PWD_MAP,
                       'monthly_ubi': np.arange(0,1001,100)})

summary['poverty_rate'] = summary.apply(pwd_pov_row, axis=1)
summary['disability_type'] = summary.type_of_disability.map(PWD_MAP)
summary = (summary.sort_values(['poverty_rate','disability_type'],
                               ascending=(False, True)))

# Add new rows for the difference between original and current (w/UBI) pov.
original_pov = summary[summary.monthly_ubi == 0].copy(deep=True)
original_pov.drop(['monthly_ubi', 'disability_type'], axis=1, inplace=True)
original_pov.rename(columns = {'poverty_rate': 'original_poverty_rate'},
                    inplace=True)
summary = summary.merge(original_pov, on='type_of_disability')

# Calculate the difference
summary['poverty_delta'] = (summary.original_poverty_rate -
                            summary.poverty_rate).round(1)

SUM_MAP = ({'poverty_rate': 'People in poverty',
            'poverty_delta': 'People no longer in poverty'})

summary_long = summary.melt(id_vars=['disability_type', 'monthly_ubi',
                                     'original_poverty_rate'],
                            value_vars=['poverty_rate', 'poverty_delta'])
summary_long['poverty_in_out'] = summary_long.variable.map(SUM_MAP)
summary_long.sort_values(['original_poverty_rate', 'monthly_ubi'],
                         ascending=[True, True], inplace=True)

fig = px.bar(summary_long, x='value', y='disability_type',
             color='poverty_in_out',
             animation_frame='monthly_ubi', range_x=[0,25],
             labels={&quot;value&quot;: &quot;SPM poverty rate&quot;,
                     &quot;disability_type&quot;: &quot;Disability type&quot;,
                     &quot;monthly_ubi&quot;: &quot;Monthly UBI&quot;
                    },
             title='Effect of UBI on poverty among adults with disabilities',
             orientation='h',
             color_discrete_map={'People in poverty': BLUE,
                                 'People no longer in poverty': BARELY_BLUE
                                }
             )

fig.update_layout(xaxis_ticksuffix='%',
                  plot_bgcolor='white',
                  font=dict(family='Roboto'),
                  legend_title_text=''
                 )

fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/ada30/2020-07-31-ada30-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This research fits a growing trend, that stripping benefits of their bureaucracy, and making payments truly universal, is often the simplest way to reach target groups.  Programs that impose administrative burdens will continue to miss many Americans with disabilities, while a UBI will not.  Still, it is important to acknowledge that cash transfers alone are not sufficient in protecting the rights of Americans with disabilities and that  we should follow disability rights advocates in the fight for equal access to healthcare, transportation, independent living, and more workplace portections.   But reducing poverty among people with disabilities is a worthy goal of its own, and our analysis shows that a UBI would be a powerful tool in accomplishing that aim.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;nate&quot;, &quot;max&quot;]</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="disability" />
      
        <category term="poverty" />
      

      
        <summary type="html">$300 per month would cut the rate to one in ten.</summary>
      

      
      
    </entry>
  
</feed>
